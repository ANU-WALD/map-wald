{"version":3,"file":"point-selection.service.d.ts","sources":["point-selection.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA","sourcesContent":["import { Observable } from 'rxjs';\nimport { PointData, LayerTagValue } from './data/catalog';\nimport { Feature, GeometryObject } from 'geojson';\nimport { MetadataService } from './metadata.service';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc0 from '@angular/core';\nexport interface PointSelection {\n    catalog: PointData;\n    variable: string;\n    feature: Feature<GeometryObject>;\n    tags: {\n        [key: string]: string;\n    };\n}\nexport declare class PointSelectionService {\n    private meta;\n    private latestPointSelectionSource;\n    latestPointSelection: Observable<PointSelection>;\n    constructor(meta: MetadataService);\n    private unchanged;\n    pointSelection(sel: PointSelection): void;\n    fullUrl(sel: PointSelection): string;\n    validUrl(url: string): boolean;\n    timeseriesVariables(sel: PointSelection): Observable<LayerTagValue[]>;\n    static ɵfac: ɵngcc0.ɵɵFactoryDef<PointSelectionService, never>;\n    static ɵprov: ɵngcc0.ɵɵInjectableDef<PointSelectionService>;\n    static ɵfac: ɵngcc0.ɵɵFactoryDef<PointSelectionService, never>;\n    static ɵprov: ɵngcc0.ɵɵInjectableDef<PointSelectionService>;\n    static ɵfac: ɵngcc0.ɵɵFactoryDef<PointSelectionService, never>;\n    static ɵprov: ɵngcc0.ɵɵInjectableDef<PointSelectionService>;\n}\n"]}