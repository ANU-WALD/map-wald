{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://map-wald/tree-filter.service.ts","ng://map-wald/colorbrewer.ts","ng://map-wald/palette.service.ts","ng://map-wald/time-utils.service.ts","ng://map-wald/static-data.service.ts","ng://map-wald/opendap.service.ts","ng://map-wald/metadata.service.ts","ng://map-wald/timeseries.service.ts","ng://map-wald/interpolation.service.ts","ng://map-wald/point-selection.service.ts","ng://map-wald/available-dates.service.ts","ng://map-wald/data/catalog.ts","ng://map-wald/data/mapped-layer.ts","ng://map-wald/catalog.service.ts","ng://map-wald/map-view.service.ts","ng://map-wald/wms.service.ts","ng://map-wald/projection.service.ts","ng://map-wald/index.ts","ng://map-wald/parsing/csv.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__values","o","m","Symbol","iterator","call","next","value","done","__read","n","e","ar","push","error","__spread","concat","TreeFilterService","prototype","filterTree","tree","filterText","_this","this","visible","trim","toLowerCase","label","indexOf","containsFilterText","hasOwnProperty","children","forEach","child","showAll","map","expanded","Injectable","palettes","Accent","3","4","5","6","7","8","type","Blues","9","BrBG","10","11","BuGn","BuPu","Dark2","GnBu","Greens","Greys","OrRd","Oranges","PRGn","Paired","12","Pastel1","Pastel2","PiYG","PuBu","PuBuGn","PuOr","PuRd","Purples","RdBu","RdGy","RdPu","RdYlBu","RdYlGn","Reds","Set1","Set2","Set3","Spectral","YlGn","YlGnBu","YlOrBr","YlOrRd","PaletteService","_http","namedPalettes","_source","val","getPalette","name","reverse","numColours","palette","of","slice","get","responseType","pipe","text","parseNCWMSPalette","txt","split","ln","replace","filter","join","colourIndex","min","max","count","point","Math","round","HttpClient","utcDate","y","Date","UTC","TimeUtilsService","specialDates","yesterday","setDate","getDate","convertDate","date","dateText","_a","year","month","day","getUTCDate","getUTCMonth","getUTCFullYear","datesEqual","lhs","rhs","StaticDataService","http","cache","host","path","url","uniqueUrl","getTime","publishReplay","refCount","OpendapService","makeURL","filepath","getData","queryUrl","das","simplify","parseData","getDAS","parseDAS","getDDX","parseDDX","getExtent","console","log","forkJoin","switchMap","_b","theDAS","ll","lats","latitude","lons","longitude","dapRangeQuery","from","to","step","undefined","LAT_NAMES","LNG_NAMES","TIME_NAMES","MetadataService","dap","ddxCache","dasCache","timeCache","identifyCoordinate","ddx","possibleNames","_i","possibleNames_1","tslib_1.__values","possibleNames_1_1","variables","file","ddxForUrl","getDDXForLayer","ml","flattenedSettings","interpolatedFile","dasForUrl","getDASForLayer","getMetadata","software","meta","assign","attr","layer","variable","populateMetadata","subscribe","entry","setTimeout","retrievedMetadata","getGrid","getGridForURL","ddx$","das$","metadata","latCoord","apply","lngCoord","lat$","dd","lng$","switchAll","getGridForLayer","getSpatialExtent","lngs","east","west","north","south","getTimeDimension","getTimeDimensionForURL","res$","timeCoord","shareReplay","TimeseriesService","getTimeseries","pt","additionalIndices","fillValue","latsAndLngs","latIndex","indexInDimension","lat","lngIndex","lng","_FillValue","query","makeTimeQuery","data","vals","dates","time","t","values","v","NaN","getTimeseriesForLayer","dimensions","dim","dName","minIndex","maxIndex","currentIndex","rev","floor","d1","abs","d2","InterpolationService","isDefined","interpolate","expr","params","templateMatcher","substring","b","getValue","keys","shift","PointSelectionService","latestPointSelectionSource","BehaviorSubject","latestPointSelection","asObservable","unchanged","current","updated","tags","every","catalog","feature","pointSelection","sel","fullUrl","validUrl","properties","timeseriesVariables","coords","coordinates","dims","coord","find","displayFormat","fmt","long_name","AvailableDatesService","fnForYear","mapped","publication","publications","options","availableDates","fn","timeshift","timePeriod","containsYear","prev$","years","res","setUTCDate","timestep","NAMED_OPTIONS","interval","clone","JSON","parse","stringify","matchFirstDefinedKey","keys_1","keys_1_1","k","propagate","source","skipPublications","sources","result","p","Publication","j","match","findIndex","pub","skip","mergeArraysByKeys","instantiateNamedOptions","dest","configKey","lookup","CatalogOptions","Catalog","config","themes","Theme","propagateOptions","allLayers","layers","reduce","prev","curr","l","Layer","dataCreator","PUBLICATION_PRIORITY_ORDER","components","pop","ɵ1","downloadPath","MAKE_DOWNLOAD_URL","tds","ɵ0","static","WMS_PARAMETER_NAMES","geoserver","esri","WMS_URL_FORMAT","INTERPOLATED_PARAMETERS","MappedLayer","wmsParameters","opacity","layerType","description","descriptionField","leading0","defaultPublication","priorityPublication","pp","lp","update","baseURL","decade","mapParams","mapOptions","getFullYear","toString","getMonth","timeFormat","interpolatedDownloadURL","downloadLink","legend","legendURL","vectors","styles_1","styles","_styleFunc","f","param","titleFormat","title","CatalogService","load","catalogJSON","smallExtent","spatialExtent","findExtentOfLayer","loadFrom","tap","json","_","tmp","MapViewParameterService","_location","MapViewParameterService_1","parameterNames","changes","go","constructRoute","retrieveFromRoute","route","_c","name_1","snapshot","parameters","routerPaths","unshift","Location","D2R","PI","WMSService","webMercator","proj4.default","proj4","Proj","pointToWebMercator","ptRadians","x","forward","computeTileBounds","zoom","proj","getProjection","zfactor","pow","xScale","WMSService_1","TILE_WIDTH","yScale","TILE_HEIGHT","topLeftLatLng","fromPointToLatLng","bottomRightLatLng","topLeftWebMercator","bottomRightWebMercator","toFixed","buildImageMap","getMap","getURL","getOptions","getOpacity","me","window","google","maps","ImageMapType","getTileUrl","theMap","bbox","layerParams","width","height","tileSize","Size","TILE_SIZE","isPng","ProjectionService","services","MapWaldCoreModule","forRoot","moduleInitialisation","ngModule","MapWaldCoreModule_1","providers","NgModule","imports","CommonModule","FormsModule","HttpClientModule","declarations","exports","columns","lines","header","dateComponents","some","isNaN","numeric","parseVal"],"mappings":"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,mBACA,kBACA,kBACA,gBACA,iBAEFF,KAAM,OAERG,KAAM,CACJC,GAAI,CACF,eACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,gBACA,gBAEFC,GAAI,CACF,eACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,gBACA,gBAEFX,EAAG,CACD,mBACA,mBACA,mBAEFC,EAAG,CACD,iBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,iBACA,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,iBACA,mBACA,mBACA,mBACA,kBACA,iBAEFC,EAAG,CACD,iBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBAEFG,EAAG,CACD,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBAEFF,KAAM,OAERM,KAAM,CACJZ,EAAG,CACD,mBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,gBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,gBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,gBACA,gBAEFF,KAAM,OAERO,KAAM,CACJb,EAAG,CACD,mBACA,mBACA,mBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,mBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,mBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,gBAEFF,KAAM,OAERQ,MAAO,CACLd,EAAG,CACD,kBACA,gBACA,oBAEFC,EAAG,CACD,kBACA,gBACA,mBACA,mBAEFC,EAAG,CACD,kBACA,gBACA,mBACA,kBACA,mBAEFC,EAAG,CACD,kBACA,gBACA,mBACA,kBACA,kBACA,kBAEFC,EAAG,CACD,kBACA,gBACA,mBACA,kBACA,kBACA,iBACA,mBAEFC,EAAG,CACD,kBACA,gBACA,mBACA,kBACA,kBACA,iBACA,kBACA,oBAEFC,KAAM,QAERS,KAAM,CACJf,EAAG,CACD,mBACA,mBACA,mBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,iBAEFF,KAAM,OAERU,OAAQ,CACNhB,EAAG,CACD,mBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,iBACA,iBACA,gBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,iBACA,gBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,iBACA,gBACA,gBAEFF,KAAM,OAERW,MAAO,CACLjB,EAAG,CACD,mBACA,mBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,gBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,gBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,gBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,gBACA,iBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,gBACA,gBACA,cAEFF,KAAM,OAERY,KAAM,CACJlB,EAAG,CACD,mBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,kBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,kBACA,iBACA,gBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,iBACA,gBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,gBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,gBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,eACA,gBAEFF,KAAM,OAERa,QAAS,CACPnB,EAAG,CACD,mBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,kBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,kBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,kBACA,gBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,gBACA,iBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,gBACA,gBACA,iBAEFF,KAAM,OAERc,KAAM,CACJV,GAAI,CACF,eACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,iBACA,gBAEFC,GAAI,CACF,eACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,iBACA,gBAEFX,EAAG,CACD,mBACA,mBACA,oBAEFC,EAAG,CACD,kBACA,mBACA,mBACA,iBAEFC,EAAG,CACD,kBACA,mBACA,mBACA,mBACA,iBAEFC,EAAG,CACD,kBACA,mBACA,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,kBAEFG,EAAG,CACD,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,kBAEFF,KAAM,OAERe,OAAQ,CACNX,GAAI,CACF,mBACA,kBACA,mBACA,iBACA,mBACA,iBACA,mBACA,iBACA,mBACA,mBAEFC,GAAI,CACF,mBACA,kBACA,mBACA,iBACA,mBACA,iBACA,mBACA,iBACA,mBACA,kBACA,oBAEFW,GAAI,CACF,mBACA,kBACA,mBACA,iBACA,mBACA,iBACA,mBACA,iBACA,mBACA,kBACA,mBACA,kBAEFtB,EAAG,CACD,mBACA,kBACA,oBAEFC,EAAG,CACD,mBACA,kBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,kBACA,mBACA,iBACA,oBAEFC,EAAG,CACD,mBACA,kBACA,mBACA,iBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,kBACA,mBACA,iBACA,mBACA,iBACA,oBAEFC,EAAG,CACD,mBACA,kBACA,mBACA,iBACA,mBACA,iBACA,mBACA,kBAEFG,EAAG,CACD,mBACA,kBACA,mBACA,iBACA,mBACA,iBACA,mBACA,iBACA,oBAEFF,KAAM,QAERiB,QAAS,CACPvB,EAAG,CACD,mBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBAEFF,KAAM,QAERkB,QAAS,CACPxB,EAAG,CACD,mBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBAEFC,KAAM,QAERmB,KAAM,CACJf,GAAI,CACF,gBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,kBAEFC,GAAI,CACF,gBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,kBAEFX,EAAG,CACD,mBACA,mBACA,oBAEFC,EAAG,CACD,kBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,kBACA,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,kBACA,mBACA,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBAEFG,EAAG,CACD,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBAEFF,KAAM,OAERoB,KAAM,CACJ1B,EAAG,CACD,mBACA,mBACA,mBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,iBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,gBACA,gBAEFF,KAAM,OAERqB,OAAQ,CACN3B,EAAG,CACD,mBACA,mBACA,mBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,iBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,gBACA,gBAEFF,KAAM,OAERsB,KAAM,CACJlB,GAAI,CACF,gBACA,gBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,iBACA,gBAEFC,GAAI,CACF,gBACA,gBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,gBAEFX,EAAG,CACD,kBACA,mBACA,oBAEFC,EAAG,CACD,gBACA,kBACA,mBACA,kBAEFC,EAAG,CACD,gBACA,kBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,gBACA,kBACA,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,gBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,gBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBAEFG,EAAG,CACD,gBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBAEFF,KAAM,OAERuB,KAAM,CACJ7B,EAAG,CACD,mBACA,mBACA,mBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,iBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,gBACA,iBAEFF,KAAM,OAERwB,QAAS,CACP9B,EAAG,CACD,mBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,iBAEFF,KAAM,OAERyB,KAAM,CACJrB,GAAI,CACF,gBACA,iBACA,iBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,gBAEFC,GAAI,CACF,gBACA,iBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,gBAEFX,EAAG,CACD,kBACA,mBACA,oBAEFC,EAAG,CACD,gBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,gBACA,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBACA,mBACA,mBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBAEFC,EAAG,CACD,iBACA,iBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBAEFG,EAAG,CACD,iBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBAEFF,KAAM,OAER0B,KAAM,CACJtB,GAAI,CACF,gBACA,iBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,gBACA,iBAEFC,GAAI,CACF,gBACA,iBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,gBACA,iBAEFX,EAAG,CACD,kBACA,mBACA,oBAEFC,EAAG,CACD,gBACA,mBACA,mBACA,iBAEFC,EAAG,CACD,gBACA,mBACA,mBACA,mBACA,iBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBACA,mBACA,iBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,iBAEFC,EAAG,CACD,iBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBAEFG,EAAG,CACD,iBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBAEFF,KAAM,OAER2B,KAAM,CACJjC,EAAG,CACD,mBACA,mBACA,mBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,kBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,iBACA,iBAEFF,KAAM,OAER4B,OAAQ,CACNxB,GAAI,CACF,gBACA,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBAEFC,GAAI,CACF,gBACA,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBAEFX,EAAG,CACD,kBACA,mBACA,oBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBACA,mBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBACA,mBACA,mBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBAEFC,EAAG,CACD,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBAEFG,EAAG,CACD,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBAEFF,KAAM,OAER6B,OAAQ,CACNzB,GAAI,CACF,gBACA,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,iBACA,iBAEFC,GAAI,CACF,gBACA,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,iBAEFX,EAAG,CACD,kBACA,mBACA,mBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,kBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBACA,kBACA,kBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBAEFC,EAAG,CACD,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBAEFG,EAAG,CACD,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBAEFF,KAAM,OAER8B,KAAM,CACJpC,EAAG,CACD,mBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,kBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,kBACA,iBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,iBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,iBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,iBACA,iBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,iBACA,iBACA,iBAEFF,KAAM,OAER+B,KAAM,CACJrC,EAAG,CACD,iBACA,kBACA,kBAEFC,EAAG,CACD,iBACA,kBACA,iBACA,mBAEFC,EAAG,CACD,iBACA,kBACA,iBACA,kBACA,kBAEFC,EAAG,CACD,iBACA,kBACA,iBACA,kBACA,iBACA,mBAEFC,EAAG,CACD,iBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBAEFC,EAAG,CACD,iBACA,kBACA,iBACA,kBACA,iBACA,kBACA,iBACA,oBAEFG,EAAG,CACD,iBACA,kBACA,iBACA,kBACA,iBACA,kBACA,iBACA,mBACA,oBAEFF,KAAM,QAERgC,KAAM,CACJtC,EAAG,CACD,mBACA,kBACA,oBAEFC,EAAG,CACD,mBACA,kBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,kBACA,mBACA,mBACA,mBAEFC,EAAG,CACD,mBACA,kBACA,mBACA,mBACA,kBACA,mBAEFC,EAAG,CACD,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,oBAEFC,EAAG,CACD,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,oBAEFC,KAAM,QAERiC,KAAM,CACJ7B,GAAI,CACF,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,oBAEFC,GAAI,CACF,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,oBAEFW,GAAI,CACF,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBAEFtB,EAAG,CACD,mBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,mBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBAEFF,KAAM,QAERkC,SAAU,CACR9B,GAAI,CACF,gBACA,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBAEFC,GAAI,CACF,gBACA,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBAEFX,EAAG,CACD,kBACA,mBACA,oBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBACA,mBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBACA,mBACA,mBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBAEFC,EAAG,CACD,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBAEFG,EAAG,CACD,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBAEFF,KAAM,OAERmC,KAAM,CACJzC,EAAG,CACD,mBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,iBACA,iBACA,gBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,iBACA,gBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,iBACA,gBACA,gBAEFF,KAAM,OAERoC,OAAQ,CACN1C,EAAG,CACD,mBACA,mBACA,mBAEFC,EAAG,CACD,mBACA,mBACA,kBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,kBACA,kBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,kBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,kBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,iBACA,gBAEFF,KAAM,OAERqC,OAAQ,CACN3C,EAAG,CACD,mBACA,kBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,kBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,kBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,kBACA,kBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,kBACA,kBACA,kBACA,gBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,gBACA,iBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,gBACA,gBACA,iBAEFF,KAAM,OAERsC,OAAQ,CACN5C,EAAG,CACD,mBACA,kBACA,kBAEFC,EAAG,CACD,mBACA,kBACA,kBACA,kBAEFC,EAAG,CACD,mBACA,kBACA,kBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,kBACA,kBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,kBACA,kBACA,iBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,iBACA,iBAEFC,KAAM,QC3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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { TreeModel } from './data/tree';\n\n@Injectable()\nexport class TreeFilterService {\n\n  constructor() {\n  }\n\n  filterTree(tree: TreeModel, filterText: string) {\n\n    tree.visible = false;\n\n    filterText = filterText.trim().toLowerCase();\n\n    const containsFilterText = (label: string, filterText: string) => label.trim().toLowerCase().indexOf(filterText) !== -1;\n\n    tree.visible = containsFilterText(tree.label, filterText);\n\n    if (tree.hasOwnProperty(\"children\")) {\n      if(tree.visible){\n        tree.children.forEach(child=>this.showAll(child));\n      } else {\n        tree.children.map(child => {\n          this.filterTree(child, filterText);\n\n          tree.visible = tree.visible || child.visible;\n          tree.expanded = tree.expanded || child.visible || child.expanded;\n        });\n      }\n    }\n\n    return tree;\n\n  }\n\n  showAll(tree:TreeModel){\n    tree.visible=true;\n    if (tree.hasOwnProperty(\"children\")) {\n      tree.children.forEach(c=>this.showAll(c));\n    }\n  }\n}\n","export const palettes:any = {\n  Accent: {\n    3: [\n      \"rgb(127,201,127)\",\n      \"rgb(190,174,212)\",\n      \"rgb(253,192,134)\"\n    ],\n    4: [\n      \"rgb(127,201,127)\",\n      \"rgb(190,174,212)\",\n      \"rgb(253,192,134)\",\n      \"rgb(255,255,153)\"\n    ],\n    5: [\n      \"rgb(127,201,127)\",\n      \"rgb(190,174,212)\",\n      \"rgb(253,192,134)\",\n      \"rgb(255,255,153)\",\n      \"rgb(56,108,176)\"\n    ],\n    6: [\n      \"rgb(127,201,127)\",\n      \"rgb(190,174,212)\",\n      \"rgb(253,192,134)\",\n      \"rgb(255,255,153)\",\n      \"rgb(56,108,176)\",\n      \"rgb(240,2,127)\"\n    ],\n    7: [\n      \"rgb(127,201,127)\",\n      \"rgb(190,174,212)\",\n      \"rgb(253,192,134)\",\n      \"rgb(255,255,153)\",\n      \"rgb(56,108,176)\",\n      \"rgb(240,2,127)\",\n      \"rgb(191,91,23)\"\n    ],\n    8: [\n      \"rgb(127,201,127)\",\n      \"rgb(190,174,212)\",\n      \"rgb(253,192,134)\",\n      \"rgb(255,255,153)\",\n      \"rgb(56,108,176)\",\n      \"rgb(240,2,127)\",\n      \"rgb(191,91,23)\",\n      \"rgb(102,102,102)\"\n    ],\n    type: \"qual\"\n  },\n  Blues: {\n    3: [\n      \"rgb(222,235,247)\",\n      \"rgb(158,202,225)\",\n      \"rgb(49,130,189)\"\n    ],\n    4: [\n      \"rgb(239,243,255)\",\n      \"rgb(189,215,231)\",\n      \"rgb(107,174,214)\",\n      \"rgb(33,113,181)\"\n    ],\n    5: [\n      \"rgb(239,243,255)\",\n      \"rgb(189,215,231)\",\n      \"rgb(107,174,214)\",\n      \"rgb(49,130,189)\",\n      \"rgb(8,81,156)\"\n    ],\n    6: [\n      \"rgb(239,243,255)\",\n      \"rgb(198,219,239)\",\n      \"rgb(158,202,225)\",\n      \"rgb(107,174,214)\",\n      \"rgb(49,130,189)\",\n      \"rgb(8,81,156)\"\n    ],\n    7: [\n      \"rgb(239,243,255)\",\n      \"rgb(198,219,239)\",\n      \"rgb(158,202,225)\",\n      \"rgb(107,174,214)\",\n      \"rgb(66,146,198)\",\n      \"rgb(33,113,181)\",\n      \"rgb(8,69,148)\"\n    ],\n    8: [\n      \"rgb(247,251,255)\",\n      \"rgb(222,235,247)\",\n      \"rgb(198,219,239)\",\n      \"rgb(158,202,225)\",\n      \"rgb(107,174,214)\",\n      \"rgb(66,146,198)\",\n      \"rgb(33,113,181)\",\n      \"rgb(8,69,148)\"\n    ],\n    9: [\n      \"rgb(247,251,255)\",\n      \"rgb(222,235,247)\",\n      \"rgb(198,219,239)\",\n      \"rgb(158,202,225)\",\n      \"rgb(107,174,214)\",\n      \"rgb(66,146,198)\",\n      \"rgb(33,113,181)\",\n      \"rgb(8,81,156)\",\n      \"rgb(8,48,107)\"\n    ],\n    type: \"seq\"\n  },\n  BrBG: {\n    10: [\n      \"rgb(84,48,5)\",\n      \"rgb(140,81,10)\",\n      \"rgb(191,129,45)\",\n      \"rgb(223,194,125)\",\n      \"rgb(246,232,195)\",\n      \"rgb(199,234,229)\",\n      \"rgb(128,205,193)\",\n      \"rgb(53,151,143)\",\n      \"rgb(1,102,94)\",\n      \"rgb(0,60,48)\"\n    ],\n    11: [\n      \"rgb(84,48,5)\",\n      \"rgb(140,81,10)\",\n      \"rgb(191,129,45)\",\n      \"rgb(223,194,125)\",\n      \"rgb(246,232,195)\",\n      \"rgb(245,245,245)\",\n      \"rgb(199,234,229)\",\n      \"rgb(128,205,193)\",\n      \"rgb(53,151,143)\",\n      \"rgb(1,102,94)\",\n      \"rgb(0,60,48)\"\n    ],\n    3: [\n      \"rgb(216,179,101)\",\n      \"rgb(245,245,245)\",\n      \"rgb(90,180,172)\"\n    ],\n    4: [\n      \"rgb(166,97,26)\",\n      \"rgb(223,194,125)\",\n      \"rgb(128,205,193)\",\n      \"rgb(1,133,113)\"\n    ],\n    5: [\n      \"rgb(166,97,26)\",\n      \"rgb(223,194,125)\",\n      \"rgb(245,245,245)\",\n      \"rgb(128,205,193)\",\n      \"rgb(1,133,113)\"\n    ],\n    6: [\n      \"rgb(140,81,10)\",\n      \"rgb(216,179,101)\",\n      \"rgb(246,232,195)\",\n      \"rgb(199,234,229)\",\n      \"rgb(90,180,172)\",\n      \"rgb(1,102,94)\"\n    ],\n    7: [\n      \"rgb(140,81,10)\",\n      \"rgb(216,179,101)\",\n      \"rgb(246,232,195)\",\n      \"rgb(245,245,245)\",\n      \"rgb(199,234,229)\",\n      \"rgb(90,180,172)\",\n      \"rgb(1,102,94)\"\n    ],\n    8: [\n      \"rgb(140,81,10)\",\n      \"rgb(191,129,45)\",\n      \"rgb(223,194,125)\",\n      \"rgb(246,232,195)\",\n      \"rgb(199,234,229)\",\n      \"rgb(128,205,193)\",\n      \"rgb(53,151,143)\",\n      \"rgb(1,102,94)\"\n    ],\n    9: [\n      \"rgb(140,81,10)\",\n      \"rgb(191,129,45)\",\n      \"rgb(223,194,125)\",\n      \"rgb(246,232,195)\",\n      \"rgb(245,245,245)\",\n      \"rgb(199,234,229)\",\n      \"rgb(128,205,193)\",\n      \"rgb(53,151,143)\",\n      \"rgb(1,102,94)\"\n    ],\n    type: \"div\"\n  },\n  BuGn: {\n    3: [\n      \"rgb(229,245,249)\",\n      \"rgb(153,216,201)\",\n      \"rgb(44,162,95)\"\n    ],\n    4: [\n      \"rgb(237,248,251)\",\n      \"rgb(178,226,226)\",\n      \"rgb(102,194,164)\",\n      \"rgb(35,139,69)\"\n    ],\n    5: [\n      \"rgb(237,248,251)\",\n      \"rgb(178,226,226)\",\n      \"rgb(102,194,164)\",\n      \"rgb(44,162,95)\",\n      \"rgb(0,109,44)\"\n    ],\n    6: [\n      \"rgb(237,248,251)\",\n      \"rgb(204,236,230)\",\n      \"rgb(153,216,201)\",\n      \"rgb(102,194,164)\",\n      \"rgb(44,162,95)\",\n      \"rgb(0,109,44)\"\n    ],\n    7: [\n      \"rgb(237,248,251)\",\n      \"rgb(204,236,230)\",\n      \"rgb(153,216,201)\",\n      \"rgb(102,194,164)\",\n      \"rgb(65,174,118)\",\n      \"rgb(35,139,69)\",\n      \"rgb(0,88,36)\"\n    ],\n    8: [\n      \"rgb(247,252,253)\",\n      \"rgb(229,245,249)\",\n      \"rgb(204,236,230)\",\n      \"rgb(153,216,201)\",\n      \"rgb(102,194,164)\",\n      \"rgb(65,174,118)\",\n      \"rgb(35,139,69)\",\n      \"rgb(0,88,36)\"\n    ],\n    9: [\n      \"rgb(247,252,253)\",\n      \"rgb(229,245,249)\",\n      \"rgb(204,236,230)\",\n      \"rgb(153,216,201)\",\n      \"rgb(102,194,164)\",\n      \"rgb(65,174,118)\",\n      \"rgb(35,139,69)\",\n      \"rgb(0,109,44)\",\n      \"rgb(0,68,27)\"\n    ],\n    type: \"seq\"\n  },\n  BuPu: {\n    3: [\n      \"rgb(224,236,244)\",\n      \"rgb(158,188,218)\",\n      \"rgb(136,86,167)\"\n    ],\n    4: [\n      \"rgb(237,248,251)\",\n      \"rgb(179,205,227)\",\n      \"rgb(140,150,198)\",\n      \"rgb(136,65,157)\"\n    ],\n    5: [\n      \"rgb(237,248,251)\",\n      \"rgb(179,205,227)\",\n      \"rgb(140,150,198)\",\n      \"rgb(136,86,167)\",\n      \"rgb(129,15,124)\"\n    ],\n    6: [\n      \"rgb(237,248,251)\",\n      \"rgb(191,211,230)\",\n      \"rgb(158,188,218)\",\n      \"rgb(140,150,198)\",\n      \"rgb(136,86,167)\",\n      \"rgb(129,15,124)\"\n    ],\n    7: [\n      \"rgb(237,248,251)\",\n      \"rgb(191,211,230)\",\n      \"rgb(158,188,218)\",\n      \"rgb(140,150,198)\",\n      \"rgb(140,107,177)\",\n      \"rgb(136,65,157)\",\n      \"rgb(110,1,107)\"\n    ],\n    8: [\n      \"rgb(247,252,253)\",\n      \"rgb(224,236,244)\",\n      \"rgb(191,211,230)\",\n      \"rgb(158,188,218)\",\n      \"rgb(140,150,198)\",\n      \"rgb(140,107,177)\",\n      \"rgb(136,65,157)\",\n      \"rgb(110,1,107)\"\n    ],\n    9: [\n      \"rgb(247,252,253)\",\n      \"rgb(224,236,244)\",\n      \"rgb(191,211,230)\",\n      \"rgb(158,188,218)\",\n      \"rgb(140,150,198)\",\n      \"rgb(140,107,177)\",\n      \"rgb(136,65,157)\",\n      \"rgb(129,15,124)\",\n      \"rgb(77,0,75)\"\n    ],\n    type: \"seq\"\n  },\n  Dark2: {\n    3: [\n      \"rgb(27,158,119)\",\n      \"rgb(217,95,2)\",\n      \"rgb(117,112,179)\"\n    ],\n    4: [\n      \"rgb(27,158,119)\",\n      \"rgb(217,95,2)\",\n      \"rgb(117,112,179)\",\n      \"rgb(231,41,138)\"\n    ],\n    5: [\n      \"rgb(27,158,119)\",\n      \"rgb(217,95,2)\",\n      \"rgb(117,112,179)\",\n      \"rgb(231,41,138)\",\n      \"rgb(102,166,30)\"\n    ],\n    6: [\n      \"rgb(27,158,119)\",\n      \"rgb(217,95,2)\",\n      \"rgb(117,112,179)\",\n      \"rgb(231,41,138)\",\n      \"rgb(102,166,30)\",\n      \"rgb(230,171,2)\"\n    ],\n    7: [\n      \"rgb(27,158,119)\",\n      \"rgb(217,95,2)\",\n      \"rgb(117,112,179)\",\n      \"rgb(231,41,138)\",\n      \"rgb(102,166,30)\",\n      \"rgb(230,171,2)\",\n      \"rgb(166,118,29)\"\n    ],\n    8: [\n      \"rgb(27,158,119)\",\n      \"rgb(217,95,2)\",\n      \"rgb(117,112,179)\",\n      \"rgb(231,41,138)\",\n      \"rgb(102,166,30)\",\n      \"rgb(230,171,2)\",\n      \"rgb(166,118,29)\",\n      \"rgb(102,102,102)\"\n    ],\n    type: \"qual\"\n  },\n  GnBu: {\n    3: [\n      \"rgb(224,243,219)\",\n      \"rgb(168,221,181)\",\n      \"rgb(67,162,202)\"\n    ],\n    4: [\n      \"rgb(240,249,232)\",\n      \"rgb(186,228,188)\",\n      \"rgb(123,204,196)\",\n      \"rgb(43,140,190)\"\n    ],\n    5: [\n      \"rgb(240,249,232)\",\n      \"rgb(186,228,188)\",\n      \"rgb(123,204,196)\",\n      \"rgb(67,162,202)\",\n      \"rgb(8,104,172)\"\n    ],\n    6: [\n      \"rgb(240,249,232)\",\n      \"rgb(204,235,197)\",\n      \"rgb(168,221,181)\",\n      \"rgb(123,204,196)\",\n      \"rgb(67,162,202)\",\n      \"rgb(8,104,172)\"\n    ],\n    7: [\n      \"rgb(240,249,232)\",\n      \"rgb(204,235,197)\",\n      \"rgb(168,221,181)\",\n      \"rgb(123,204,196)\",\n      \"rgb(78,179,211)\",\n      \"rgb(43,140,190)\",\n      \"rgb(8,88,158)\"\n    ],\n    8: [\n      \"rgb(247,252,240)\",\n      \"rgb(224,243,219)\",\n      \"rgb(204,235,197)\",\n      \"rgb(168,221,181)\",\n      \"rgb(123,204,196)\",\n      \"rgb(78,179,211)\",\n      \"rgb(43,140,190)\",\n      \"rgb(8,88,158)\"\n    ],\n    9: [\n      \"rgb(247,252,240)\",\n      \"rgb(224,243,219)\",\n      \"rgb(204,235,197)\",\n      \"rgb(168,221,181)\",\n      \"rgb(123,204,196)\",\n      \"rgb(78,179,211)\",\n      \"rgb(43,140,190)\",\n      \"rgb(8,104,172)\",\n      \"rgb(8,64,129)\"\n    ],\n    type: \"seq\"\n  },\n  Greens: {\n    3: [\n      \"rgb(229,245,224)\",\n      \"rgb(161,217,155)\",\n      \"rgb(49,163,84)\"\n    ],\n    4: [\n      \"rgb(237,248,233)\",\n      \"rgb(186,228,179)\",\n      \"rgb(116,196,118)\",\n      \"rgb(35,139,69)\"\n    ],\n    5: [\n      \"rgb(237,248,233)\",\n      \"rgb(186,228,179)\",\n      \"rgb(116,196,118)\",\n      \"rgb(49,163,84)\",\n      \"rgb(0,109,44)\"\n    ],\n    6: [\n      \"rgb(237,248,233)\",\n      \"rgb(199,233,192)\",\n      \"rgb(161,217,155)\",\n      \"rgb(116,196,118)\",\n      \"rgb(49,163,84)\",\n      \"rgb(0,109,44)\"\n    ],\n    7: [\n      \"rgb(237,248,233)\",\n      \"rgb(199,233,192)\",\n      \"rgb(161,217,155)\",\n      \"rgb(116,196,118)\",\n      \"rgb(65,171,93)\",\n      \"rgb(35,139,69)\",\n      \"rgb(0,90,50)\"\n    ],\n    8: [\n      \"rgb(247,252,245)\",\n      \"rgb(229,245,224)\",\n      \"rgb(199,233,192)\",\n      \"rgb(161,217,155)\",\n      \"rgb(116,196,118)\",\n      \"rgb(65,171,93)\",\n      \"rgb(35,139,69)\",\n      \"rgb(0,90,50)\"\n    ],\n    9: [\n      \"rgb(247,252,245)\",\n      \"rgb(229,245,224)\",\n      \"rgb(199,233,192)\",\n      \"rgb(161,217,155)\",\n      \"rgb(116,196,118)\",\n      \"rgb(65,171,93)\",\n      \"rgb(35,139,69)\",\n      \"rgb(0,109,44)\",\n      \"rgb(0,68,27)\"\n    ],\n    type: \"seq\"\n  },\n  Greys: {\n    3: [\n      \"rgb(240,240,240)\",\n      \"rgb(189,189,189)\",\n      \"rgb(99,99,99)\"\n    ],\n    4: [\n      \"rgb(247,247,247)\",\n      \"rgb(204,204,204)\",\n      \"rgb(150,150,150)\",\n      \"rgb(82,82,82)\"\n    ],\n    5: [\n      \"rgb(247,247,247)\",\n      \"rgb(204,204,204)\",\n      \"rgb(150,150,150)\",\n      \"rgb(99,99,99)\",\n      \"rgb(37,37,37)\"\n    ],\n    6: [\n      \"rgb(247,247,247)\",\n      \"rgb(217,217,217)\",\n      \"rgb(189,189,189)\",\n      \"rgb(150,150,150)\",\n      \"rgb(99,99,99)\",\n      \"rgb(37,37,37)\"\n    ],\n    7: [\n      \"rgb(247,247,247)\",\n      \"rgb(217,217,217)\",\n      \"rgb(189,189,189)\",\n      \"rgb(150,150,150)\",\n      \"rgb(115,115,115)\",\n      \"rgb(82,82,82)\",\n      \"rgb(37,37,37)\"\n    ],\n    8: [\n      \"rgb(255,255,255)\",\n      \"rgb(240,240,240)\",\n      \"rgb(217,217,217)\",\n      \"rgb(189,189,189)\",\n      \"rgb(150,150,150)\",\n      \"rgb(115,115,115)\",\n      \"rgb(82,82,82)\",\n      \"rgb(37,37,37)\"\n    ],\n    9: [\n      \"rgb(255,255,255)\",\n      \"rgb(240,240,240)\",\n      \"rgb(217,217,217)\",\n      \"rgb(189,189,189)\",\n      \"rgb(150,150,150)\",\n      \"rgb(115,115,115)\",\n      \"rgb(82,82,82)\",\n      \"rgb(37,37,37)\",\n      \"rgb(0,0,0)\"\n    ],\n    type: \"seq\"\n  },\n  OrRd: {\n    3: [\n      \"rgb(254,232,200)\",\n      \"rgb(253,187,132)\",\n      \"rgb(227,74,51)\"\n    ],\n    4: [\n      \"rgb(254,240,217)\",\n      \"rgb(253,204,138)\",\n      \"rgb(252,141,89)\",\n      \"rgb(215,48,31)\"\n    ],\n    5: [\n      \"rgb(254,240,217)\",\n      \"rgb(253,204,138)\",\n      \"rgb(252,141,89)\",\n      \"rgb(227,74,51)\",\n      \"rgb(179,0,0)\"\n    ],\n    6: [\n      \"rgb(254,240,217)\",\n      \"rgb(253,212,158)\",\n      \"rgb(253,187,132)\",\n      \"rgb(252,141,89)\",\n      \"rgb(227,74,51)\",\n      \"rgb(179,0,0)\"\n    ],\n    7: [\n      \"rgb(254,240,217)\",\n      \"rgb(253,212,158)\",\n      \"rgb(253,187,132)\",\n      \"rgb(252,141,89)\",\n      \"rgb(239,101,72)\",\n      \"rgb(215,48,31)\",\n      \"rgb(153,0,0)\"\n    ],\n    8: [\n      \"rgb(255,247,236)\",\n      \"rgb(254,232,200)\",\n      \"rgb(253,212,158)\",\n      \"rgb(253,187,132)\",\n      \"rgb(252,141,89)\",\n      \"rgb(239,101,72)\",\n      \"rgb(215,48,31)\",\n      \"rgb(153,0,0)\"\n    ],\n    9: [\n      \"rgb(255,247,236)\",\n      \"rgb(254,232,200)\",\n      \"rgb(253,212,158)\",\n      \"rgb(253,187,132)\",\n      \"rgb(252,141,89)\",\n      \"rgb(239,101,72)\",\n      \"rgb(215,48,31)\",\n      \"rgb(179,0,0)\",\n      \"rgb(127,0,0)\"\n    ],\n    type: \"seq\"\n  },\n  Oranges: {\n    3: [\n      \"rgb(254,230,206)\",\n      \"rgb(253,174,107)\",\n      \"rgb(230,85,13)\"\n    ],\n    4: [\n      \"rgb(254,237,222)\",\n      \"rgb(253,190,133)\",\n      \"rgb(253,141,60)\",\n      \"rgb(217,71,1)\"\n    ],\n    5: [\n      \"rgb(254,237,222)\",\n      \"rgb(253,190,133)\",\n      \"rgb(253,141,60)\",\n      \"rgb(230,85,13)\",\n      \"rgb(166,54,3)\"\n    ],\n    6: [\n      \"rgb(254,237,222)\",\n      \"rgb(253,208,162)\",\n      \"rgb(253,174,107)\",\n      \"rgb(253,141,60)\",\n      \"rgb(230,85,13)\",\n      \"rgb(166,54,3)\"\n    ],\n    7: [\n      \"rgb(254,237,222)\",\n      \"rgb(253,208,162)\",\n      \"rgb(253,174,107)\",\n      \"rgb(253,141,60)\",\n      \"rgb(241,105,19)\",\n      \"rgb(217,72,1)\",\n      \"rgb(140,45,4)\"\n    ],\n    8: [\n      \"rgb(255,245,235)\",\n      \"rgb(254,230,206)\",\n      \"rgb(253,208,162)\",\n      \"rgb(253,174,107)\",\n      \"rgb(253,141,60)\",\n      \"rgb(241,105,19)\",\n      \"rgb(217,72,1)\",\n      \"rgb(140,45,4)\"\n    ],\n    9: [\n      \"rgb(255,245,235)\",\n      \"rgb(254,230,206)\",\n      \"rgb(253,208,162)\",\n      \"rgb(253,174,107)\",\n      \"rgb(253,141,60)\",\n      \"rgb(241,105,19)\",\n      \"rgb(217,72,1)\",\n      \"rgb(166,54,3)\",\n      \"rgb(127,39,4)\"\n    ],\n    type: \"seq\"\n  },\n  PRGn: {\n    10: [\n      \"rgb(64,0,75)\",\n      \"rgb(118,42,131)\",\n      \"rgb(153,112,171)\",\n      \"rgb(194,165,207)\",\n      \"rgb(231,212,232)\",\n      \"rgb(217,240,211)\",\n      \"rgb(166,219,160)\",\n      \"rgb(90,174,97)\",\n      \"rgb(27,120,55)\",\n      \"rgb(0,68,27)\"\n    ],\n    11: [\n      \"rgb(64,0,75)\",\n      \"rgb(118,42,131)\",\n      \"rgb(153,112,171)\",\n      \"rgb(194,165,207)\",\n      \"rgb(231,212,232)\",\n      \"rgb(247,247,247)\",\n      \"rgb(217,240,211)\",\n      \"rgb(166,219,160)\",\n      \"rgb(90,174,97)\",\n      \"rgb(27,120,55)\",\n      \"rgb(0,68,27)\"\n    ],\n    3: [\n      \"rgb(175,141,195)\",\n      \"rgb(247,247,247)\",\n      \"rgb(127,191,123)\"\n    ],\n    4: [\n      \"rgb(123,50,148)\",\n      \"rgb(194,165,207)\",\n      \"rgb(166,219,160)\",\n      \"rgb(0,136,55)\"\n    ],\n    5: [\n      \"rgb(123,50,148)\",\n      \"rgb(194,165,207)\",\n      \"rgb(247,247,247)\",\n      \"rgb(166,219,160)\",\n      \"rgb(0,136,55)\"\n    ],\n    6: [\n      \"rgb(118,42,131)\",\n      \"rgb(175,141,195)\",\n      \"rgb(231,212,232)\",\n      \"rgb(217,240,211)\",\n      \"rgb(127,191,123)\",\n      \"rgb(27,120,55)\"\n    ],\n    7: [\n      \"rgb(118,42,131)\",\n      \"rgb(175,141,195)\",\n      \"rgb(231,212,232)\",\n      \"rgb(247,247,247)\",\n      \"rgb(217,240,211)\",\n      \"rgb(127,191,123)\",\n      \"rgb(27,120,55)\"\n    ],\n    8: [\n      \"rgb(118,42,131)\",\n      \"rgb(153,112,171)\",\n      \"rgb(194,165,207)\",\n      \"rgb(231,212,232)\",\n      \"rgb(217,240,211)\",\n      \"rgb(166,219,160)\",\n      \"rgb(90,174,97)\",\n      \"rgb(27,120,55)\"\n    ],\n    9: [\n      \"rgb(118,42,131)\",\n      \"rgb(153,112,171)\",\n      \"rgb(194,165,207)\",\n      \"rgb(231,212,232)\",\n      \"rgb(247,247,247)\",\n      \"rgb(217,240,211)\",\n      \"rgb(166,219,160)\",\n      \"rgb(90,174,97)\",\n      \"rgb(27,120,55)\"\n    ],\n    type: \"div\"\n  },\n  Paired: {\n    10: [\n      \"rgb(166,206,227)\",\n      \"rgb(31,120,180)\",\n      \"rgb(178,223,138)\",\n      \"rgb(51,160,44)\",\n      \"rgb(251,154,153)\",\n      \"rgb(227,26,28)\",\n      \"rgb(253,191,111)\",\n      \"rgb(255,127,0)\",\n      \"rgb(202,178,214)\",\n      \"rgb(106,61,154)\"\n    ],\n    11: [\n      \"rgb(166,206,227)\",\n      \"rgb(31,120,180)\",\n      \"rgb(178,223,138)\",\n      \"rgb(51,160,44)\",\n      \"rgb(251,154,153)\",\n      \"rgb(227,26,28)\",\n      \"rgb(253,191,111)\",\n      \"rgb(255,127,0)\",\n      \"rgb(202,178,214)\",\n      \"rgb(106,61,154)\",\n      \"rgb(255,255,153)\"\n    ],\n    12: [\n      \"rgb(166,206,227)\",\n      \"rgb(31,120,180)\",\n      \"rgb(178,223,138)\",\n      \"rgb(51,160,44)\",\n      \"rgb(251,154,153)\",\n      \"rgb(227,26,28)\",\n      \"rgb(253,191,111)\",\n      \"rgb(255,127,0)\",\n      \"rgb(202,178,214)\",\n      \"rgb(106,61,154)\",\n      \"rgb(255,255,153)\",\n      \"rgb(177,89,40)\"\n    ],\n    3: [\n      \"rgb(166,206,227)\",\n      \"rgb(31,120,180)\",\n      \"rgb(178,223,138)\"\n    ],\n    4: [\n      \"rgb(166,206,227)\",\n      \"rgb(31,120,180)\",\n      \"rgb(178,223,138)\",\n      \"rgb(51,160,44)\"\n    ],\n    5: [\n      \"rgb(166,206,227)\",\n      \"rgb(31,120,180)\",\n      \"rgb(178,223,138)\",\n      \"rgb(51,160,44)\",\n      \"rgb(251,154,153)\"\n    ],\n    6: [\n      \"rgb(166,206,227)\",\n      \"rgb(31,120,180)\",\n      \"rgb(178,223,138)\",\n      \"rgb(51,160,44)\",\n      \"rgb(251,154,153)\",\n      \"rgb(227,26,28)\"\n    ],\n    7: [\n      \"rgb(166,206,227)\",\n      \"rgb(31,120,180)\",\n      \"rgb(178,223,138)\",\n      \"rgb(51,160,44)\",\n      \"rgb(251,154,153)\",\n      \"rgb(227,26,28)\",\n      \"rgb(253,191,111)\"\n    ],\n    8: [\n      \"rgb(166,206,227)\",\n      \"rgb(31,120,180)\",\n      \"rgb(178,223,138)\",\n      \"rgb(51,160,44)\",\n      \"rgb(251,154,153)\",\n      \"rgb(227,26,28)\",\n      \"rgb(253,191,111)\",\n      \"rgb(255,127,0)\"\n    ],\n    9: [\n      \"rgb(166,206,227)\",\n      \"rgb(31,120,180)\",\n      \"rgb(178,223,138)\",\n      \"rgb(51,160,44)\",\n      \"rgb(251,154,153)\",\n      \"rgb(227,26,28)\",\n      \"rgb(253,191,111)\",\n      \"rgb(255,127,0)\",\n      \"rgb(202,178,214)\"\n    ],\n    type: \"qual\"\n  },\n  Pastel1: {\n    3: [\n      \"rgb(251,180,174)\",\n      \"rgb(179,205,227)\",\n      \"rgb(204,235,197)\"\n    ],\n    4: [\n      \"rgb(251,180,174)\",\n      \"rgb(179,205,227)\",\n      \"rgb(204,235,197)\",\n      \"rgb(222,203,228)\"\n    ],\n    5: [\n      \"rgb(251,180,174)\",\n      \"rgb(179,205,227)\",\n      \"rgb(204,235,197)\",\n      \"rgb(222,203,228)\",\n      \"rgb(254,217,166)\"\n    ],\n    6: [\n      \"rgb(251,180,174)\",\n      \"rgb(179,205,227)\",\n      \"rgb(204,235,197)\",\n      \"rgb(222,203,228)\",\n      \"rgb(254,217,166)\",\n      \"rgb(255,255,204)\"\n    ],\n    7: [\n      \"rgb(251,180,174)\",\n      \"rgb(179,205,227)\",\n      \"rgb(204,235,197)\",\n      \"rgb(222,203,228)\",\n      \"rgb(254,217,166)\",\n      \"rgb(255,255,204)\",\n      \"rgb(229,216,189)\"\n    ],\n    8: [\n      \"rgb(251,180,174)\",\n      \"rgb(179,205,227)\",\n      \"rgb(204,235,197)\",\n      \"rgb(222,203,228)\",\n      \"rgb(254,217,166)\",\n      \"rgb(255,255,204)\",\n      \"rgb(229,216,189)\",\n      \"rgb(253,218,236)\"\n    ],\n    9: [\n      \"rgb(251,180,174)\",\n      \"rgb(179,205,227)\",\n      \"rgb(204,235,197)\",\n      \"rgb(222,203,228)\",\n      \"rgb(254,217,166)\",\n      \"rgb(255,255,204)\",\n      \"rgb(229,216,189)\",\n      \"rgb(253,218,236)\",\n      \"rgb(242,242,242)\"\n    ],\n    type: \"qual\"\n  },\n  Pastel2: {\n    3: [\n      \"rgb(179,226,205)\",\n      \"rgb(253,205,172)\",\n      \"rgb(203,213,232)\"\n    ],\n    4: [\n      \"rgb(179,226,205)\",\n      \"rgb(253,205,172)\",\n      \"rgb(203,213,232)\",\n      \"rgb(244,202,228)\"\n    ],\n    5: [\n      \"rgb(179,226,205)\",\n      \"rgb(253,205,172)\",\n      \"rgb(203,213,232)\",\n      \"rgb(244,202,228)\",\n      \"rgb(230,245,201)\"\n    ],\n    6: [\n      \"rgb(179,226,205)\",\n      \"rgb(253,205,172)\",\n      \"rgb(203,213,232)\",\n      \"rgb(244,202,228)\",\n      \"rgb(230,245,201)\",\n      \"rgb(255,242,174)\"\n    ],\n    7: [\n      \"rgb(179,226,205)\",\n      \"rgb(253,205,172)\",\n      \"rgb(203,213,232)\",\n      \"rgb(244,202,228)\",\n      \"rgb(230,245,201)\",\n      \"rgb(255,242,174)\",\n      \"rgb(241,226,204)\"\n    ],\n    8: [\n      \"rgb(179,226,205)\",\n      \"rgb(253,205,172)\",\n      \"rgb(203,213,232)\",\n      \"rgb(244,202,228)\",\n      \"rgb(230,245,201)\",\n      \"rgb(255,242,174)\",\n      \"rgb(241,226,204)\",\n      \"rgb(204,204,204)\"\n    ],\n    type: \"qual\"\n  },\n  PiYG: {\n    10: [\n      \"rgb(142,1,82)\",\n      \"rgb(197,27,125)\",\n      \"rgb(222,119,174)\",\n      \"rgb(241,182,218)\",\n      \"rgb(253,224,239)\",\n      \"rgb(230,245,208)\",\n      \"rgb(184,225,134)\",\n      \"rgb(127,188,65)\",\n      \"rgb(77,146,33)\",\n      \"rgb(39,100,25)\"\n    ],\n    11: [\n      \"rgb(142,1,82)\",\n      \"rgb(197,27,125)\",\n      \"rgb(222,119,174)\",\n      \"rgb(241,182,218)\",\n      \"rgb(253,224,239)\",\n      \"rgb(247,247,247)\",\n      \"rgb(230,245,208)\",\n      \"rgb(184,225,134)\",\n      \"rgb(127,188,65)\",\n      \"rgb(77,146,33)\",\n      \"rgb(39,100,25)\"\n    ],\n    3: [\n      \"rgb(233,163,201)\",\n      \"rgb(247,247,247)\",\n      \"rgb(161,215,106)\"\n    ],\n    4: [\n      \"rgb(208,28,139)\",\n      \"rgb(241,182,218)\",\n      \"rgb(184,225,134)\",\n      \"rgb(77,172,38)\"\n    ],\n    5: [\n      \"rgb(208,28,139)\",\n      \"rgb(241,182,218)\",\n      \"rgb(247,247,247)\",\n      \"rgb(184,225,134)\",\n      \"rgb(77,172,38)\"\n    ],\n    6: [\n      \"rgb(197,27,125)\",\n      \"rgb(233,163,201)\",\n      \"rgb(253,224,239)\",\n      \"rgb(230,245,208)\",\n      \"rgb(161,215,106)\",\n      \"rgb(77,146,33)\"\n    ],\n    7: [\n      \"rgb(197,27,125)\",\n      \"rgb(233,163,201)\",\n      \"rgb(253,224,239)\",\n      \"rgb(247,247,247)\",\n      \"rgb(230,245,208)\",\n      \"rgb(161,215,106)\",\n      \"rgb(77,146,33)\"\n    ],\n    8: [\n      \"rgb(197,27,125)\",\n      \"rgb(222,119,174)\",\n      \"rgb(241,182,218)\",\n      \"rgb(253,224,239)\",\n      \"rgb(230,245,208)\",\n      \"rgb(184,225,134)\",\n      \"rgb(127,188,65)\",\n      \"rgb(77,146,33)\"\n    ],\n    9: [\n      \"rgb(197,27,125)\",\n      \"rgb(222,119,174)\",\n      \"rgb(241,182,218)\",\n      \"rgb(253,224,239)\",\n      \"rgb(247,247,247)\",\n      \"rgb(230,245,208)\",\n      \"rgb(184,225,134)\",\n      \"rgb(127,188,65)\",\n      \"rgb(77,146,33)\"\n    ],\n    type: \"div\"\n  },\n  PuBu: {\n    3: [\n      \"rgb(236,231,242)\",\n      \"rgb(166,189,219)\",\n      \"rgb(43,140,190)\"\n    ],\n    4: [\n      \"rgb(241,238,246)\",\n      \"rgb(189,201,225)\",\n      \"rgb(116,169,207)\",\n      \"rgb(5,112,176)\"\n    ],\n    5: [\n      \"rgb(241,238,246)\",\n      \"rgb(189,201,225)\",\n      \"rgb(116,169,207)\",\n      \"rgb(43,140,190)\",\n      \"rgb(4,90,141)\"\n    ],\n    6: [\n      \"rgb(241,238,246)\",\n      \"rgb(208,209,230)\",\n      \"rgb(166,189,219)\",\n      \"rgb(116,169,207)\",\n      \"rgb(43,140,190)\",\n      \"rgb(4,90,141)\"\n    ],\n    7: [\n      \"rgb(241,238,246)\",\n      \"rgb(208,209,230)\",\n      \"rgb(166,189,219)\",\n      \"rgb(116,169,207)\",\n      \"rgb(54,144,192)\",\n      \"rgb(5,112,176)\",\n      \"rgb(3,78,123)\"\n    ],\n    8: [\n      \"rgb(255,247,251)\",\n      \"rgb(236,231,242)\",\n      \"rgb(208,209,230)\",\n      \"rgb(166,189,219)\",\n      \"rgb(116,169,207)\",\n      \"rgb(54,144,192)\",\n      \"rgb(5,112,176)\",\n      \"rgb(3,78,123)\"\n    ],\n    9: [\n      \"rgb(255,247,251)\",\n      \"rgb(236,231,242)\",\n      \"rgb(208,209,230)\",\n      \"rgb(166,189,219)\",\n      \"rgb(116,169,207)\",\n      \"rgb(54,144,192)\",\n      \"rgb(5,112,176)\",\n      \"rgb(4,90,141)\",\n      \"rgb(2,56,88)\"\n    ],\n    type: \"seq\"\n  },\n  PuBuGn: {\n    3: [\n      \"rgb(236,226,240)\",\n      \"rgb(166,189,219)\",\n      \"rgb(28,144,153)\"\n    ],\n    4: [\n      \"rgb(246,239,247)\",\n      \"rgb(189,201,225)\",\n      \"rgb(103,169,207)\",\n      \"rgb(2,129,138)\"\n    ],\n    5: [\n      \"rgb(246,239,247)\",\n      \"rgb(189,201,225)\",\n      \"rgb(103,169,207)\",\n      \"rgb(28,144,153)\",\n      \"rgb(1,108,89)\"\n    ],\n    6: [\n      \"rgb(246,239,247)\",\n      \"rgb(208,209,230)\",\n      \"rgb(166,189,219)\",\n      \"rgb(103,169,207)\",\n      \"rgb(28,144,153)\",\n      \"rgb(1,108,89)\"\n    ],\n    7: [\n      \"rgb(246,239,247)\",\n      \"rgb(208,209,230)\",\n      \"rgb(166,189,219)\",\n      \"rgb(103,169,207)\",\n      \"rgb(54,144,192)\",\n      \"rgb(2,129,138)\",\n      \"rgb(1,100,80)\"\n    ],\n    8: [\n      \"rgb(255,247,251)\",\n      \"rgb(236,226,240)\",\n      \"rgb(208,209,230)\",\n      \"rgb(166,189,219)\",\n      \"rgb(103,169,207)\",\n      \"rgb(54,144,192)\",\n      \"rgb(2,129,138)\",\n      \"rgb(1,100,80)\"\n    ],\n    9: [\n      \"rgb(255,247,251)\",\n      \"rgb(236,226,240)\",\n      \"rgb(208,209,230)\",\n      \"rgb(166,189,219)\",\n      \"rgb(103,169,207)\",\n      \"rgb(54,144,192)\",\n      \"rgb(2,129,138)\",\n      \"rgb(1,108,89)\",\n      \"rgb(1,70,54)\"\n    ],\n    type: \"seq\"\n  },\n  PuOr: {\n    10: [\n      \"rgb(127,59,8)\",\n      \"rgb(179,88,6)\",\n      \"rgb(224,130,20)\",\n      \"rgb(253,184,99)\",\n      \"rgb(254,224,182)\",\n      \"rgb(216,218,235)\",\n      \"rgb(178,171,210)\",\n      \"rgb(128,115,172)\",\n      \"rgb(84,39,136)\",\n      \"rgb(45,0,75)\"\n    ],\n    11: [\n      \"rgb(127,59,8)\",\n      \"rgb(179,88,6)\",\n      \"rgb(224,130,20)\",\n      \"rgb(253,184,99)\",\n      \"rgb(254,224,182)\",\n      \"rgb(247,247,247)\",\n      \"rgb(216,218,235)\",\n      \"rgb(178,171,210)\",\n      \"rgb(128,115,172)\",\n      \"rgb(84,39,136)\",\n      \"rgb(45,0,75)\"\n    ],\n    3: [\n      \"rgb(241,163,64)\",\n      \"rgb(247,247,247)\",\n      \"rgb(153,142,195)\"\n    ],\n    4: [\n      \"rgb(230,97,1)\",\n      \"rgb(253,184,99)\",\n      \"rgb(178,171,210)\",\n      \"rgb(94,60,153)\"\n    ],\n    5: [\n      \"rgb(230,97,1)\",\n      \"rgb(253,184,99)\",\n      \"rgb(247,247,247)\",\n      \"rgb(178,171,210)\",\n      \"rgb(94,60,153)\"\n    ],\n    6: [\n      \"rgb(179,88,6)\",\n      \"rgb(241,163,64)\",\n      \"rgb(254,224,182)\",\n      \"rgb(216,218,235)\",\n      \"rgb(153,142,195)\",\n      \"rgb(84,39,136)\"\n    ],\n    7: [\n      \"rgb(179,88,6)\",\n      \"rgb(241,163,64)\",\n      \"rgb(254,224,182)\",\n      \"rgb(247,247,247)\",\n      \"rgb(216,218,235)\",\n      \"rgb(153,142,195)\",\n      \"rgb(84,39,136)\"\n    ],\n    8: [\n      \"rgb(179,88,6)\",\n      \"rgb(224,130,20)\",\n      \"rgb(253,184,99)\",\n      \"rgb(254,224,182)\",\n      \"rgb(216,218,235)\",\n      \"rgb(178,171,210)\",\n      \"rgb(128,115,172)\",\n      \"rgb(84,39,136)\"\n    ],\n    9: [\n      \"rgb(179,88,6)\",\n      \"rgb(224,130,20)\",\n      \"rgb(253,184,99)\",\n      \"rgb(254,224,182)\",\n      \"rgb(247,247,247)\",\n      \"rgb(216,218,235)\",\n      \"rgb(178,171,210)\",\n      \"rgb(128,115,172)\",\n      \"rgb(84,39,136)\"\n    ],\n    type: \"div\"\n  },\n  PuRd: {\n    3: [\n      \"rgb(231,225,239)\",\n      \"rgb(201,148,199)\",\n      \"rgb(221,28,119)\"\n    ],\n    4: [\n      \"rgb(241,238,246)\",\n      \"rgb(215,181,216)\",\n      \"rgb(223,101,176)\",\n      \"rgb(206,18,86)\"\n    ],\n    5: [\n      \"rgb(241,238,246)\",\n      \"rgb(215,181,216)\",\n      \"rgb(223,101,176)\",\n      \"rgb(221,28,119)\",\n      \"rgb(152,0,67)\"\n    ],\n    6: [\n      \"rgb(241,238,246)\",\n      \"rgb(212,185,218)\",\n      \"rgb(201,148,199)\",\n      \"rgb(223,101,176)\",\n      \"rgb(221,28,119)\",\n      \"rgb(152,0,67)\"\n    ],\n    7: [\n      \"rgb(241,238,246)\",\n      \"rgb(212,185,218)\",\n      \"rgb(201,148,199)\",\n      \"rgb(223,101,176)\",\n      \"rgb(231,41,138)\",\n      \"rgb(206,18,86)\",\n      \"rgb(145,0,63)\"\n    ],\n    8: [\n      \"rgb(247,244,249)\",\n      \"rgb(231,225,239)\",\n      \"rgb(212,185,218)\",\n      \"rgb(201,148,199)\",\n      \"rgb(223,101,176)\",\n      \"rgb(231,41,138)\",\n      \"rgb(206,18,86)\",\n      \"rgb(145,0,63)\"\n    ],\n    9: [\n      \"rgb(247,244,249)\",\n      \"rgb(231,225,239)\",\n      \"rgb(212,185,218)\",\n      \"rgb(201,148,199)\",\n      \"rgb(223,101,176)\",\n      \"rgb(231,41,138)\",\n      \"rgb(206,18,86)\",\n      \"rgb(152,0,67)\",\n      \"rgb(103,0,31)\"\n    ],\n    type: \"seq\"\n  },\n  Purples: {\n    3: [\n      \"rgb(239,237,245)\",\n      \"rgb(188,189,220)\",\n      \"rgb(117,107,177)\"\n    ],\n    4: [\n      \"rgb(242,240,247)\",\n      \"rgb(203,201,226)\",\n      \"rgb(158,154,200)\",\n      \"rgb(106,81,163)\"\n    ],\n    5: [\n      \"rgb(242,240,247)\",\n      \"rgb(203,201,226)\",\n      \"rgb(158,154,200)\",\n      \"rgb(117,107,177)\",\n      \"rgb(84,39,143)\"\n    ],\n    6: [\n      \"rgb(242,240,247)\",\n      \"rgb(218,218,235)\",\n      \"rgb(188,189,220)\",\n      \"rgb(158,154,200)\",\n      \"rgb(117,107,177)\",\n      \"rgb(84,39,143)\"\n    ],\n    7: [\n      \"rgb(242,240,247)\",\n      \"rgb(218,218,235)\",\n      \"rgb(188,189,220)\",\n      \"rgb(158,154,200)\",\n      \"rgb(128,125,186)\",\n      \"rgb(106,81,163)\",\n      \"rgb(74,20,134)\"\n    ],\n    8: [\n      \"rgb(252,251,253)\",\n      \"rgb(239,237,245)\",\n      \"rgb(218,218,235)\",\n      \"rgb(188,189,220)\",\n      \"rgb(158,154,200)\",\n      \"rgb(128,125,186)\",\n      \"rgb(106,81,163)\",\n      \"rgb(74,20,134)\"\n    ],\n    9: [\n      \"rgb(252,251,253)\",\n      \"rgb(239,237,245)\",\n      \"rgb(218,218,235)\",\n      \"rgb(188,189,220)\",\n      \"rgb(158,154,200)\",\n      \"rgb(128,125,186)\",\n      \"rgb(106,81,163)\",\n      \"rgb(84,39,143)\",\n      \"rgb(63,0,125)\"\n    ],\n    type: \"seq\"\n  },\n  RdBu: {\n    10: [\n      \"rgb(103,0,31)\",\n      \"rgb(178,24,43)\",\n      \"rgb(214,96,77)\",\n      \"rgb(244,165,130)\",\n      \"rgb(253,219,199)\",\n      \"rgb(209,229,240)\",\n      \"rgb(146,197,222)\",\n      \"rgb(67,147,195)\",\n      \"rgb(33,102,172)\",\n      \"rgb(5,48,97)\"\n    ],\n    11: [\n      \"rgb(103,0,31)\",\n      \"rgb(178,24,43)\",\n      \"rgb(214,96,77)\",\n      \"rgb(244,165,130)\",\n      \"rgb(253,219,199)\",\n      \"rgb(247,247,247)\",\n      \"rgb(209,229,240)\",\n      \"rgb(146,197,222)\",\n      \"rgb(67,147,195)\",\n      \"rgb(33,102,172)\",\n      \"rgb(5,48,97)\"\n    ],\n    3: [\n      \"rgb(239,138,98)\",\n      \"rgb(247,247,247)\",\n      \"rgb(103,169,207)\"\n    ],\n    4: [\n      \"rgb(202,0,32)\",\n      \"rgb(244,165,130)\",\n      \"rgb(146,197,222)\",\n      \"rgb(5,113,176)\"\n    ],\n    5: [\n      \"rgb(202,0,32)\",\n      \"rgb(244,165,130)\",\n      \"rgb(247,247,247)\",\n      \"rgb(146,197,222)\",\n      \"rgb(5,113,176)\"\n    ],\n    6: [\n      \"rgb(178,24,43)\",\n      \"rgb(239,138,98)\",\n      \"rgb(253,219,199)\",\n      \"rgb(209,229,240)\",\n      \"rgb(103,169,207)\",\n      \"rgb(33,102,172)\"\n    ],\n    7: [\n      \"rgb(178,24,43)\",\n      \"rgb(239,138,98)\",\n      \"rgb(253,219,199)\",\n      \"rgb(247,247,247)\",\n      \"rgb(209,229,240)\",\n      \"rgb(103,169,207)\",\n      \"rgb(33,102,172)\"\n    ],\n    8: [\n      \"rgb(178,24,43)\",\n      \"rgb(214,96,77)\",\n      \"rgb(244,165,130)\",\n      \"rgb(253,219,199)\",\n      \"rgb(209,229,240)\",\n      \"rgb(146,197,222)\",\n      \"rgb(67,147,195)\",\n      \"rgb(33,102,172)\"\n    ],\n    9: [\n      \"rgb(178,24,43)\",\n      \"rgb(214,96,77)\",\n      \"rgb(244,165,130)\",\n      \"rgb(253,219,199)\",\n      \"rgb(247,247,247)\",\n      \"rgb(209,229,240)\",\n      \"rgb(146,197,222)\",\n      \"rgb(67,147,195)\",\n      \"rgb(33,102,172)\"\n    ],\n    type: \"div\"\n  },\n  RdGy: {\n    10: [\n      \"rgb(103,0,31)\",\n      \"rgb(178,24,43)\",\n      \"rgb(214,96,77)\",\n      \"rgb(244,165,130)\",\n      \"rgb(253,219,199)\",\n      \"rgb(224,224,224)\",\n      \"rgb(186,186,186)\",\n      \"rgb(135,135,135)\",\n      \"rgb(77,77,77)\",\n      \"rgb(26,26,26)\"\n    ],\n    11: [\n      \"rgb(103,0,31)\",\n      \"rgb(178,24,43)\",\n      \"rgb(214,96,77)\",\n      \"rgb(244,165,130)\",\n      \"rgb(253,219,199)\",\n      \"rgb(255,255,255)\",\n      \"rgb(224,224,224)\",\n      \"rgb(186,186,186)\",\n      \"rgb(135,135,135)\",\n      \"rgb(77,77,77)\",\n      \"rgb(26,26,26)\"\n    ],\n    3: [\n      \"rgb(239,138,98)\",\n      \"rgb(255,255,255)\",\n      \"rgb(153,153,153)\"\n    ],\n    4: [\n      \"rgb(202,0,32)\",\n      \"rgb(244,165,130)\",\n      \"rgb(186,186,186)\",\n      \"rgb(64,64,64)\"\n    ],\n    5: [\n      \"rgb(202,0,32)\",\n      \"rgb(244,165,130)\",\n      \"rgb(255,255,255)\",\n      \"rgb(186,186,186)\",\n      \"rgb(64,64,64)\"\n    ],\n    6: [\n      \"rgb(178,24,43)\",\n      \"rgb(239,138,98)\",\n      \"rgb(253,219,199)\",\n      \"rgb(224,224,224)\",\n      \"rgb(153,153,153)\",\n      \"rgb(77,77,77)\"\n    ],\n    7: [\n      \"rgb(178,24,43)\",\n      \"rgb(239,138,98)\",\n      \"rgb(253,219,199)\",\n      \"rgb(255,255,255)\",\n      \"rgb(224,224,224)\",\n      \"rgb(153,153,153)\",\n      \"rgb(77,77,77)\"\n    ],\n    8: [\n      \"rgb(178,24,43)\",\n      \"rgb(214,96,77)\",\n      \"rgb(244,165,130)\",\n      \"rgb(253,219,199)\",\n      \"rgb(224,224,224)\",\n      \"rgb(186,186,186)\",\n      \"rgb(135,135,135)\",\n      \"rgb(77,77,77)\"\n    ],\n    9: [\n      \"rgb(178,24,43)\",\n      \"rgb(214,96,77)\",\n      \"rgb(244,165,130)\",\n      \"rgb(253,219,199)\",\n      \"rgb(255,255,255)\",\n      \"rgb(224,224,224)\",\n      \"rgb(186,186,186)\",\n      \"rgb(135,135,135)\",\n      \"rgb(77,77,77)\"\n    ],\n    type: \"div\"\n  },\n  RdPu: {\n    3: [\n      \"rgb(253,224,221)\",\n      \"rgb(250,159,181)\",\n      \"rgb(197,27,138)\"\n    ],\n    4: [\n      \"rgb(254,235,226)\",\n      \"rgb(251,180,185)\",\n      \"rgb(247,104,161)\",\n      \"rgb(174,1,126)\"\n    ],\n    5: [\n      \"rgb(254,235,226)\",\n      \"rgb(251,180,185)\",\n      \"rgb(247,104,161)\",\n      \"rgb(197,27,138)\",\n      \"rgb(122,1,119)\"\n    ],\n    6: [\n      \"rgb(254,235,226)\",\n      \"rgb(252,197,192)\",\n      \"rgb(250,159,181)\",\n      \"rgb(247,104,161)\",\n      \"rgb(197,27,138)\",\n      \"rgb(122,1,119)\"\n    ],\n    7: [\n      \"rgb(254,235,226)\",\n      \"rgb(252,197,192)\",\n      \"rgb(250,159,181)\",\n      \"rgb(247,104,161)\",\n      \"rgb(221,52,151)\",\n      \"rgb(174,1,126)\",\n      \"rgb(122,1,119)\"\n    ],\n    8: [\n      \"rgb(255,247,243)\",\n      \"rgb(253,224,221)\",\n      \"rgb(252,197,192)\",\n      \"rgb(250,159,181)\",\n      \"rgb(247,104,161)\",\n      \"rgb(221,52,151)\",\n      \"rgb(174,1,126)\",\n      \"rgb(122,1,119)\"\n    ],\n    9: [\n      \"rgb(255,247,243)\",\n      \"rgb(253,224,221)\",\n      \"rgb(252,197,192)\",\n      \"rgb(250,159,181)\",\n      \"rgb(247,104,161)\",\n      \"rgb(221,52,151)\",\n      \"rgb(174,1,126)\",\n      \"rgb(122,1,119)\",\n      \"rgb(73,0,106)\"\n    ],\n    type: \"seq\"\n  },\n  RdYlBu: {\n    10: [\n      \"rgb(165,0,38)\",\n      \"rgb(215,48,39)\",\n      \"rgb(244,109,67)\",\n      \"rgb(253,174,97)\",\n      \"rgb(254,224,144)\",\n      \"rgb(224,243,248)\",\n      \"rgb(171,217,233)\",\n      \"rgb(116,173,209)\",\n      \"rgb(69,117,180)\",\n      \"rgb(49,54,149)\"\n    ],\n    11: [\n      \"rgb(165,0,38)\",\n      \"rgb(215,48,39)\",\n      \"rgb(244,109,67)\",\n      \"rgb(253,174,97)\",\n      \"rgb(254,224,144)\",\n      \"rgb(255,255,191)\",\n      \"rgb(224,243,248)\",\n      \"rgb(171,217,233)\",\n      \"rgb(116,173,209)\",\n      \"rgb(69,117,180)\",\n      \"rgb(49,54,149)\"\n    ],\n    3: [\n      \"rgb(252,141,89)\",\n      \"rgb(255,255,191)\",\n      \"rgb(145,191,219)\"\n    ],\n    4: [\n      \"rgb(215,25,28)\",\n      \"rgb(253,174,97)\",\n      \"rgb(171,217,233)\",\n      \"rgb(44,123,182)\"\n    ],\n    5: [\n      \"rgb(215,25,28)\",\n      \"rgb(253,174,97)\",\n      \"rgb(255,255,191)\",\n      \"rgb(171,217,233)\",\n      \"rgb(44,123,182)\"\n    ],\n    6: [\n      \"rgb(215,48,39)\",\n      \"rgb(252,141,89)\",\n      \"rgb(254,224,144)\",\n      \"rgb(224,243,248)\",\n      \"rgb(145,191,219)\",\n      \"rgb(69,117,180)\"\n    ],\n    7: [\n      \"rgb(215,48,39)\",\n      \"rgb(252,141,89)\",\n      \"rgb(254,224,144)\",\n      \"rgb(255,255,191)\",\n      \"rgb(224,243,248)\",\n      \"rgb(145,191,219)\",\n      \"rgb(69,117,180)\"\n    ],\n    8: [\n      \"rgb(215,48,39)\",\n      \"rgb(244,109,67)\",\n      \"rgb(253,174,97)\",\n      \"rgb(254,224,144)\",\n      \"rgb(224,243,248)\",\n      \"rgb(171,217,233)\",\n      \"rgb(116,173,209)\",\n      \"rgb(69,117,180)\"\n    ],\n    9: [\n      \"rgb(215,48,39)\",\n      \"rgb(244,109,67)\",\n      \"rgb(253,174,97)\",\n      \"rgb(254,224,144)\",\n      \"rgb(255,255,191)\",\n      \"rgb(224,243,248)\",\n      \"rgb(171,217,233)\",\n      \"rgb(116,173,209)\",\n      \"rgb(69,117,180)\"\n    ],\n    type: \"div\"\n  },\n  RdYlGn: {\n    10: [\n      \"rgb(165,0,38)\",\n      \"rgb(215,48,39)\",\n      \"rgb(244,109,67)\",\n      \"rgb(253,174,97)\",\n      \"rgb(254,224,139)\",\n      \"rgb(217,239,139)\",\n      \"rgb(166,217,106)\",\n      \"rgb(102,189,99)\",\n      \"rgb(26,152,80)\",\n      \"rgb(0,104,55)\"\n    ],\n    11: [\n      \"rgb(165,0,38)\",\n      \"rgb(215,48,39)\",\n      \"rgb(244,109,67)\",\n      \"rgb(253,174,97)\",\n      \"rgb(254,224,139)\",\n      \"rgb(255,255,191)\",\n      \"rgb(217,239,139)\",\n      \"rgb(166,217,106)\",\n      \"rgb(102,189,99)\",\n      \"rgb(26,152,80)\",\n      \"rgb(0,104,55)\"\n    ],\n    3: [\n      \"rgb(252,141,89)\",\n      \"rgb(255,255,191)\",\n      \"rgb(145,207,96)\"\n    ],\n    4: [\n      \"rgb(215,25,28)\",\n      \"rgb(253,174,97)\",\n      \"rgb(166,217,106)\",\n      \"rgb(26,150,65)\"\n    ],\n    5: [\n      \"rgb(215,25,28)\",\n      \"rgb(253,174,97)\",\n      \"rgb(255,255,191)\",\n      \"rgb(166,217,106)\",\n      \"rgb(26,150,65)\"\n    ],\n    6: [\n      \"rgb(215,48,39)\",\n      \"rgb(252,141,89)\",\n      \"rgb(254,224,139)\",\n      \"rgb(217,239,139)\",\n      \"rgb(145,207,96)\",\n      \"rgb(26,152,80)\"\n    ],\n    7: [\n      \"rgb(215,48,39)\",\n      \"rgb(252,141,89)\",\n      \"rgb(254,224,139)\",\n      \"rgb(255,255,191)\",\n      \"rgb(217,239,139)\",\n      \"rgb(145,207,96)\",\n      \"rgb(26,152,80)\"\n    ],\n    8: [\n      \"rgb(215,48,39)\",\n      \"rgb(244,109,67)\",\n      \"rgb(253,174,97)\",\n      \"rgb(254,224,139)\",\n      \"rgb(217,239,139)\",\n      \"rgb(166,217,106)\",\n      \"rgb(102,189,99)\",\n      \"rgb(26,152,80)\"\n    ],\n    9: [\n      \"rgb(215,48,39)\",\n      \"rgb(244,109,67)\",\n      \"rgb(253,174,97)\",\n      \"rgb(254,224,139)\",\n      \"rgb(255,255,191)\",\n      \"rgb(217,239,139)\",\n      \"rgb(166,217,106)\",\n      \"rgb(102,189,99)\",\n      \"rgb(26,152,80)\"\n    ],\n    type: \"div\"\n  },\n  Reds: {\n    3: [\n      \"rgb(254,224,210)\",\n      \"rgb(252,146,114)\",\n      \"rgb(222,45,38)\"\n    ],\n    4: [\n      \"rgb(254,229,217)\",\n      \"rgb(252,174,145)\",\n      \"rgb(251,106,74)\",\n      \"rgb(203,24,29)\"\n    ],\n    5: [\n      \"rgb(254,229,217)\",\n      \"rgb(252,174,145)\",\n      \"rgb(251,106,74)\",\n      \"rgb(222,45,38)\",\n      \"rgb(165,15,21)\"\n    ],\n    6: [\n      \"rgb(254,229,217)\",\n      \"rgb(252,187,161)\",\n      \"rgb(252,146,114)\",\n      \"rgb(251,106,74)\",\n      \"rgb(222,45,38)\",\n      \"rgb(165,15,21)\"\n    ],\n    7: [\n      \"rgb(254,229,217)\",\n      \"rgb(252,187,161)\",\n      \"rgb(252,146,114)\",\n      \"rgb(251,106,74)\",\n      \"rgb(239,59,44)\",\n      \"rgb(203,24,29)\",\n      \"rgb(153,0,13)\"\n    ],\n    8: [\n      \"rgb(255,245,240)\",\n      \"rgb(254,224,210)\",\n      \"rgb(252,187,161)\",\n      \"rgb(252,146,114)\",\n      \"rgb(251,106,74)\",\n      \"rgb(239,59,44)\",\n      \"rgb(203,24,29)\",\n      \"rgb(153,0,13)\"\n    ],\n    9: [\n      \"rgb(255,245,240)\",\n      \"rgb(254,224,210)\",\n      \"rgb(252,187,161)\",\n      \"rgb(252,146,114)\",\n      \"rgb(251,106,74)\",\n      \"rgb(239,59,44)\",\n      \"rgb(203,24,29)\",\n      \"rgb(165,15,21)\",\n      \"rgb(103,0,13)\"\n    ],\n    type: \"seq\"\n  },\n  Set1: {\n    3: [\n      \"rgb(228,26,28)\",\n      \"rgb(55,126,184)\",\n      \"rgb(77,175,74)\"\n    ],\n    4: [\n      \"rgb(228,26,28)\",\n      \"rgb(55,126,184)\",\n      \"rgb(77,175,74)\",\n      \"rgb(152,78,163)\"\n    ],\n    5: [\n      \"rgb(228,26,28)\",\n      \"rgb(55,126,184)\",\n      \"rgb(77,175,74)\",\n      \"rgb(152,78,163)\",\n      \"rgb(255,127,0)\"\n    ],\n    6: [\n      \"rgb(228,26,28)\",\n      \"rgb(55,126,184)\",\n      \"rgb(77,175,74)\",\n      \"rgb(152,78,163)\",\n      \"rgb(255,127,0)\",\n      \"rgb(255,255,51)\"\n    ],\n    7: [\n      \"rgb(228,26,28)\",\n      \"rgb(55,126,184)\",\n      \"rgb(77,175,74)\",\n      \"rgb(152,78,163)\",\n      \"rgb(255,127,0)\",\n      \"rgb(255,255,51)\",\n      \"rgb(166,86,40)\"\n    ],\n    8: [\n      \"rgb(228,26,28)\",\n      \"rgb(55,126,184)\",\n      \"rgb(77,175,74)\",\n      \"rgb(152,78,163)\",\n      \"rgb(255,127,0)\",\n      \"rgb(255,255,51)\",\n      \"rgb(166,86,40)\",\n      \"rgb(247,129,191)\"\n    ],\n    9: [\n      \"rgb(228,26,28)\",\n      \"rgb(55,126,184)\",\n      \"rgb(77,175,74)\",\n      \"rgb(152,78,163)\",\n      \"rgb(255,127,0)\",\n      \"rgb(255,255,51)\",\n      \"rgb(166,86,40)\",\n      \"rgb(247,129,191)\",\n      \"rgb(153,153,153)\"\n    ],\n    type: \"qual\"\n  },\n  Set2: {\n    3: [\n      \"rgb(102,194,165)\",\n      \"rgb(252,141,98)\",\n      \"rgb(141,160,203)\"\n    ],\n    4: [\n      \"rgb(102,194,165)\",\n      \"rgb(252,141,98)\",\n      \"rgb(141,160,203)\",\n      \"rgb(231,138,195)\"\n    ],\n    5: [\n      \"rgb(102,194,165)\",\n      \"rgb(252,141,98)\",\n      \"rgb(141,160,203)\",\n      \"rgb(231,138,195)\",\n      \"rgb(166,216,84)\"\n    ],\n    6: [\n      \"rgb(102,194,165)\",\n      \"rgb(252,141,98)\",\n      \"rgb(141,160,203)\",\n      \"rgb(231,138,195)\",\n      \"rgb(166,216,84)\",\n      \"rgb(255,217,47)\"\n    ],\n    7: [\n      \"rgb(102,194,165)\",\n      \"rgb(252,141,98)\",\n      \"rgb(141,160,203)\",\n      \"rgb(231,138,195)\",\n      \"rgb(166,216,84)\",\n      \"rgb(255,217,47)\",\n      \"rgb(229,196,148)\"\n    ],\n    8: [\n      \"rgb(102,194,165)\",\n      \"rgb(252,141,98)\",\n      \"rgb(141,160,203)\",\n      \"rgb(231,138,195)\",\n      \"rgb(166,216,84)\",\n      \"rgb(255,217,47)\",\n      \"rgb(229,196,148)\",\n      \"rgb(179,179,179)\"\n    ],\n    type: \"qual\"\n  },\n  Set3: {\n    10: [\n      \"rgb(141,211,199)\",\n      \"rgb(255,255,179)\",\n      \"rgb(190,186,218)\",\n      \"rgb(251,128,114)\",\n      \"rgb(128,177,211)\",\n      \"rgb(253,180,98)\",\n      \"rgb(179,222,105)\",\n      \"rgb(252,205,229)\",\n      \"rgb(217,217,217)\",\n      \"rgb(188,128,189)\"\n    ],\n    11: [\n      \"rgb(141,211,199)\",\n      \"rgb(255,255,179)\",\n      \"rgb(190,186,218)\",\n      \"rgb(251,128,114)\",\n      \"rgb(128,177,211)\",\n      \"rgb(253,180,98)\",\n      \"rgb(179,222,105)\",\n      \"rgb(252,205,229)\",\n      \"rgb(217,217,217)\",\n      \"rgb(188,128,189)\",\n      \"rgb(204,235,197)\"\n    ],\n    12: [\n      \"rgb(141,211,199)\",\n      \"rgb(255,255,179)\",\n      \"rgb(190,186,218)\",\n      \"rgb(251,128,114)\",\n      \"rgb(128,177,211)\",\n      \"rgb(253,180,98)\",\n      \"rgb(179,222,105)\",\n      \"rgb(252,205,229)\",\n      \"rgb(217,217,217)\",\n      \"rgb(188,128,189)\",\n      \"rgb(204,235,197)\",\n      \"rgb(255,237,111)\"\n    ],\n    3: [\n      \"rgb(141,211,199)\",\n      \"rgb(255,255,179)\",\n      \"rgb(190,186,218)\"\n    ],\n    4: [\n      \"rgb(141,211,199)\",\n      \"rgb(255,255,179)\",\n      \"rgb(190,186,218)\",\n      \"rgb(251,128,114)\"\n    ],\n    5: [\n      \"rgb(141,211,199)\",\n      \"rgb(255,255,179)\",\n      \"rgb(190,186,218)\",\n      \"rgb(251,128,114)\",\n      \"rgb(128,177,211)\"\n    ],\n    6: [\n      \"rgb(141,211,199)\",\n      \"rgb(255,255,179)\",\n      \"rgb(190,186,218)\",\n      \"rgb(251,128,114)\",\n      \"rgb(128,177,211)\",\n      \"rgb(253,180,98)\"\n    ],\n    7: [\n      \"rgb(141,211,199)\",\n      \"rgb(255,255,179)\",\n      \"rgb(190,186,218)\",\n      \"rgb(251,128,114)\",\n      \"rgb(128,177,211)\",\n      \"rgb(253,180,98)\",\n      \"rgb(179,222,105)\"\n    ],\n    8: [\n      \"rgb(141,211,199)\",\n      \"rgb(255,255,179)\",\n      \"rgb(190,186,218)\",\n      \"rgb(251,128,114)\",\n      \"rgb(128,177,211)\",\n      \"rgb(253,180,98)\",\n      \"rgb(179,222,105)\",\n      \"rgb(252,205,229)\"\n    ],\n    9: [\n      \"rgb(141,211,199)\",\n      \"rgb(255,255,179)\",\n      \"rgb(190,186,218)\",\n      \"rgb(251,128,114)\",\n      \"rgb(128,177,211)\",\n      \"rgb(253,180,98)\",\n      \"rgb(179,222,105)\",\n      \"rgb(252,205,229)\",\n      \"rgb(217,217,217)\"\n    ],\n    type: \"qual\"\n  },\n  Spectral: {\n    10: [\n      \"rgb(158,1,66)\",\n      \"rgb(213,62,79)\",\n      \"rgb(244,109,67)\",\n      \"rgb(253,174,97)\",\n      \"rgb(254,224,139)\",\n      \"rgb(230,245,152)\",\n      \"rgb(171,221,164)\",\n      \"rgb(102,194,165)\",\n      \"rgb(50,136,189)\",\n      \"rgb(94,79,162)\"\n    ],\n    11: [\n      \"rgb(158,1,66)\",\n      \"rgb(213,62,79)\",\n      \"rgb(244,109,67)\",\n      \"rgb(253,174,97)\",\n      \"rgb(254,224,139)\",\n      \"rgb(255,255,191)\",\n      \"rgb(230,245,152)\",\n      \"rgb(171,221,164)\",\n      \"rgb(102,194,165)\",\n      \"rgb(50,136,189)\",\n      \"rgb(94,79,162)\"\n    ],\n    3: [\n      \"rgb(252,141,89)\",\n      \"rgb(255,255,191)\",\n      \"rgb(153,213,148)\"\n    ],\n    4: [\n      \"rgb(215,25,28)\",\n      \"rgb(253,174,97)\",\n      \"rgb(171,221,164)\",\n      \"rgb(43,131,186)\"\n    ],\n    5: [\n      \"rgb(215,25,28)\",\n      \"rgb(253,174,97)\",\n      \"rgb(255,255,191)\",\n      \"rgb(171,221,164)\",\n      \"rgb(43,131,186)\"\n    ],\n    6: [\n      \"rgb(213,62,79)\",\n      \"rgb(252,141,89)\",\n      \"rgb(254,224,139)\",\n      \"rgb(230,245,152)\",\n      \"rgb(153,213,148)\",\n      \"rgb(50,136,189)\"\n    ],\n    7: [\n      \"rgb(213,62,79)\",\n      \"rgb(252,141,89)\",\n      \"rgb(254,224,139)\",\n      \"rgb(255,255,191)\",\n      \"rgb(230,245,152)\",\n      \"rgb(153,213,148)\",\n      \"rgb(50,136,189)\"\n    ],\n    8: [\n      \"rgb(213,62,79)\",\n      \"rgb(244,109,67)\",\n      \"rgb(253,174,97)\",\n      \"rgb(254,224,139)\",\n      \"rgb(230,245,152)\",\n      \"rgb(171,221,164)\",\n      \"rgb(102,194,165)\",\n      \"rgb(50,136,189)\"\n    ],\n    9: [\n      \"rgb(213,62,79)\",\n      \"rgb(244,109,67)\",\n      \"rgb(253,174,97)\",\n      \"rgb(254,224,139)\",\n      \"rgb(255,255,191)\",\n      \"rgb(230,245,152)\",\n      \"rgb(171,221,164)\",\n      \"rgb(102,194,165)\",\n      \"rgb(50,136,189)\"\n    ],\n    type: \"div\"\n  },\n  YlGn: {\n    3: [\n      \"rgb(247,252,185)\",\n      \"rgb(173,221,142)\",\n      \"rgb(49,163,84)\"\n    ],\n    4: [\n      \"rgb(255,255,204)\",\n      \"rgb(194,230,153)\",\n      \"rgb(120,198,121)\",\n      \"rgb(35,132,67)\"\n    ],\n    5: [\n      \"rgb(255,255,204)\",\n      \"rgb(194,230,153)\",\n      \"rgb(120,198,121)\",\n      \"rgb(49,163,84)\",\n      \"rgb(0,104,55)\"\n    ],\n    6: [\n      \"rgb(255,255,204)\",\n      \"rgb(217,240,163)\",\n      \"rgb(173,221,142)\",\n      \"rgb(120,198,121)\",\n      \"rgb(49,163,84)\",\n      \"rgb(0,104,55)\"\n    ],\n    7: [\n      \"rgb(255,255,204)\",\n      \"rgb(217,240,163)\",\n      \"rgb(173,221,142)\",\n      \"rgb(120,198,121)\",\n      \"rgb(65,171,93)\",\n      \"rgb(35,132,67)\",\n      \"rgb(0,90,50)\"\n    ],\n    8: [\n      \"rgb(255,255,229)\",\n      \"rgb(247,252,185)\",\n      \"rgb(217,240,163)\",\n      \"rgb(173,221,142)\",\n      \"rgb(120,198,121)\",\n      \"rgb(65,171,93)\",\n      \"rgb(35,132,67)\",\n      \"rgb(0,90,50)\"\n    ],\n    9: [\n      \"rgb(255,255,229)\",\n      \"rgb(247,252,185)\",\n      \"rgb(217,240,163)\",\n      \"rgb(173,221,142)\",\n      \"rgb(120,198,121)\",\n      \"rgb(65,171,93)\",\n      \"rgb(35,132,67)\",\n      \"rgb(0,104,55)\",\n      \"rgb(0,69,41)\"\n    ],\n    type: \"seq\"\n  },\n  YlGnBu: {\n    3: [\n      \"rgb(237,248,177)\",\n      \"rgb(127,205,187)\",\n      \"rgb(44,127,184)\"\n    ],\n    4: [\n      \"rgb(255,255,204)\",\n      \"rgb(161,218,180)\",\n      \"rgb(65,182,196)\",\n      \"rgb(34,94,168)\"\n    ],\n    5: [\n      \"rgb(255,255,204)\",\n      \"rgb(161,218,180)\",\n      \"rgb(65,182,196)\",\n      \"rgb(44,127,184)\",\n      \"rgb(37,52,148)\"\n    ],\n    6: [\n      \"rgb(255,255,204)\",\n      \"rgb(199,233,180)\",\n      \"rgb(127,205,187)\",\n      \"rgb(65,182,196)\",\n      \"rgb(44,127,184)\",\n      \"rgb(37,52,148)\"\n    ],\n    7: [\n      \"rgb(255,255,204)\",\n      \"rgb(199,233,180)\",\n      \"rgb(127,205,187)\",\n      \"rgb(65,182,196)\",\n      \"rgb(29,145,192)\",\n      \"rgb(34,94,168)\",\n      \"rgb(12,44,132)\"\n    ],\n    8: [\n      \"rgb(255,255,217)\",\n      \"rgb(237,248,177)\",\n      \"rgb(199,233,180)\",\n      \"rgb(127,205,187)\",\n      \"rgb(65,182,196)\",\n      \"rgb(29,145,192)\",\n      \"rgb(34,94,168)\",\n      \"rgb(12,44,132)\"\n    ],\n    9: [\n      \"rgb(255,255,217)\",\n      \"rgb(237,248,177)\",\n      \"rgb(199,233,180)\",\n      \"rgb(127,205,187)\",\n      \"rgb(65,182,196)\",\n      \"rgb(29,145,192)\",\n      \"rgb(34,94,168)\",\n      \"rgb(37,52,148)\",\n      \"rgb(8,29,88)\"\n    ],\n    type: \"seq\"\n  },\n  YlOrBr: {\n    3: [\n      \"rgb(255,247,188)\",\n      \"rgb(254,196,79)\",\n      \"rgb(217,95,14)\"\n    ],\n    4: [\n      \"rgb(255,255,212)\",\n      \"rgb(254,217,142)\",\n      \"rgb(254,153,41)\",\n      \"rgb(204,76,2)\"\n    ],\n    5: [\n      \"rgb(255,255,212)\",\n      \"rgb(254,217,142)\",\n      \"rgb(254,153,41)\",\n      \"rgb(217,95,14)\",\n      \"rgb(153,52,4)\"\n    ],\n    6: [\n      \"rgb(255,255,212)\",\n      \"rgb(254,227,145)\",\n      \"rgb(254,196,79)\",\n      \"rgb(254,153,41)\",\n      \"rgb(217,95,14)\",\n      \"rgb(153,52,4)\"\n    ],\n    7: [\n      \"rgb(255,255,212)\",\n      \"rgb(254,227,145)\",\n      \"rgb(254,196,79)\",\n      \"rgb(254,153,41)\",\n      \"rgb(236,112,20)\",\n      \"rgb(204,76,2)\",\n      \"rgb(140,45,4)\"\n    ],\n    8: [\n      \"rgb(255,255,229)\",\n      \"rgb(255,247,188)\",\n      \"rgb(254,227,145)\",\n      \"rgb(254,196,79)\",\n      \"rgb(254,153,41)\",\n      \"rgb(236,112,20)\",\n      \"rgb(204,76,2)\",\n      \"rgb(140,45,4)\"\n    ],\n    9: [\n      \"rgb(255,255,229)\",\n      \"rgb(255,247,188)\",\n      \"rgb(254,227,145)\",\n      \"rgb(254,196,79)\",\n      \"rgb(254,153,41)\",\n      \"rgb(236,112,20)\",\n      \"rgb(204,76,2)\",\n      \"rgb(153,52,4)\",\n      \"rgb(102,37,6)\"\n    ],\n    type: \"seq\"\n  },\n  YlOrRd: {\n    3: [\n      \"rgb(255,237,160)\",\n      \"rgb(254,178,76)\",\n      \"rgb(240,59,32)\"\n    ],\n    4: [\n      \"rgb(255,255,178)\",\n      \"rgb(254,204,92)\",\n      \"rgb(253,141,60)\",\n      \"rgb(227,26,28)\"\n    ],\n    5: [\n      \"rgb(255,255,178)\",\n      \"rgb(254,204,92)\",\n      \"rgb(253,141,60)\",\n      \"rgb(240,59,32)\",\n      \"rgb(189,0,38)\"\n    ],\n    6: [\n      \"rgb(255,255,178)\",\n      \"rgb(254,217,118)\",\n      \"rgb(254,178,76)\",\n      \"rgb(253,141,60)\",\n      \"rgb(240,59,32)\",\n      \"rgb(189,0,38)\"\n    ],\n    7: [\n      \"rgb(255,255,178)\",\n      \"rgb(254,217,118)\",\n      \"rgb(254,178,76)\",\n      \"rgb(253,141,60)\",\n      \"rgb(252,78,42)\",\n      \"rgb(227,26,28)\",\n      \"rgb(177,0,38)\"\n    ],\n    8: [\n      \"rgb(255,255,204)\",\n      \"rgb(255,237,160)\",\n      \"rgb(254,217,118)\",\n      \"rgb(254,178,76)\",\n      \"rgb(253,141,60)\",\n      \"rgb(252,78,42)\",\n      \"rgb(227,26,28)\",\n      \"rgb(177,0,38)\"\n    ],\n    type: \"seq\"\n  }\n};\n","import { Injectable } from '@angular/core';\nimport {palettes} from './colorbrewer';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport type ColourSpecification = string;\nexport type ColourPalette = Array<ColourSpecification>;\n\n\nconst DEFAULT_NUM_COLOURS=3;\n\n@Injectable()\nexport class PaletteService {\n  namedPalettes:{[key:string]:ColourPalette} = {};\n\n  constructor(private _http:HttpClient) {\n\n  }\n\n  private _source:string='';\n  set source(val:string){\n    this._source=val;\n  }\n\n  getPalette(name:string,reverse?:boolean,numColours?:number):Observable<ColourPalette>{\n    var palette:(ColourPalette|null)=null;\n    if(this.namedPalettes[name]){\n      palette = this.namedPalettes[name];\n    } else if(palettes[name]){\n      palette = palettes[name][numColours||DEFAULT_NUM_COLOURS];\n    }\n\n    if(palette){\n      if(reverse){\n        return of(palette.slice().reverse());\n      }\n      return of(palette.slice());\n    }\n\n    return this._http.get(this._source+'/'+name+'.pal',{ responseType: 'text' }).pipe(\n      map((text:string)=>this.parseNCWMSPalette(text)));\n  }\n\n  parseNCWMSPalette(txt:string):ColourPalette{\n    return txt.split('\\n')\n      .map(ln=>ln.replace(/\\#.*/g,'').trim().replace(/ +/g,' '))\n      .filter(ln => ln.length)\n      .map(e=> `rgb(${e.split(' ').join(',')})`);\n  }\n\n  colourIndex(val:number,min:number,max:number,count:number):number{\n    let point = (val-min)/(max-min);\n    let pos = Math.round(point*(count-1));\n    return pos;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nexport interface DateStruct {\n  // ng-bootstrap\n  day:number;\n  month:number;\n  year:number;\n}\n\nexport interface UTCDate {\n  getTime(): number;\n  getUTCFullYear(): number;\n  getUTCMonth():number;\n  getUTCDate():number;\n\n  setUTCFullYear(n: number):void;\n  setUTCMonth(n:number):void;\n  setUTCDate(n:number):void;\n}\n\nexport function utcDate(y:number,m?:number,d?:number):UTCDate{\n  return new Date(Date.UTC(y,m,d));\n}\n\nexport function utcDateCopy(d:UTCDate){\n  return utcDate(d.getUTCFullYear(),d.getUTCMonth(),d.getUTCDate());\n}\n\n@Injectable()\nexport class TimeUtilsService {\n\n  constructor() {\n\n  }\n\n  specialDates: {[key:string]:(() => Date)} = {\n    yesterday: () => {\n      var d = new Date();\n      d.setDate(d.getDate() - 1);\n      return d;\n    }\n  }\n\n  convertDate(d:(UTCDate|string)):DateStruct{\n    if(!d){\n      d = new Date();\n    }\n\n    var date:UTCDate;\n    if(typeof(d) === 'string'){\n      var dateText:string = d;\n      if(this.specialDates[dateText]){\n        date = this.specialDates[dateText]();\n      } else {\n        var [year,month,day,other] = d.split('-').map(c => +c);\n        date = utcDate(year,month,day);\n      }\n    } else {\n      date = d;\n    }\n\n    return {\n      day: date.getUTCDate(),\n      month: date.getUTCMonth() + 1,\n      year: date.getUTCFullYear()\n    };\n  }\n\n  datesEqual(lhs:DateStruct,rhs:DateStruct):boolean{\n    if(!lhs || !rhs){\n      return false;\n    }\n\n    return (lhs.year === rhs.year) &&\n           (lhs.month === rhs.month) &&\n           (lhs.day === rhs.day);\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CatalogHost } from './data/catalog';\nimport { Observable } from 'rxjs';\nimport { publishReplay, refCount } from 'rxjs/operators';\n\n@Injectable()\nexport class StaticDataService {\n  cache:{[key:string]:Observable<any>}={};\n\n  constructor(private http:HttpClient) {\n\n  }\n\n  get(host:CatalogHost,path:string):Observable<any>{\n    var url = `${host.url}${path}`;\n    if(!this.cache[url]){\n      let uniqueUrl = url;\n      if(uniqueUrl.indexOf('?')<0){\n        uniqueUrl += '?';\n      } else {\n        uniqueUrl += '&'\n      }\n      uniqueUrl += `time=${new Date().getTime()}`;\n\n      this.cache[url] = this.http.get(uniqueUrl).pipe(\n        publishReplay(),refCount());\n    }\n\n    return this.cache[url];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { parseData, parseDAS,parseDDX,\n  simplify, DapData, DapDAS, DapDDX, DapVariableDataArray } from 'dap-query-js/dist/dap-query';\nimport { CatalogHost } from './data/catalog';\nimport { map, switchMap } from 'rxjs/operators';\nimport { Observable,forkJoin } from 'rxjs';\n\n@Injectable()\nexport class OpendapService {\n\n  constructor(private http:HttpClient) {\n\n  }\n\n  makeURL(host:CatalogHost,filepath:string):string{\n    return host.url + '/dodsC/' + filepath;\n  }\n\n  get(url:string):Observable<string>{\n    return this.http.get(url,{ responseType: 'text' })\n  }\n\n  getData(queryUrl:string,das:DapDAS):Observable<DapData>{\n    return this.get(queryUrl).pipe(\n      map((txt:string)=>simplify(parseData(txt,das))));\n  }\n\n  getDAS(url:string):Observable<DapDAS>{\n    return this.get(url+'.das').pipe(\n      map(parseDAS));\n  }\n\n  getDDX(url:string):Observable<DapDDX>{\n    return this.get(url+'.ddx').pipe(\n      map(parseDDX));\n  }\n\n  getExtent(url:string):Observable<number[]>{\n    console.log(url);\n    return forkJoin([\n      this.getDAS(url),\n      this.getDDX(url)\n    ]).pipe(switchMap(([theDAS,theDDX])=>{\n      var das:DapDAS = <DapDAS>theDAS;\n      return forkJoin([\n        this.getData(url+'.ascii?latitude',das),\n        this.getData(url+'.ascii?longitude',das)\n      ])}),\n      map((ll:DapData[])=>{\n        var lats = <DapVariableDataArray>ll[0].latitude;\n        var lons = <DapVariableDataArray>ll[1].longitude;\n        return [<number>lats[0],<number>lats[lats.length-1],\n                <number>lons[0],<number>lons[lons.length-1]];\n      }));\n  }\n\n  dapRangeQuery(from:number,to?:number,step?:number):string{\n    step = step || 1;\n    if(to===undefined){\n      to = from;\n    }\n    return '['+from+':'+step+':'+to+']';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MappedLayer } from './data/mapped-layer';\nimport { DapDDX, DapDAS, DapData } from 'dap-query-js/dist/dap-query';\nimport { OpendapService } from './opendap.service';\nimport { Bounds } from './data/bounds';\n\nimport { CatalogHost } from './data/catalog';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport { switchMap, publishReplay, refCount, map, switchAll, tap, shareReplay } from 'rxjs/operators';\n\nexport const LAT_NAMES=['latitude','lat'];\nexport const LNG_NAMES=['longitude','lng','lon'];\nexport const TIME_NAMES=['time','t','Time'];\n\n@Injectable()\nexport class MetadataService {\n  ddxCache:{[key:string]:Observable<DapDDX>}={}\n  dasCache:{[key:string]:Observable<DapDAS>}={}\n\n  constructor(private dap:OpendapService) {\n\n  }\n\n  identifyCoordinate(ddx:DapDDX,...possibleNames:Array<string>):string{\n    for(let n of possibleNames){\n      if(ddx.variables[n]){\n        return n;\n      }\n    }\n    return undefined;\n  }\n\n  getDDX(host:CatalogHost,file:string):Observable<DapDDX>{\n    var url = this.dap.makeURL(host,file);\n\n    return this.ddxForUrl(url);\n  }\n\n  ddxForUrl(url:string):Observable<DapDDX>{\n    if(!this.ddxCache[url]){\n      this.ddxCache[url] =\n        this.dap.getDDX(url).pipe(publishReplay(),refCount());\n    }\n\n    return this.ddxCache[url];\n}\n\n  getDDXForLayer(ml:MappedLayer):Observable<DapDDX>{\n    return this.getDDX(ml.flattenedSettings.host,ml.interpolatedFile);\n  }\n\n  getDAS(host:CatalogHost,file:string):Observable<DapDAS>{\n    var url = this.dap.makeURL(host,file);\n    return this.dasForUrl(url);\n  }\n\n  dasForUrl(url:string):Observable<DapDAS>{\n    if(!this.dasCache[url]){\n      this.dasCache[url] =\n        this.dap.getDAS(url).pipe(publishReplay(),refCount());\n    }\n\n    return this.dasCache[url];\n  }\n\n  getDASForLayer(ml:MappedLayer):Observable<DapDAS>{\n    return this.getDAS(ml.flattenedSettings.host,ml.interpolatedFile);\n  }\n\n  getMetadata(ml:MappedLayer):Observable<any>{\n    if(ml.flattenedSettings.host.software !=='tds'){\n      return of({});\n    }\n\n    return forkJoin([this.getDASForLayer(ml),this.getDDXForLayer(ml)]).pipe(\n      map(meta=>{\n        return {\n          das: <DapDAS>meta[0],\n          ddx: <DapDDX>meta[1]\n        };\n      }),\n      map(meta=>{\n        return Object.assign({},\n                             meta.das.attr||{},\n                             meta.ddx.variables[ml.flattenedSettings.layer||ml.flattenedSettings.variable]||{});\n      }));\n  }\n\n  populateMetadata(ml:MappedLayer){\n    this.getMetadata(ml).subscribe(entry=>{\n      setTimeout(()=>{\n        ml.retrievedMetadata = entry;\n      })\n    });\n  }\n\n  getGrid(host:CatalogHost,file:string):Observable<number[][]>{\n    const url = this.dap.makeURL(host,file);\n    return this.getGridForURL(url);\n  }\n\n  getGridForURL(url:string):Observable<number[][]>{\n    const ddx$ = this.ddxForUrl(url);\n    const das$ = this.dasForUrl(url);\n    const res$ = <Observable<number[][]>>forkJoin([ddx$,das$]).pipe(\n      map((metadata:any[])=>{\n        const ddx:DapDDX = metadata[0];\n        const das:DapDAS = metadata[1];\n\n        const latCoord = this.identifyCoordinate(ddx,...LAT_NAMES);\n        const lngCoord = this.identifyCoordinate(ddx,...LNG_NAMES);\n\n        const lat$ =\n          this.dap.getData(`${url}.ascii?${latCoord}`,das).pipe(\n            map((dd:DapData)=><number[]>dd[latCoord]));\n        const lng$ =\n          this.dap.getData(`${url}.ascii?${lngCoord}`,das).pipe(\n            map((dd:DapData)=><number[]>dd[lngCoord]));\n\n        return forkJoin<number[]>(lat$,lng$);\n      }),switchAll(),publishReplay(),refCount());\n      return res$;\n  }\n\n  getGridForLayer(ml:MappedLayer):Observable<Array<Array<number>>>{\n    return this.getGrid(ml.flattenedSettings.host,ml.interpolatedFile);\n  }\n\n  getSpatialExtent(ml:MappedLayer):Observable<Bounds>{\n    return this.getGridForLayer(ml).pipe(map(([lats,lngs])=>{\n      var result:Bounds = {\n        east: Math.max(...lngs),\n        west: Math.min(...lngs),\n        north: Math.max(...lats),\n        south: Math.min(...lats)\n      };\n      return result;\n    })).pipe(publishReplay(), refCount());\n  }\n\n  getTimeDimension(host:CatalogHost,file:string):Observable<Date[]>{\n    const url = this.dap.makeURL(host,file);\n    return this.getTimeDimensionForURL(url);\n  }\n\n  timeCache:{[key:string]:Observable<Date[]>}={};\n\n  getTimeDimensionForURL(url:string):Observable<Date[]>{\n    if(!this.timeCache[url]){\n      const ddx$ = this.ddxForUrl(url);\n      const das$ = this.dasForUrl(url);\n      const res$ = <Observable<Date[]>>forkJoin([ddx$,das$]).pipe(\n        map((metadata:any[])=>{\n          const ddx:DapDDX = metadata[0];\n          const das:DapDAS = metadata[1];\n\n          const timeCoord = this.identifyCoordinate(ddx,...TIME_NAMES);\n\n          const time$ =\n            this.dap.getData(`${url}.ascii?${timeCoord}`,das).pipe(\n              map((dd:DapData)=><Date[]>dd[timeCoord]));\n\n          return time$;\n        }),switchAll(),shareReplay());\n      this.timeCache[url] = res$;\n    }\n    return this.timeCache[url];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MappedLayer } from './data/mapped-layer';\nimport { OpendapService } from './opendap.service';\nimport { MetadataService, LAT_NAMES, LNG_NAMES, TIME_NAMES } from './metadata.service';\nimport { DapDDX, DapDAS, DapData } from 'dap-query-js/dist/dap-query';\nimport { CatalogHost } from './data/catalog';\nimport { forkJoin, Observable } from 'rxjs';\nimport { switchMap, map } from 'rxjs/operators';\n\nexport interface LatLng {\n  // google maps\n  lat(): number;\n  lng(): number;\n  toJSON(): any;\n  toString(): string;\n}\n\nexport interface TimeSeries{\n  dates:Array<Date>;\n  values:Array<number>;\n  label?:string;\n  tags?:{\n    [key:string]:any\n  };\n  style?:string;\n  units?:string;\n  [key:string]:any;\n}\n\nexport interface SimpleLatLng{\n  lat:number,\n  lng:number\n};\n\n@Injectable()\nexport class TimeseriesService {\n\n  constructor(private metadata:MetadataService,private dap:OpendapService) {\n\n  }\n\n  getTimeseries(host:CatalogHost,file:string,variable:string,\n                pt:(LatLng|SimpleLatLng),additionalIndices:any,\n                fillValue?:number):Observable<TimeSeries>{\n    additionalIndices = additionalIndices || {};\n    var url = this.dap.makeURL(host,file);\n    var ddx$ = this.metadata.ddxForUrl(url);\n    var das$ = this.metadata.dasForUrl(url);\n    var variable = variable;\n    return forkJoin(ddx$,das$,this.metadata.getGrid(host,file)).pipe(switchMap(\n      ([ddx,das,latsAndLngs])=>{\n        const lats:number[] = (<number[][]>latsAndLngs)[0];\n        const lngs:number[] = (<number[][]>latsAndLngs)[1];\n      var latIndex = this.indexInDimension((<any>pt).lat,lats);\n      var lngIndex = this.indexInDimension((<any>pt).lng,lngs);\n      if(fillValue===undefined){\n        fillValue = +(<DapDDX>ddx).variables[variable]._FillValue;\n      }\n      var query = this.makeTimeQuery(<DapDDX>ddx,variable,latIndex,lngIndex,additionalIndices);\n      return this.dap.getData(`${url}.ascii?${variable}${query}`,<DapDAS>das)\n    }),map((data:DapData)=>{\n      let vals = (<number[]> data[variable]);\n      if(!vals.length){\n        vals = [<number>data[variable]];\n      }\n      let dates = <Date[]>(data.time||data.t);\n      if(dates&&!dates.length){\n        dates = <Date[]>[data.time||data.t];\n      }\n      return {\n        dates:dates,\n        values:vals.map(v=>(v===fillValue)?NaN:v)\n      };\n    }));\n  }\n\n  getTimeseriesForLayer(ml:MappedLayer,pt:LatLng):Observable<TimeSeries>{\n    return this.getTimeseries(ml.flattenedSettings.host,\n                              ml.interpolatedFile,\n                              ml.flattenedSettings.layer||ml.flattenedSettings.variable,\n                              pt,\n                              null,\n                              ml.flattenedSettings.fillValue);\n  }\n\n\n  makeTimeQuery(ddx:DapDDX,variable:string,latIndex:number,lngIndex:number,additionalIndices:any):string{\n    var metadata = ddx.variables[variable];\n    var query='';\n\n    metadata.dimensions.forEach((dim:any)=>{\n      var dName:string = dim.name.toLowerCase();\n      if(TIME_NAMES.indexOf(dName)>=0){\n        query += this.dapRangeQuery(0,+(dim.size)-1);\n      } else if(LAT_NAMES.indexOf(dName)>=0){\n          query += this.dapRangeQuery(latIndex);\n      } else if(LNG_NAMES.indexOf(dName)>=0){\n        query += this.dapRangeQuery(lngIndex);\n      } else {\n        query += this.dapRangeQuery(additionalIndices[dName]||0);\n      }\n    });\n    return query;\n  }\n\n  dapRangeQuery(from:number,to?:number,step?:number):string{\n    step = step || 1;\n    if(to===undefined){\n      to = from;\n    }\n    return '['+from+':'+step+':'+to+']';\n  }\n\n  indexInDimension(c:number,dim:Array<number>,trim?:number):number{\n    var minIndex = 0;\n    var maxIndex = dim.length-1;\n\n    if(trim){\n      maxIndex-=trim;\n    }\n\n    const rev = dim[0] > dim[dim.length-1];\n    if(rev){\n      minIndex = maxIndex;\n      maxIndex = 0;\n    }\n    var currentIndex;\n\n    while((minIndex<=maxIndex)||(rev&&(maxIndex<=minIndex))){\n      if(c<=dim[minIndex]){\n        return minIndex;\n      }\n\n      if(c>=dim[maxIndex]){\n        return maxIndex;\n      }\n\n      currentIndex = Math.floor((minIndex + maxIndex) / 2);\n\n      var d1 = Math.abs(dim[currentIndex]-c);\n      var d2 = Math.abs(dim[currentIndex+1]-c);\n\n      if(rev){\n        if (d2 <= d1) {\n            maxIndex = currentIndex + 1;\n        } else {\n            minIndex = currentIndex;\n        }\n      } else {\n        if (d2 <= d1) {\n            minIndex = currentIndex + 1;\n        } else {\n            maxIndex = currentIndex;\n        }\n      }\n    }\n    return currentIndex;\n  };\n\n}\n","\n// @dynamic\nexport class InterpolationService{\n  static templateMatcher: RegExp = /{{\\s?([^{}\\s]*)\\s?}}/g;\n  private static isDefined(val:any){\n    return val!==undefined && val!==null;\n  }\n\n  public static interpolate(expr: string, params?: any): string {\n    if(typeof expr !== 'string' || !params) {\n      return expr;\n    }\n\n    return expr.replace(InterpolationService.templateMatcher, (substring: string, b: string) => {\n      let r = InterpolationService.getValue(params, b);\n      return InterpolationService.isDefined(r) ? r : substring;\n    });\n  }\n\n  static getValue(target: any, key: string): string {\n    let keys = key.split('.');\n    key = '';\n    do {\n      key += keys.shift();\n      if(InterpolationService.isDefined(target) && InterpolationService.isDefined(target[key]) && (typeof target[key] === 'object' || !keys.length)) {\n        target = target[key];\n        key = '';\n      } else if(!keys.length) {\n        target = undefined;\n      } else {\n        key += '.';\n      }\n    } while(keys.length);\n\n    return target;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject, of } from 'rxjs';\nimport { PointData, Catalog, LayerTagValue } from './data/catalog';\nimport { Feature, GeometryObject } from 'geojson';\nimport { InterpolationService } from './interpolation.service';\nimport { MetadataService } from './metadata.service';\nimport { map } from 'rxjs/operators';\n\nexport interface PointSelection {\n  catalog: PointData,\n  variable:string,\n  feature:Feature<GeometryObject>,\n  tags: {[key:string]:string}\n}\n\n@Injectable()\nexport class PointSelectionService {\n  private latestPointSelectionSource = new BehaviorSubject<PointSelection>(null);\n  latestPointSelection:Observable<PointSelection> = this.latestPointSelectionSource.asObservable();\n\n  constructor(private meta: MetadataService) {\n\n  }\n  private unchanged(current:PointSelection,updated:PointSelection){\n    if(!current && !updated){\n      return true;\n    }\n\n    if(!current || !updated){\n      return false;\n    }\n\n    if(current.variable !== updated.variable){\n      return false;\n    }\n\n    if(!Object.keys(current.tags).every(t=>current.tags[t]===updated.tags[t])){\n      return false;\n    }\n\n    if(current.catalog.url!==updated.catalog.url){\n      return false;\n    }\n\n    if(current.feature!==updated.feature){\n      return false;\n    }\n\n    return true;\n    // return false; // TODO\n  }\n\n  pointSelection(sel: PointSelection) {\n    let current = this.latestPointSelectionSource.getValue();\n    if(this.unchanged(current,sel)){\n      return;\n    }\n\n    let url = this.fullUrl(sel);\n    if(!this.validUrl(url)){\n      return; // Not a complete selection\n    }\n\n    if(!sel.variable){\n      return; // Not a complete selection\n    }\n\n    this.latestPointSelectionSource.next(sel);\n  }\n\n  fullUrl(sel:PointSelection) {\n    let params = Object.assign({},\n                               sel.feature?sel.feature.properties:{},\n                               sel.tags);\n    return InterpolationService.interpolate(sel.catalog.url,params);\n  }\n\n  validUrl(url:string):boolean{\n    return url.indexOf('{{')<0;\n  }\n\n  timeseriesVariables(sel:PointSelection):Observable<LayerTagValue[]>{\n    let coords = sel.catalog.coordinates || {};\n    let url = this.fullUrl(sel);\n    if(!this.validUrl(url)){\n      return of([]);\n    }\n\n    return this.meta.ddxForUrl(url).pipe(\n      map(ddx=>{\n        let variables = ddx.variables;\n        let variableNames = Object.keys(variables).filter(v=>{\n          let dims:any[] = ddx.variables[v].dimensions;\n          return Object.keys(coords).every(coord=>{\n            return dims.find(dim=>dim.name===coord);\n          });\n        });\n\n        return variableNames.map(v=>{\n          if(sel.catalog&&sel.catalog.displayFormat){\n            let fmt = Object.assign({variable:v},ddx.variables[v]);\n            return {\n              value:v,\n              label:InterpolationService.interpolate(sel.catalog.displayFormat,fmt)\n            }\n          }\n          if(ddx.variables[v].long_name){\n            return {\n              value:v,\n              label:ddx.variables[v].long_name\n            };\n          }\n          return {\n            value:v,\n            label:v\n          };\n        });\n      }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, forkJoin } from 'rxjs';\nimport { UTCDate } from './time-utils.service';\nimport { MappedLayer } from './data/mapped-layer';\nimport { map } from 'rxjs/operators';\nimport { InterpolationService } from './interpolation.service';\nimport { MetadataService } from './metadata.service';\nimport { Layer } from './data/catalog';\n\n@Injectable()\nexport class AvailableDatesService {\n\n  constructor(private metadata:MetadataService) {\n\n  }\n\n  private fnForYear(mapped:MappedLayer,year:number){\n    const publication = mapped.layer.publications[mapped.options.publication];\n    return InterpolationService.interpolate(publication.options.filepath, {\n      year: year\n    });\n  }\n\n  availableDates(mapped:MappedLayer,year?:number):Observable<Date[]>{\n    let layer = mapped.layer;\n    let fn = this.fnForYear(mapped,year);\n\n    let res$ = this.metadata.getTimeDimension(layer.options.host,fn);\n\n    if(!layer.timeshift){\n      return res$;\n    }\n\n    if(layer.timePeriod.containsYear(year-1)){\n      fn = this.fnForYear(mapped,year-1);\n\n      let prev$ = this.metadata.getTimeDimension(layer.host,fn);\n\n      res$ = forkJoin(...[prev$,res$]).pipe(\n        map((years:Date[][])=> years[0].concat(years[1])));\n    }\n\n    return res$.pipe(\n        map(dates=>{\n          return dates.map(d=>{\n            let res = new Date(d.getTime());\n            res.setUTCDate(d.getUTCDate()-layer.timeshift*layer.timestep);\n            return res;\n          });\n        }),\n        map(dates=>dates.filter((d,i)=>(i>=Math.abs(layer.timeshift))&&(d.getUTCFullYear()===year)))\n    );\n  }\n}\n","\nimport { Bounds } from './bounds';\nimport { Observable } from 'rxjs';\n\nconst NAMED_OPTIONS:{[key:string]:string}={\n  host:'namedHosts',\n  interval:'namedIntervals'\n}\n\nfunction clone(v:any):any{\n  return JSON.parse(JSON.stringify(v));\n}\n\nfunction matchFirstDefinedKey(keys:Array<string>,lhs:any,rhs:any):boolean{\n  for(let k of keys){\n    if(lhs[k]&&rhs[k]){\n      return lhs[k]===rhs[k];\n    }\n  }\n  return false;\n}\n\nfunction mergeArraysByKeys(keys:Array<string>,...sources:Array<Array<Publication>>):Array<any>{\n  if(!sources.length){\n    return [];\n  }\n\n  var result = (<Array<any>>clone(sources[0])).map(p=>new Publication(p));\n\n  for(var i=1;i<sources.length;i++){\n    var source = sources[i];\n    for(var j=0;j<source.length;j++){\n      var publication:Publication = source[j];\n      var match = result.findIndex((pub:any)=>matchFirstDefinedKey(keys,pub,publication));\n      if(match>=0){\n        var options = Object.assign({},publication.options||{},result[match].options||{})\n        result[match] = Object.assign(new Publication(),publication,result[match]);\n        result[match].options = options;\n      } else {\n        result.push(new Publication(clone(publication)));\n      }\n    }\n  }\n  result = result.filter(p=>!p.skip);\n  return result;\n}\n\nfunction propagate(target:any,source:any,skipPublications?:boolean){\n  target.options = Object.assign({},source.options||{},target.options||{});\n\n  if(!skipPublications){\n    target.publications = mergeArraysByKeys(['timestep','label'],target.publications||[],source.publications||[]);\n//    console.log(target.publications);\n  }\n}\n\nfunction instantiateNamedOptions(dest:any,source:any){\n  for(var key in NAMED_OPTIONS){\n    const configKey:string = NAMED_OPTIONS[key];\n    if(!source[configKey]){\n      continue;\n    }\n\n    if(!dest[key]||(typeof(dest[key])!=='string')){\n      continue;\n    }\n\n    const lookup = dest[key];\n    dest[key] = source[configKey][lookup];\n  }\n}\n\nexport interface CatalogHost{\n  url?:string;\n  software?:string;\n  downloadLink?:string;\n}\n\nexport class CatalogOptions{\n  host?:CatalogHost;\n  downloadPath?:string;\n  filepath?:string;\n  palette?:string;\n  colorscalerange?:Array<number>;\n  legend?:string;\n  mapOptions?:any;\n  timeFormat?:string;\n  publisher?:string;\n  publisherURL?:string;\n  units?:string;\n  smallExtent?:boolean;\n  vectors?:\"point\"|\"line\"|\"polygon\";\n  styles?:any;\n  publicationLabel?:string;\n  variable?:string;\n  start?:string;\n  end?:string;\n}\n\nexport class Catalog{\n  name:string;\n  themes:Array<Theme> = [];\n  options:CatalogOptions;\n  publications:Array<Publication>;\n\n  constructor(config?:any){\n    if(!config){\n      return;\n    }\n    Object.assign(this,config);\n    this.themes = config.themes.map((t:any)=>new Theme(t));\n    this.propagateOptions();\n    this.instantiateNamedOptions();\n  }\n\n  propagateOptions(){\n    this.themes.forEach(t=>{\n      propagate(t,this);\n      t.propagateOptions();\n    });\n  }\n\n  instantiateNamedOptions(){\n    if(this.publications){\n      this.publications.forEach(p=>p.instantiateNamedOptions(this));\n    }\n    this.themes.forEach(t=>t.instantiateNamedOptions(this));\n  }\n\n  allLayers():Array<Layer>{\n    return this.themes.map(t=>t.layers).reduce((prev,curr)=>prev.concat(curr), []);\n  }\n}\n\nexport class Theme{\n  name:string;\n  dataCreator?:string;\n  skip:boolean;\n  layers:Array<Layer> = [];\n  path:string;\n  options:CatalogOptions;\n  publications:Array<Publication>;\n\n  constructor(config?:any){\n    if(!config){\n      return;\n    }\n    Object.assign(this,config);\n\n    if(config.layers){\n      this.layers = config.layers.map((l:any)=>new Layer(l));\n    } else {\n      this.layers = [];\n    }\n  }\n\n  propagateOptions(){\n    this.layers.forEach(l=>{\n      propagate(l,this);\n      l.propagateOptions();\n      l.dataCreator = l.dataCreator || this.dataCreator;\n    });\n  }\n\n  instantiateNamedOptions(source:any){\n    instantiateNamedOptions(this.options,source);\n    this.publications.forEach(p=>p.instantiateNamedOptions(source));\n    this.layers.forEach(l=>l.instantiateNamedOptions(source));\n  }\n\n}\n\nexport class Layer{\n  publications:Array<Publication> = [];\n  skip:boolean;\n  options:CatalogOptions = new CatalogOptions();\n  placeholder:boolean;\n  name:string;\n  dataCreator?:string;\n  path:string;\n  [key:string]:any;\n  spatialExtent: Observable<Bounds>;\n\n  constructor(config?:any){\n    if(!config){\n      return;\n    }\n    Object.assign(this,config);\n    if(config.publications){\n      this.publications = config.publications.map((p:any)=>new Publication(p));\n    } else {\n      this.publications = [];\n    }\n  }\n\n  propagateOptions(){\n    this.publications.forEach(p=>{\n      propagate(p,this,true);\n    })\n  }\n\n  instantiateNamedOptions(source:any){\n    instantiateNamedOptions(this.options,source);\n    this.publications.forEach(p=>p.instantiateNamedOptions(source));\n  }\n}\n\nexport class Publication{\n  timestep:string;\n  timestepMultiplier:number;\n  timestepReference:string;\n  label:string;\n  skip:boolean;\n  options:CatalogOptions = new CatalogOptions();\n  pointdata?:PointData;\n\n  constructor(config?:any){\n    if(!config){\n      return;\n    }\n    Object.assign(this,config);\n  }\n\n  instantiateNamedOptions(source:any){\n    instantiateNamedOptions(this.options,source);\n  }\n}\n\nexport interface PointData{\n  protocol:string;\n  url:string;\n  coordinates:{[key:string]:number};\n  tags:{[key:string]:Array<string|LayerTagValue>};\n  labels?:string[];\n  defaultVariable:string;\n  displayFormat?:string;\n  chart?:string;\n  exclude?:string[];\n}\n\nexport interface LayerPropertyStyle{\n  hyperlink?:boolean;\n  placeholder?:string;\n}\n\nexport interface LayerTagValue{\n  value:string;\n  label:string;\n}\n\nexport interface LayerTagMap{\n  [key:string]:LayerTagValue[]\n}\n","import { Layer } from './catalog';\nimport { InterpolationService } from '../interpolation.service';\n\nexport type MappedLayerTypes = 'wms' | 'vector' | 'circle';\n\nexport interface MappedLayerOptions {\n  legend?: boolean;\n  publication?: number;\n  date?: Date,\n\n  [key: string]: any;\n}\n\nconst PUBLICATION_PRIORITY_ORDER = [\n  'annual',\n  'monthly',\n  'daily'\n];\n\nconst MAKE_DOWNLOAD_URL:{[key:string]:(a:string,s:string,ml:MappedLayer)=>string} = {\n  tds:(host:string,fn:string)=>{\n    let components = fn.split('/');\n    components.pop();\n    return `${host}/catalog/${components.join('/')}/catalog.html`;\n  },\n  static:(host:string,fn:string,ml:MappedLayer)=>{\n    return ml.layer.options.downloadPath || `${host}${fn}`;\n  }\n}\n\nexport const WMS_PARAMETER_NAMES:{[key:string]:Array<string>} = {\n  tds: [\n    'layers',\n    'styles',\n    'colorscalerange',\n    'abovemaxcolor',\n    'belowmincolor',\n    'time',\n    'transparent',\n    'logscale'\n  ],\n  geoserver: [\n    'transparent',\n    'layers'\n  ],\n  esri: [\n    'layers',\n    'styles',\n    'transparent'\n  ]\n};\n\nexport const WMS_URL_FORMAT:{[key:string]:string} = {\n  tds:'/wms/',\n  geoserver:'/wms/',\n  esri:'/'\n};\n\nexport const INTERPOLATED_PARAMETERS = [\n  'styles',\n  'layers'\n];\n\nexport class MappedLayer {\n  constructor(data?:any){\n    Object.assign(this,data||{});\n    if(this.layerType===undefined){\n      this.layerType = this.wmsParameters?'wms':undefined;\n    }\n  }\n\n  title:string;\n\n  layer: Layer;\n  options: MappedLayerOptions = {\n    date: new Date(2016, 0, 1) // Set to most recent available date\n  };\n\n  legendURL:string;\n  layerType: MappedLayerTypes;\n  retrievedMetadata: {[key:string]:any} = {};\n\n  interpolatedFile:string;\n  interpolatedDownloadURL:string;\n  url: string;\n  wmsParameters: any = {};\n  flattenedSettings: any = {};\n  staticData:any;\n  opacity = 1.0;\n\n  _styleFunc: (f:any)=>void;\n\n  description():string{\n    return this.layer.description ||\n      (this.retrievedMetadata &&\n       this.retrievedMetadata[this.layer.descriptionField||'long_name']);\n  }\n\n  leading0(n: number): string {\n    if (n < 10) {\n      return '0' + n;\n    }\n    return '' + n;\n  }\n\n  defaultPublication():number{\n    const priorityPublication = PUBLICATION_PRIORITY_ORDER.find(\n      pp=>this.layer.publications.findIndex(lp=>(lp.timestep===pp)||(lp.label===pp))>=0);\n    if(priorityPublication){\n      return this.layer.publications.findIndex(p=>(p.label===priorityPublication)||(p.timestep===priorityPublication));\n    }\n    return this.layer.publications.findIndex(p => !p.skip);\n  }\n\n  update() {\n    this.options.publication = (this.options.publication === undefined) ?\n      this.defaultPublication() :\n      this.options.publication;\n\n    const publication = this.layer.publications[this.options.publication];\n\n    const host = publication.options.host || {};\n    const baseURL = host.url;\n\n    const software = host.software || 'tds';\n\n    this.interpolatedFile = (publication.options.filepath || '')\n    const mapParams = Object.assign({},\n      this.layer,\n      publication.options,\n      publication.options.mapOptions || {},\n      this.options.date ? {\n        decade: decadeText(this.options.date),\n        year: this.options.date.getFullYear(),\n        month: this.leading0(this.options.date.getMonth() + 1),\n        day: this.leading0(this.options.date.getDate()),\n      } : {},\n      this.options,\n      this.options.tags || {});\n\n    if (mapParams.timeFormat) {\n      mapParams['time'] = InterpolationService.interpolate(mapParams.timeFormat, mapParams);\n    }\n    mapParams.layers = mapParams.layers || mapParams.layer || mapParams.variable;\n    INTERPOLATED_PARAMETERS.forEach(p=>{\n      if(mapParams[p]){\n        mapParams[p] = InterpolationService.interpolate(mapParams[p],mapParams);\n      }\n    });\n    this.interpolatedFile = InterpolationService.interpolate(this.interpolatedFile, mapParams);\n    this.url = baseURL + WMS_URL_FORMAT[software] + this.interpolatedFile;\n    if(MAKE_DOWNLOAD_URL[software]){\n      this.interpolatedDownloadURL=MAKE_DOWNLOAD_URL[software](host.downloadLink||baseURL,this.interpolatedFile,this);\n    } else {\n      this.interpolatedDownloadURL=host.downloadLink||null;\n    }\n\n    if(this.layer.options.legend==='wms'){\n      this.legendURL = this.url + '?service=WMS&request=GetLegendGraphic&format=image/png';\n      this.legendURL += `&layer=${InterpolationService.interpolate(mapParams.layers,mapParams)}`;\n      this.legendURL += '&version=1.1.1';\n      this.options.legend=true;\n    } else {\n      this.legendURL=null;\n    }\n\n    if (mapParams.vectors) {\n      this.wmsParameters = null;\n      this.layerType = 'vector';\n      let styles = mapParams.styles || {};\n      this._styleFunc = (f:any)=>{\n        return styles;\n      }\n\n      if(mapParams.vectors==='point' && mapParams.styles){\n        this.layerType = 'circle';\n      }\n    } else {\n      this.layerType = 'wms';\n      this.wmsParameters = {};\n      WMS_PARAMETER_NAMES[software].forEach(param => {\n        if (mapParams[param]) {\n          this.wmsParameters[param] = mapParams[param];\n        }\n      });\n    }\n    this.flattenedSettings = mapParams;\n\n    if(mapParams.titleFormat){\n      this.title = InterpolationService.interpolate(mapParams.titleFormat,mapParams)\n    } else {\n      this.title = this.layer.name;\n    }\n  }\n}\n\nfunction decadeText(d: Date): string {\n  let decade = d.getFullYear().toString().slice(0, 3);\n  return `${decade}0-${decade}9`;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Catalog, Layer } from './data/catalog';\nimport { Observable } from 'rxjs';\nimport { tap, map } from 'rxjs/operators';\nimport { Bounds } from './data/bounds';\nimport { MappedLayer } from './data/mapped-layer';\nimport { MetadataService } from './metadata.service';\n\n@Injectable()\nexport class CatalogService {\n  current:Catalog;\n\n  constructor(private _http:HttpClient, private metadata:MetadataService){\n  }\n\n  load(catalogJSON:any){\n    this.current = new Catalog(catalogJSON);\n\n    this.current.allLayers().filter(l=>l.options.smallExtent).forEach(l=>{\n      l.spatialExtent = this.findExtentOfLayer(l)\n    });\n  }\n\n  loadFrom(path:string):Observable<Catalog>{\n    return this._http.get(path).pipe(\n      tap(json=>this.load(json)),\n      map(_=>this.current));\n\n    //   var result = new Promise<Catalog>((res,rej)=>{\n    //     this._http.get(path).subscribe(json=>{\n    //       this.load(json);\n    //       res(this.current);\n    //     });\n    //   });\n\n    // return from(result);\n  }\n\n  findExtentOfLayer(l: Layer):Observable<Bounds>{\n    const tmp = new MappedLayer();\n    tmp.layer = l;\n    tmp.update();\n    return this.metadata.getSpatialExtent(tmp);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Location} from '@angular/common';\n\n@Injectable()\nexport class MapViewParameterService {\n  constructor(private _location?: Location) {\n\n  }\n\n  static parameterNames:Array<string> = [];\n\n  current():any{\n    if(!this._location){\n      return {};\n    }\n\n    let path = this._location.path().split('/');\n    if(path.length>MapViewParameterService.parameterNames.length){\n      path.shift();\n    }\n    let result:any = {};\n    MapViewParameterService.parameterNames.forEach((p,i)=>result[p]=path[i]||'_');\n    return result;\n  }\n\n  update(changes:any){\n    if(!this._location){\n      return;\n    }\n\n    let updated = this.current();\n    Object.assign(updated,changes);\n    this._location.go(this.constructRoute(updated));\n  }\n\n  retrieveFromRoute(route:any){\n    let result:any = {};\n    for(let name of MapViewParameterService.parameterNames){\n        result[name] = route.snapshot.params[name];\n    }\n    return result;\n  };\n\n  constructRoute(parameters:any){\n    return MapViewParameterService.parameterNames.map(n=>parameters[n]||'_').join('/');\n  }\n\n  routerPaths(/*component:any*/):Array<any>{\n    let result:Array<any> = [];\n    let path = '';\n    result.push(path);\n//    result.push({path:path,component:component});\n    for(let name of MapViewParameterService.parameterNames){\n      path += `:${name}`;\n//      result.unshift({path:path,component:component});\n      result.unshift(path);\n      path += '/';\n    }\n    return result;\n  }\n}\n","import { Injectable } from '@angular/core';\n//const proj4 = require('proj4');\n//const Proj = proj4.Proj;\n//const defs = proj4.defs;\n//proj4.InterfaceProjection;\n//const InterfaceCoordinates = proj4.InterfaceCoordinates;\n//const TemplateCoordinates = proj4.TemplateCoordinates;\n\n//const proj4 = require('proj4').default;\nimport * as proj4 from 'proj4';\nconst D2R = Math.PI/180;\n\n@Injectable()\nexport class WMSService {\n\n  static TILE_SIZE=256;\n  static TILE_WIDTH=WMSService.TILE_SIZE;\n  static TILE_HEIGHT=WMSService.TILE_SIZE;\n\n  constructor() {\n    this.webMercator = ((<any>proj4).default || proj4).Proj('EPSG:3857');\n    //this.webMercator = proj4.Proj(proj4.defs('EPSG:3857'));\n  }\n\n  public webMercator: any;\n\n  public pointToWebMercator(pt:any):{x:number,y:number}{\n    var ptRadians = {x:pt.lng()*D2R,y:pt.lat()*D2R};\n    var ptWM = this.webMercator.forward({x:ptRadians.x,y:ptRadians.y});\n    return ptWM;\n  };\n\n  public computeTileBounds(map:any,coord:any,zoom:number):string{\n    var proj = map.getProjection();\n    var zfactor = Math.pow(2, zoom);\n    var xScale = WMSService.TILE_WIDTH/zfactor;\n    var yScale = WMSService.TILE_HEIGHT/zfactor;\n\n    var topLeftLatLng = proj.fromPointToLatLng({x:coord.x * xScale, y:coord.y * yScale});\n    var bottomRightLatLng = proj.fromPointToLatLng({x:(coord.x + 1) * xScale, y:(coord.y + 1) * yScale});\n\n    var topLeftWebMercator = this.pointToWebMercator(topLeftLatLng);\n    var bottomRightWebMercator = this.pointToWebMercator(bottomRightLatLng);\n\n    if(topLeftWebMercator.x > bottomRightWebMercator.x){\n      if(topLeftLatLng.lng()===180.0){\n        topLeftWebMercator.x = -topLeftWebMercator.x;\n      } else {\n        bottomRightWebMercator.x = -bottomRightWebMercator.x;\n      }\n    }\n    var bbox = [topLeftWebMercator.x,bottomRightWebMercator.y,bottomRightWebMercator.x,topLeftWebMercator.y];\n    var bboxTxt = bbox.map((n)=>n.toFixed(20).replace(/\\.?0+$/,\"\")); // Avoid e notation on small numbers\n    return bboxTxt.join(',');\n  };\n\n  public buildImageMap(getMap:()=>any,\n                       getURL:(zoom:number)=>string,\n                       getOptions?:(zoom:number)=>any,\n                       getOpacity?:()=>number):any{\n    var me = this;\n    return new (<any>window).google.maps.ImageMapType({\n      getTileUrl: function(coord:any,zoom:number):string{\n        var theMap = getMap();\n        if(!theMap){\n          return '';\n        }\n\n\n        var bbox = me.computeTileBounds(theMap,coord,zoom);\n\n        var url = getURL(zoom) + '&service=WMS&version=1.1.1&request=GetMap';\n        url += \"&BBOX=\" + bbox;      // set bounding box\n        url += \"&FORMAT=image/png\" ; //WMS format\n\n        var layerParams = getOptions?getOptions(zoom):{};\n        layerParams.width = WMSService.TILE_WIDTH;\n        layerParams.height = WMSService.TILE_HEIGHT;\n        for(var key in layerParams){\n          url += '&'+key+'='+layerParams[key];\n        }\n        url += \"&SRS=EPSG:3857\";     //set Web Mercator\n        return url;\n      },\n      tileSize:new (<any>window).google.maps.Size(WMSService.TILE_SIZE,WMSService.TILE_SIZE),\n      isPng:true,\n      opacity:getOpacity?getOpacity():1.0\n    });\n  };\n\n}\n","import { Injectable } from '@angular/core';\n//import * as proj4 from 'proj4';\nimport * as proj4 from 'proj4';\n//const proj4 = require('proj4').default;\n\n@Injectable()\nexport class ProjectionService {\n\n  constructor() {\n\n  }\n\n  proj4(){\n    return proj4;\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { TreeFilterService } from './tree-filter.service';\nimport { PaletteService } from './palette.service';\nimport { TimeUtilsService } from './time-utils.service';\nimport { StaticDataService } from './static-data.service';\nimport { MetadataService } from './metadata.service';\nimport { OpendapService } from './opendap.service';\nimport { TimeseriesService } from './timeseries.service';\nimport { PointSelectionService } from './point-selection.service';\nimport { AvailableDatesService } from './available-dates.service';\nimport { CatalogService } from './catalog.service';\nimport { MapViewParameterService } from './map-view.service';\nimport { WMSService } from './wms.service';\nimport { ProjectionService } from './projection.service';\n\nexport * from './data/catalog';\nexport * from './data/mapped-layer';\nexport * from './data/tree';\nexport * from './data/bounds';\nexport * from './data/actions';\n\nexport * from './wms.service';\nexport * from './projection.service';\nexport * from './map-view.service';\nexport * from './interpolation.service';\nexport * from './available-dates.service';\nexport * from './point-selection.service';\nexport * from './metadata.service';\nexport * from './catalog.service';\nexport * from './palette.service';\nexport * from './static-data.service';\nexport * from './opendap.service';\nexport * from './timeseries.service';\nexport * from './time-utils.service';\nexport * from './tree-filter.service';\n\nexport * from './parsing/csv';\n\nconst services = [\n  //$serviceList\n  AvailableDatesService,\n  PointSelectionService,\n  TimeseriesService,\n  StaticDataService,\n  MetadataService,\n  OpendapService,\n  PaletteService,\n  TimeUtilsService,\n  WMSService,\n  MapViewParameterService,\n  ProjectionService,\n  CatalogService,\n  TreeFilterService\n];\n\n//import { CSVService } from './src/csv.service';\n\n//$importList\n\n//$exportList\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  declarations: [],\n  exports: [],\n  providers: services\n})\nexport class MapWaldCoreModule {\n  static forRoot(moduleInitialisation: any): ModuleWithProviders {\n    return {\n      ngModule: MapWaldCoreModule,\n      providers: services\n    };\n  }\n}\n\n","\nexport interface TableRow{\n  [key:string]:any;\n}\n\nexport interface CsvParserOptions {\n  columns?: string[];\n}\n\nexport function parseCSV(txt:string,options?:CsvParserOptions):TableRow[]{\n  let columns = options&&options.columns;\n  let lines = txt.split('\\n');\n  if(!columns){\n    let header = lines[0];\n    lines = lines.slice(1);\n    columns = header.split(',');\n  }\n\n  return lines.filter(ln=>ln.length).map(ln=>{\n    let data = ln.split(',');\n\n    let result:TableRow = {};\n    data.forEach((val,i)=>{\n      result[columns[i]] = parseVal(val);\n    });\n    return result;\n  });\n}\n\nfunction parseVal(val:string):any{\n\n  // Try date...\n  let components = val.split('-');\n  if(components.length===3){\n    let dateComponents = components.map(c=>+c);\n    if(!dateComponents.some(isNaN)){\n      return new Date(Date.UTC(dateComponents[0],dateComponents[1]-1,dateComponents[2]));\n    }\n  }\n\n  if(val===''){\n    return val;\n  }\n\n  // Try numeric\n  let numeric:number = +val;\n  if(!isNaN(numeric)){\n    return numeric;\n  }\n\n  return val;\n}\n"]}