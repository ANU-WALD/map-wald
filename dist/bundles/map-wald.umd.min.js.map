{"version":3,"sources":["ng://map-wald/tree-filter.service.ts","ng://map-wald/colorbrewer.ts","ng://map-wald/palette.service.ts","ng://map-wald/time-utils.service.ts","ng://map-wald/static-data.service.ts","ng://map-wald/opendap.service.ts","ng://map-wald/metadata.service.ts","ng://map-wald/timeseries.service.ts","ng://map-wald/interpolation.service.ts","ng://map-wald/point-selection.service.ts","ng://map-wald/available-dates.service.ts","ng://map-wald/data/catalog.ts","ng://map-wald/data/mapped-layer.ts","ng://map-wald/catalog.service.ts","ng://map-wald/map-view.service.ts","ng://map-wald/wms.service.ts","ng://map-wald/projection.service.ts","ng://map-wald/parsing/csv.ts","ng://map-wald/index.ts","ng://map-wald/map-wald.ts"],"names":["TreeFilterService","prototype","filterTree","tree","filterText","_this","this","visible","trim","toLowerCase","label","indexOf","containsFilterText","hasOwnProperty","children","forEach","child","showAll","map","expanded","c","__decorate","core_1","exports","palettes","Accent","3","4","5","6","7","8","type","Blues","9","BrBG","10","11","BuGn","BuPu","Dark2","GnBu","Greens","Greys","OrRd","Oranges","PRGn","Paired","12","Pastel1","Pastel2","PiYG","PuBu","PuBuGn","PuOr","PuRd","Purples","RdBu","RdGy","RdPu","RdYlBu","RdYlGn","Reds","Set1","Set2","Set3","Spectral","YlGn","YlGnBu","YlOrBr","YlOrRd","PaletteService","_http","namedPalettes","_source","Object","defineProperty","val","getPalette","name","reverse","numColours","palette","colorbrewer_1","rxjs_1","slice","get","responseType","pipe","operators_1","text","parseNCWMSPalette","txt","split","ln","replace","filter","length","e","join","colourIndex","min","max","count","point","Math","round","http_1","utcDate","y","m","d","Date","UTC","utcDateCopy","getUTCFullYear","getUTCMonth","getUTCDate","TimeUtilsService","specialDates","yesterday","setDate","getDate","convertDate","date","dateText","_a","__read","year","month","day","datesEqual","lhs","rhs","StaticDataService","http","cache","host","path","url","uniqueUrl","getTime","OpendapService","makeURL","filepath","getData","queryUrl","das","dap_query_1","getDAS","getDDX","getExtent","console","log","_b","theDAS","ll","lats","latitude","lons","longitude","dapRangeQuery","from","to","step","undefined","LAT_NAMES","LNG_NAMES","TIME_NAMES","MetadataService","dap","ddxCache","dasCache","timeCache","identifyCoordinate","ddx","possibleNames","_i","arguments","possibleNames_1","__values","possibleNames_1_1","next","done","n","value","variables","file","ddxForUrl","getDDXForLayer","ml","flattenedSettings","interpolatedFile","dasForUrl","getDASForLayer","getMetadata","software","meta","assign","attr","layer","variable","populateMetadata","subscribe","entry","setTimeout","retrievedMetadata","getGrid","getGridForURL","ddx$","das$","metadata","latCoord","apply","__spread","lngCoord","lat$","dd","lng$","getGridForLayer","getSpatialExtent","lngs","east","west","north","south","getTimeDimension","getTimeDimensionForURL","res$","timeCoord","opendap_service_1","TimeseriesService","getTimeseries","pt","additionalIndices","fillValue","latsAndLngs","latIndex","indexInDimension","lat","lngIndex","lng","_FillValue","query","makeTimeQuery","data","vals","dates","time","t","values","v","NaN","getTimeseriesForLayer","dimensions","dim","dName","metadata_service_1","minIndex","maxIndex","currentIndex","rev","floor","d1","abs","d2","InterpolationService","isDefined","interpolate","expr","params","templateMatcher","substring","b","r","getValue","target","key","keys","shift","PointSelectionService","latestPointSelectionSource","latestPointSelection","asObservable","unchanged","current","updated","tags","every","catalog","feature","pointSelection","sel","fullUrl","validUrl","properties","interpolation_service_1","timeseriesVariables","coords","coordinates","dims","coord","find","displayFormat","fmt","long_name","AvailableDatesService","fnForYear","mapped","publication","publications","options","availableDates","fn","timeshift","timePeriod","containsYear","prev$","years","concat","res","setUTCDate","timestep","i","NAMED_OPTIONS","interval","clone","JSON","parse","stringify","matchFirstDefinedKey","keys_1","keys_1_1","k","propagate","source","skipPublications","sources","result","p","Publication","j","match","findIndex","pub","push","skip","mergeArraysByKeys","instantiateNamedOptions","dest","configKey","lookup","CatalogOptions","Catalog","config","themes","Theme","propagateOptions","allLayers","layers","reduce","prev","curr","l","Layer","dataCreator","PUBLICATION_PRIORITY_ORDER","components","pop","ɵ1","downloadPath","MAKE_DOWNLOAD_URL","tds","ɵ0","static","WMS_PARAMETER_NAMES","geoserver","esri","WMS_URL_FORMAT","INTERPOLATED_PARAMETERS","MappedLayer","wmsParameters","opacity","layerType","description","descriptionField","leading0","defaultPublication","priorityPublication","pp","lp","update","baseURL","decade","mapParams","mapOptions","getFullYear","toString","getMonth","timeFormat","interpolatedDownloadURL","downloadLink","legend","legendURL","vectors","styles_1","styles","_styleFunc","f","param","titleFormat","title","CatalogService","load","catalogJSON","catalog_1","smallExtent","spatialExtent","findExtentOfLayer","loadFrom","json","_","tmp","mapped_layer_1","MapViewParameterService","_location","MapViewParameterService_1","parameterNames","changes","go","constructRoute","retrieveFromRoute","route","_c","name_1","snapshot","parameters","routerPaths","unshift","common_1","D2R","PI","WMSService","webMercator","proj4","default","Proj","pointToWebMercator","ptRadians","x","forward","computeTileBounds","zoom","proj","getProjection","zfactor","pow","xScale","WMSService_1","TILE_WIDTH","yScale","TILE_HEIGHT","topLeftLatLng","fromPointToLatLng","bottomRightLatLng","topLeftWebMercator","bottomRightWebMercator","toFixed","buildImageMap","getMap","getURL","getOptions","getOpacity","me","window","google","maps","ImageMapType","getTileUrl","theMap","bbox","layerParams","width","height","tileSize","Size","TILE_SIZE","isPng","ProjectionService","parseCSV","lines","header","columns","dateComponents","some","isNaN","numeric","parseVal","__export","mappedLayer","wms_service","projection_service","mapView_service","interpolation_service","availableDates_service","pointSelection_service","metadata_service","catalog_service","palette_service","staticData_service","opendap_service","timeseries_service","timeUtils_service","treeFilter_service","csv","services","available_dates_service_1","point_selection_service_1","timeseries_service_1","static_data_service_1","palette_service_1","time_utils_service_1","wms_service_1","map_view_service_1","projection_service_1","catalog_service_1","tree_filter_service_1","MapWaldCoreModule","forRoot","moduleInitialisation","ngModule","MapWaldCoreModule_1","providers","imports","forms_1","declarations","esm5"],"mappings":"k1DAIA,IAAAA,EAAA,WAEE,SAAAA,KAoCF,OAjCEA,EAAAC,UAAAC,WAAA,SAAWC,EAAiBC,GAA5B,IAAAC,EAAAC,KAEEH,EAAKI,SAAU,EAEfH,EAAaA,EAAWI,OAAOC,cAmB/B,OAfAN,EAAKI,QAFsB,SAACG,EAAeN,GAAuB,OAAoD,IAApDM,EAAMF,OAAOC,cAAcE,QAAQP,GAEtFQ,CAAmBT,EAAKO,MAAON,GAE1CD,EAAKU,eAAe,cACnBV,EAAKI,QACNJ,EAAKW,SAASC,SAAQ,SAAAC,GAAO,OAAAX,EAAKY,QAAQD,MAE1Cb,EAAKW,SAASI,KAAI,SAAAF,GAChBX,EAAKH,WAAWc,EAAOZ,GAEvBD,EAAKI,QAAUJ,EAAKI,SAAWS,EAAMT,QACrCJ,EAAKgB,SAAWhB,EAAKgB,UAAYH,EAAMT,SAAWS,EAAMG,aAKvDhB,GAITH,EAAAC,UAAAgB,QAAA,SAAQd,GAAR,IAAAE,EAAAC,KACEH,EAAKI,SAAQ,EACTJ,EAAKU,eAAe,aACtBV,EAAKW,SAASC,SAAQ,SAAAK,GAAG,OAAAf,EAAKY,QAAQG,OAnC/BpB,EAAiBqB,EAAA,CAD7BC,EAAAA,wCACYtB,GAAb,GAAauB,EAAAvB,kBAAAA,mGCJAuB,EAAAC,SAAe,CAC1BC,OAAQ,CACNC,EAAG,CACD,mBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,iBACA,oBAEFC,KAAM,QAERC,MAAO,CACLP,EAAG,CACD,mBACA,mBACA,mBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,gBACA,iBAEFF,KAAM,OAERG,KAAM,CACJC,GAAI,CACF,eACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,gBACA,gBAEFC,GAAI,CACF,eACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,gBACA,gBAEFX,EAAG,CACD,mBACA,mBACA,mBAEFC,EAAG,CACD,iBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,iBACA,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,iBACA,mBACA,mBACA,mBACA,kBACA,iBAEFC,EAAG,CACD,iBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBAEFG,EAAG,CACD,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBAEFF,KAAM,OAERM,KAAM,CACJZ,EAAG,CACD,mBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,gBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,gBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,gBACA,gBAEFF,KAAM,OAERO,KAAM,CACJb,EAAG,CACD,mBACA,mBACA,mBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,mBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,mBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,gBAEFF,KAAM,OAERQ,MAAO,CACLd,EAAG,CACD,kBACA,gBACA,oBAEFC,EAAG,CACD,kBACA,gBACA,mBACA,mBAEFC,EAAG,CACD,kBACA,gBACA,mBACA,kBACA,mBAEFC,EAAG,CACD,kBACA,gBACA,mBACA,kBACA,kBACA,kBAEFC,EAAG,CACD,kBACA,gBACA,mBACA,kBACA,kBACA,iBACA,mBAEFC,EAAG,CACD,kBACA,gBACA,mBACA,kBACA,kBACA,iBACA,kBACA,oBAEFC,KAAM,QAERS,KAAM,CACJf,EAAG,CACD,mBACA,mBACA,mBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,iBAEFF,KAAM,OAERU,OAAQ,CACNhB,EAAG,CACD,mBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,iBACA,iBACA,gBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,iBACA,gBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,iBACA,gBACA,gBAEFF,KAAM,OAERW,MAAO,CACLjB,EAAG,CACD,mBACA,mBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,gBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,gBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,gBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,gBACA,iBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,gBACA,gBACA,cAEFF,KAAM,OAERY,KAAM,CACJlB,EAAG,CACD,mBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,kBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,kBACA,iBACA,gBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,iBACA,gBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,gBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,gBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,eACA,gBAEFF,KAAM,OAERa,QAAS,CACPnB,EAAG,CACD,mBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,kBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,kBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,kBACA,gBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,gBACA,iBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,gBACA,gBACA,iBAEFF,KAAM,OAERc,KAAM,CACJV,GAAI,CACF,eACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,iBACA,gBAEFC,GAAI,CACF,eACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,iBACA,gBAEFX,EAAG,CACD,mBACA,mBACA,oBAEFC,EAAG,CACD,kBACA,mBACA,mBACA,iBAEFC,EAAG,CACD,kBACA,mBACA,mBACA,mBACA,iBAEFC,EAAG,CACD,kBACA,mBACA,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,kBAEFG,EAAG,CACD,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,kBAEFF,KAAM,OAERe,OAAQ,CACNX,GAAI,CACF,mBACA,kBACA,mBACA,iBACA,mBACA,iBACA,mBACA,iBACA,mBACA,mBAEFC,GAAI,CACF,mBACA,kBACA,mBACA,iBACA,mBACA,iBACA,mBACA,iBACA,mBACA,kBACA,oBAEFW,GAAI,CACF,mBACA,kBACA,mBACA,iBACA,mBACA,iBACA,mBACA,iBACA,mBACA,kBACA,mBACA,kBAEFtB,EAAG,CACD,mBACA,kBACA,oBAEFC,EAAG,CACD,mBACA,kBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,kBACA,mBACA,iBACA,oBAEFC,EAAG,CACD,mBACA,kBACA,mBACA,iBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,kBACA,mBACA,iBACA,mBACA,iBACA,oBAEFC,EAAG,CACD,mBACA,kBACA,mBACA,iBACA,mBACA,iBACA,mBACA,kBAEFG,EAAG,CACD,mBACA,kBACA,mBACA,iBACA,mBACA,iBACA,mBACA,iBACA,oBAEFF,KAAM,QAERiB,QAAS,CACPvB,EAAG,CACD,mBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBAEFF,KAAM,QAERkB,QAAS,CACPxB,EAAG,CACD,mBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBAEFC,KAAM,QAERmB,KAAM,CACJf,GAAI,CACF,gBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,kBAEFC,GAAI,CACF,gBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,kBAEFX,EAAG,CACD,mBACA,mBACA,oBAEFC,EAAG,CACD,kBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,kBACA,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,kBACA,mBACA,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBAEFG,EAAG,CACD,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBAEFF,KAAM,OAERoB,KAAM,CACJ1B,EAAG,CACD,mBACA,mBACA,mBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,iBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,gBACA,gBAEFF,KAAM,OAERqB,OAAQ,CACN3B,EAAG,CACD,mBACA,mBACA,mBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,iBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,gBACA,gBAEFF,KAAM,OAERsB,KAAM,CACJlB,GAAI,CACF,gBACA,gBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,iBACA,gBAEFC,GAAI,CACF,gBACA,gBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,gBAEFX,EAAG,CACD,kBACA,mBACA,oBAEFC,EAAG,CACD,gBACA,kBACA,mBACA,kBAEFC,EAAG,CACD,gBACA,kBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,gBACA,kBACA,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,gBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,gBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBAEFG,EAAG,CACD,gBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBAEFF,KAAM,OAERuB,KAAM,CACJ7B,EAAG,CACD,mBACA,mBACA,mBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,iBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,gBACA,iBAEFF,KAAM,OAERwB,QAAS,CACP9B,EAAG,CACD,mBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,iBAEFF,KAAM,OAERyB,KAAM,CACJrB,GAAI,CACF,gBACA,iBACA,iBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,gBAEFC,GAAI,CACF,gBACA,iBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,gBAEFX,EAAG,CACD,kBACA,mBACA,oBAEFC,EAAG,CACD,gBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,gBACA,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBACA,mBACA,mBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBAEFC,EAAG,CACD,iBACA,iBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBAEFG,EAAG,CACD,iBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBAEFF,KAAM,OAER0B,KAAM,CACJtB,GAAI,CACF,gBACA,iBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,gBACA,iBAEFC,GAAI,CACF,gBACA,iBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,gBACA,iBAEFX,EAAG,CACD,kBACA,mBACA,oBAEFC,EAAG,CACD,gBACA,mBACA,mBACA,iBAEFC,EAAG,CACD,gBACA,mBACA,mBACA,mBACA,iBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBACA,mBACA,iBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,iBAEFC,EAAG,CACD,iBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBAEFG,EAAG,CACD,iBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBAEFF,KAAM,OAER2B,KAAM,CACJjC,EAAG,CACD,mBACA,mBACA,mBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,kBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,iBACA,iBAEFF,KAAM,OAER4B,OAAQ,CACNxB,GAAI,CACF,gBACA,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBAEFC,GAAI,CACF,gBACA,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBAEFX,EAAG,CACD,kBACA,mBACA,oBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBACA,mBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBACA,mBACA,mBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBAEFC,EAAG,CACD,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBAEFG,EAAG,CACD,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBAEFF,KAAM,OAER6B,OAAQ,CACNzB,GAAI,CACF,gBACA,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,iBACA,iBAEFC,GAAI,CACF,gBACA,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,iBAEFX,EAAG,CACD,kBACA,mBACA,mBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,kBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBACA,kBACA,kBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBAEFC,EAAG,CACD,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,kBACA,kBAEFG,EAAG,CACD,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBAEFF,KAAM,OAER8B,KAAM,CACJpC,EAAG,CACD,mBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,kBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,kBACA,iBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,iBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,iBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,iBACA,iBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,iBACA,iBACA,iBAEFF,KAAM,OAER+B,KAAM,CACJrC,EAAG,CACD,iBACA,kBACA,kBAEFC,EAAG,CACD,iBACA,kBACA,iBACA,mBAEFC,EAAG,CACD,iBACA,kBACA,iBACA,kBACA,kBAEFC,EAAG,CACD,iBACA,kBACA,iBACA,kBACA,iBACA,mBAEFC,EAAG,CACD,iBACA,kBACA,iBACA,kBACA,iBACA,kBACA,kBAEFC,EAAG,CACD,iBACA,kBACA,iBACA,kBACA,iBACA,kBACA,iBACA,oBAEFG,EAAG,CACD,iBACA,kBACA,iBACA,kBACA,iBACA,kBACA,iBACA,mBACA,oBAEFF,KAAM,QAERgC,KAAM,CACJtC,EAAG,CACD,mBACA,kBACA,oBAEFC,EAAG,CACD,mBACA,kBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,kBACA,mBACA,mBACA,mBAEFC,EAAG,CACD,mBACA,kBACA,mBACA,mBACA,kBACA,mBAEFC,EAAG,CACD,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,oBAEFC,EAAG,CACD,mBACA,kBACA,mBACA,mBACA,kBACA,kBACA,mBACA,oBAEFC,KAAM,QAERiC,KAAM,CACJ7B,GAAI,CACF,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,oBAEFC,GAAI,CACF,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,oBAEFW,GAAI,CACF,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBAEFtB,EAAG,CACD,mBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,mBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,oBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,oBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBAEFF,KAAM,QAERkC,SAAU,CACR9B,GAAI,CACF,gBACA,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBAEFC,GAAI,CACF,gBACA,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBAEFX,EAAG,CACD,kBACA,mBACA,oBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBACA,mBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBACA,mBACA,mBAEFC,EAAG,CACD,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBAEFC,EAAG,CACD,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBAEFG,EAAG,CACD,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBAEFF,KAAM,OAERmC,KAAM,CACJzC,EAAG,CACD,mBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,iBACA,iBACA,gBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,iBACA,gBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,iBACA,gBACA,gBAEFF,KAAM,OAERoC,OAAQ,CACN1C,EAAG,CACD,mBACA,mBACA,mBAEFC,EAAG,CACD,mBACA,mBACA,kBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,kBACA,kBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,kBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,kBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,iBACA,gBAEFF,KAAM,OAERqC,OAAQ,CACN3C,EAAG,CACD,mBACA,kBACA,kBAEFC,EAAG,CACD,mBACA,mBACA,kBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,kBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,kBACA,kBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,kBACA,kBACA,kBACA,gBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,gBACA,iBAEFG,EAAG,CACD,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,gBACA,gBACA,iBAEFF,KAAM,OAERsC,OAAQ,CACN5C,EAAG,CACD,mBACA,kBACA,kBAEFC,EAAG,CACD,mBACA,kBACA,kBACA,kBAEFC,EAAG,CACD,mBACA,kBACA,kBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,kBACA,kBACA,iBACA,iBAEFC,EAAG,CACD,mBACA,mBACA,kBA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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { TreeModel } from './data/tree';\n\n@Injectable()\nexport class TreeFilterService {\n\n  constructor() {\n  }\n\n  filterTree(tree: TreeModel, filterText: string) {\n\n    tree.visible = false;\n\n    filterText = filterText.trim().toLowerCase();\n\n    const containsFilterText = (label: string, filterText: string) => label.trim().toLowerCase().indexOf(filterText) !== -1;\n\n    tree.visible = containsFilterText(tree.label, filterText);\n\n    if (tree.hasOwnProperty(\"children\")) {\n      if(tree.visible){\n        tree.children.forEach(child=>this.showAll(child));\n      } else {\n        tree.children.map(child => {\n          this.filterTree(child, filterText);\n\n          tree.visible = tree.visible || child.visible;\n          tree.expanded = tree.expanded || child.visible || child.expanded;\n        });\n      }\n    }\n\n    return tree;\n\n  }\n\n  showAll(tree:TreeModel){\n    tree.visible=true;\n    if (tree.hasOwnProperty(\"children\")) {\n      tree.children.forEach(c=>this.showAll(c));\n    }\n  }\n}\n","export const palettes:any = {\n  Accent: {\n    3: [\n      \"rgb(127,201,127)\",\n      \"rgb(190,174,212)\",\n      \"rgb(253,192,134)\"\n    ],\n    4: [\n      \"rgb(127,201,127)\",\n      \"rgb(190,174,212)\",\n      \"rgb(253,192,134)\",\n      \"rgb(255,255,153)\"\n    ],\n    5: [\n      \"rgb(127,201,127)\",\n      \"rgb(190,174,212)\",\n      \"rgb(253,192,134)\",\n      \"rgb(255,255,153)\",\n      \"rgb(56,108,176)\"\n    ],\n    6: [\n      \"rgb(127,201,127)\",\n      \"rgb(190,174,212)\",\n      \"rgb(253,192,134)\",\n      \"rgb(255,255,153)\",\n      \"rgb(56,108,176)\",\n      \"rgb(240,2,127)\"\n    ],\n    7: [\n      \"rgb(127,201,127)\",\n      \"rgb(190,174,212)\",\n      \"rgb(253,192,134)\",\n      \"rgb(255,255,153)\",\n      \"rgb(56,108,176)\",\n      \"rgb(240,2,127)\",\n      \"rgb(191,91,23)\"\n    ],\n    8: [\n      \"rgb(127,201,127)\",\n      \"rgb(190,174,212)\",\n      \"rgb(253,192,134)\",\n      \"rgb(255,255,153)\",\n      \"rgb(56,108,176)\",\n      \"rgb(240,2,127)\",\n      \"rgb(191,91,23)\",\n      \"rgb(102,102,102)\"\n    ],\n    type: \"qual\"\n  },\n  Blues: {\n    3: [\n      \"rgb(222,235,247)\",\n      \"rgb(158,202,225)\",\n      \"rgb(49,130,189)\"\n    ],\n    4: [\n      \"rgb(239,243,255)\",\n      \"rgb(189,215,231)\",\n      \"rgb(107,174,214)\",\n      \"rgb(33,113,181)\"\n    ],\n    5: [\n      \"rgb(239,243,255)\",\n      \"rgb(189,215,231)\",\n      \"rgb(107,174,214)\",\n      \"rgb(49,130,189)\",\n      \"rgb(8,81,156)\"\n    ],\n    6: [\n      \"rgb(239,243,255)\",\n      \"rgb(198,219,239)\",\n      \"rgb(158,202,225)\",\n      \"rgb(107,174,214)\",\n      \"rgb(49,130,189)\",\n      \"rgb(8,81,156)\"\n    ],\n    7: [\n      \"rgb(239,243,255)\",\n      \"rgb(198,219,239)\",\n      \"rgb(158,202,225)\",\n      \"rgb(107,174,214)\",\n      \"rgb(66,146,198)\",\n      \"rgb(33,113,181)\",\n      \"rgb(8,69,148)\"\n    ],\n    8: [\n      \"rgb(247,251,255)\",\n      \"rgb(222,235,247)\",\n      \"rgb(198,219,239)\",\n      \"rgb(158,202,225)\",\n      \"rgb(107,174,214)\",\n      \"rgb(66,146,198)\",\n      \"rgb(33,113,181)\",\n      \"rgb(8,69,148)\"\n    ],\n    9: [\n      \"rgb(247,251,255)\",\n      \"rgb(222,235,247)\",\n      \"rgb(198,219,239)\",\n      \"rgb(158,202,225)\",\n      \"rgb(107,174,214)\",\n      \"rgb(66,146,198)\",\n      \"rgb(33,113,181)\",\n      \"rgb(8,81,156)\",\n      \"rgb(8,48,107)\"\n    ],\n    type: \"seq\"\n  },\n  BrBG: {\n    10: [\n      \"rgb(84,48,5)\",\n      \"rgb(140,81,10)\",\n      \"rgb(191,129,45)\",\n      \"rgb(223,194,125)\",\n      \"rgb(246,232,195)\",\n      \"rgb(199,234,229)\",\n      \"rgb(128,205,193)\",\n      \"rgb(53,151,143)\",\n      \"rgb(1,102,94)\",\n      \"rgb(0,60,48)\"\n    ],\n    11: [\n      \"rgb(84,48,5)\",\n      \"rgb(140,81,10)\",\n      \"rgb(191,129,45)\",\n      \"rgb(223,194,125)\",\n      \"rgb(246,232,195)\",\n      \"rgb(245,245,245)\",\n      \"rgb(199,234,229)\",\n      \"rgb(128,205,193)\",\n      \"rgb(53,151,143)\",\n      \"rgb(1,102,94)\",\n      \"rgb(0,60,48)\"\n    ],\n    3: [\n      \"rgb(216,179,101)\",\n      \"rgb(245,245,245)\",\n      \"rgb(90,180,172)\"\n    ],\n    4: [\n      \"rgb(166,97,26)\",\n      \"rgb(223,194,125)\",\n      \"rgb(128,205,193)\",\n      \"rgb(1,133,113)\"\n    ],\n    5: [\n      \"rgb(166,97,26)\",\n      \"rgb(223,194,125)\",\n      \"rgb(245,245,245)\",\n      \"rgb(128,205,193)\",\n      \"rgb(1,133,113)\"\n    ],\n    6: [\n      \"rgb(140,81,10)\",\n      \"rgb(216,179,101)\",\n      \"rgb(246,232,195)\",\n      \"rgb(199,234,229)\",\n      \"rgb(90,180,172)\",\n      \"rgb(1,102,94)\"\n    ],\n    7: [\n      \"rgb(140,81,10)\",\n      \"rgb(216,179,101)\",\n      \"rgb(246,232,195)\",\n      \"rgb(245,245,245)\",\n      \"rgb(199,234,229)\",\n      \"rgb(90,180,172)\",\n      \"rgb(1,102,94)\"\n    ],\n    8: [\n      \"rgb(140,81,10)\",\n      \"rgb(191,129,45)\",\n      \"rgb(223,194,125)\",\n      \"rgb(246,232,195)\",\n      \"rgb(199,234,229)\",\n      \"rgb(128,205,193)\",\n      \"rgb(53,151,143)\",\n      \"rgb(1,102,94)\"\n    ],\n    9: [\n      \"rgb(140,81,10)\",\n      \"rgb(191,129,45)\",\n      \"rgb(223,194,125)\",\n      \"rgb(246,232,195)\",\n      \"rgb(245,245,245)\",\n      \"rgb(199,234,229)\",\n      \"rgb(128,205,193)\",\n      \"rgb(53,151,143)\",\n      \"rgb(1,102,94)\"\n    ],\n    type: \"div\"\n  },\n  BuGn: {\n    3: [\n      \"rgb(229,245,249)\",\n      \"rgb(153,216,201)\",\n      \"rgb(44,162,95)\"\n    ],\n    4: [\n      \"rgb(237,248,251)\",\n      \"rgb(178,226,226)\",\n      \"rgb(102,194,164)\",\n      \"rgb(35,139,69)\"\n    ],\n    5: [\n      \"rgb(237,248,251)\",\n      \"rgb(178,226,226)\",\n      \"rgb(102,194,164)\",\n      \"rgb(44,162,95)\",\n      \"rgb(0,109,44)\"\n    ],\n    6: [\n      \"rgb(237,248,251)\",\n      \"rgb(204,236,230)\",\n      \"rgb(153,216,201)\",\n      \"rgb(102,194,164)\",\n      \"rgb(44,162,95)\",\n      \"rgb(0,109,44)\"\n    ],\n    7: [\n      \"rgb(237,248,251)\",\n      \"rgb(204,236,230)\",\n      \"rgb(153,216,201)\",\n      \"rgb(102,194,164)\",\n      \"rgb(65,174,118)\",\n      \"rgb(35,139,69)\",\n      \"rgb(0,88,36)\"\n    ],\n    8: [\n      \"rgb(247,252,253)\",\n      \"rgb(229,245,249)\",\n      \"rgb(204,236,230)\",\n      \"rgb(153,216,201)\",\n      \"rgb(102,194,164)\",\n      \"rgb(65,174,118)\",\n      \"rgb(35,139,69)\",\n      \"rgb(0,88,36)\"\n    ],\n    9: [\n      \"rgb(247,252,253)\",\n      \"rgb(229,245,249)\",\n      \"rgb(204,236,230)\",\n      \"rgb(153,216,201)\",\n      \"rgb(102,194,164)\",\n      \"rgb(65,174,118)\",\n      \"rgb(35,139,69)\",\n      \"rgb(0,109,44)\",\n      \"rgb(0,68,27)\"\n    ],\n    type: \"seq\"\n  },\n  BuPu: {\n    3: [\n      \"rgb(224,236,244)\",\n      \"rgb(158,188,218)\",\n      \"rgb(136,86,167)\"\n    ],\n    4: [\n      \"rgb(237,248,251)\",\n      \"rgb(179,205,227)\",\n      \"rgb(140,150,198)\",\n      \"rgb(136,65,157)\"\n    ],\n    5: [\n      \"rgb(237,248,251)\",\n      \"rgb(179,205,227)\",\n      \"rgb(140,150,198)\",\n      \"rgb(136,86,167)\",\n      \"rgb(129,15,124)\"\n    ],\n    6: [\n      \"rgb(237,248,251)\",\n      \"rgb(191,211,230)\",\n      \"rgb(158,188,218)\",\n      \"rgb(140,150,198)\",\n      \"rgb(136,86,167)\",\n      \"rgb(129,15,124)\"\n    ],\n    7: [\n      \"rgb(237,248,251)\",\n      \"rgb(191,211,230)\",\n      \"rgb(158,188,218)\",\n      \"rgb(140,150,198)\",\n      \"rgb(140,107,177)\",\n      \"rgb(136,65,157)\",\n      \"rgb(110,1,107)\"\n    ],\n    8: [\n      \"rgb(247,252,253)\",\n      \"rgb(224,236,244)\",\n      \"rgb(191,211,230)\",\n      \"rgb(158,188,218)\",\n      \"rgb(140,150,198)\",\n      \"rgb(140,107,177)\",\n      \"rgb(136,65,157)\",\n      \"rgb(110,1,107)\"\n    ],\n    9: [\n      \"rgb(247,252,253)\",\n      \"rgb(224,236,244)\",\n      \"rgb(191,211,230)\",\n      \"rgb(158,188,218)\",\n      \"rgb(140,150,198)\",\n      \"rgb(140,107,177)\",\n      \"rgb(136,65,157)\",\n      \"rgb(129,15,124)\",\n      \"rgb(77,0,75)\"\n    ],\n    type: \"seq\"\n  },\n  Dark2: {\n    3: [\n      \"rgb(27,158,119)\",\n      \"rgb(217,95,2)\",\n      \"rgb(117,112,179)\"\n    ],\n    4: [\n      \"rgb(27,158,119)\",\n      \"rgb(217,95,2)\",\n      \"rgb(117,112,179)\",\n      \"rgb(231,41,138)\"\n    ],\n    5: [\n      \"rgb(27,158,119)\",\n      \"rgb(217,95,2)\",\n      \"rgb(117,112,179)\",\n      \"rgb(231,41,138)\",\n      \"rgb(102,166,30)\"\n    ],\n    6: [\n      \"rgb(27,158,119)\",\n      \"rgb(217,95,2)\",\n      \"rgb(117,112,179)\",\n      \"rgb(231,41,138)\",\n      \"rgb(102,166,30)\",\n      \"rgb(230,171,2)\"\n    ],\n    7: [\n      \"rgb(27,158,119)\",\n      \"rgb(217,95,2)\",\n      \"rgb(117,112,179)\",\n      \"rgb(231,41,138)\",\n      \"rgb(102,166,30)\",\n      \"rgb(230,171,2)\",\n      \"rgb(166,118,29)\"\n    ],\n    8: [\n      \"rgb(27,158,119)\",\n      \"rgb(217,95,2)\",\n      \"rgb(117,112,179)\",\n      \"rgb(231,41,138)\",\n      \"rgb(102,166,30)\",\n      \"rgb(230,171,2)\",\n      \"rgb(166,118,29)\",\n      \"rgb(102,102,102)\"\n    ],\n    type: \"qual\"\n  },\n  GnBu: {\n    3: [\n      \"rgb(224,243,219)\",\n      \"rgb(168,221,181)\",\n      \"rgb(67,162,202)\"\n    ],\n    4: [\n      \"rgb(240,249,232)\",\n      \"rgb(186,228,188)\",\n      \"rgb(123,204,196)\",\n      \"rgb(43,140,190)\"\n    ],\n    5: [\n      \"rgb(240,249,232)\",\n      \"rgb(186,228,188)\",\n      \"rgb(123,204,196)\",\n      \"rgb(67,162,202)\",\n      \"rgb(8,104,172)\"\n    ],\n    6: [\n      \"rgb(240,249,232)\",\n      \"rgb(204,235,197)\",\n      \"rgb(168,221,181)\",\n      \"rgb(123,204,196)\",\n      \"rgb(67,162,202)\",\n      \"rgb(8,104,172)\"\n    ],\n    7: [\n      \"rgb(240,249,232)\",\n      \"rgb(204,235,197)\",\n      \"rgb(168,221,181)\",\n      \"rgb(123,204,196)\",\n      \"rgb(78,179,211)\",\n      \"rgb(43,140,190)\",\n      \"rgb(8,88,158)\"\n    ],\n    8: [\n      \"rgb(247,252,240)\",\n      \"rgb(224,243,219)\",\n      \"rgb(204,235,197)\",\n      \"rgb(168,221,181)\",\n      \"rgb(123,204,196)\",\n      \"rgb(78,179,211)\",\n      \"rgb(43,140,190)\",\n      \"rgb(8,88,158)\"\n    ],\n    9: [\n      \"rgb(247,252,240)\",\n      \"rgb(224,243,219)\",\n      \"rgb(204,235,197)\",\n      \"rgb(168,221,181)\",\n      \"rgb(123,204,196)\",\n      \"rgb(78,179,211)\",\n      \"rgb(43,140,190)\",\n      \"rgb(8,104,172)\",\n      \"rgb(8,64,129)\"\n    ],\n    type: \"seq\"\n  },\n  Greens: {\n    3: [\n      \"rgb(229,245,224)\",\n      \"rgb(161,217,155)\",\n      \"rgb(49,163,84)\"\n    ],\n    4: [\n      \"rgb(237,248,233)\",\n      \"rgb(186,228,179)\",\n      \"rgb(116,196,118)\",\n      \"rgb(35,139,69)\"\n    ],\n    5: [\n      \"rgb(237,248,233)\",\n      \"rgb(186,228,179)\",\n      \"rgb(116,196,118)\",\n      \"rgb(49,163,84)\",\n      \"rgb(0,109,44)\"\n    ],\n    6: [\n      \"rgb(237,248,233)\",\n      \"rgb(199,233,192)\",\n      \"rgb(161,217,155)\",\n      \"rgb(116,196,118)\",\n      \"rgb(49,163,84)\",\n      \"rgb(0,109,44)\"\n    ],\n    7: [\n      \"rgb(237,248,233)\",\n      \"rgb(199,233,192)\",\n      \"rgb(161,217,155)\",\n      \"rgb(116,196,118)\",\n      \"rgb(65,171,93)\",\n      \"rgb(35,139,69)\",\n      \"rgb(0,90,50)\"\n    ],\n    8: [\n      \"rgb(247,252,245)\",\n      \"rgb(229,245,224)\",\n      \"rgb(199,233,192)\",\n      \"rgb(161,217,155)\",\n      \"rgb(116,196,118)\",\n      \"rgb(65,171,93)\",\n      \"rgb(35,139,69)\",\n      \"rgb(0,90,50)\"\n    ],\n    9: [\n      \"rgb(247,252,245)\",\n      \"rgb(229,245,224)\",\n      \"rgb(199,233,192)\",\n      \"rgb(161,217,155)\",\n      \"rgb(116,196,118)\",\n      \"rgb(65,171,93)\",\n      \"rgb(35,139,69)\",\n      \"rgb(0,109,44)\",\n      \"rgb(0,68,27)\"\n    ],\n    type: \"seq\"\n  },\n  Greys: {\n    3: [\n      \"rgb(240,240,240)\",\n      \"rgb(189,189,189)\",\n      \"rgb(99,99,99)\"\n    ],\n    4: [\n      \"rgb(247,247,247)\",\n      \"rgb(204,204,204)\",\n      \"rgb(150,150,150)\",\n      \"rgb(82,82,82)\"\n    ],\n    5: [\n      \"rgb(247,247,247)\",\n      \"rgb(204,204,204)\",\n      \"rgb(150,150,150)\",\n      \"rgb(99,99,99)\",\n      \"rgb(37,37,37)\"\n    ],\n    6: [\n      \"rgb(247,247,247)\",\n      \"rgb(217,217,217)\",\n      \"rgb(189,189,189)\",\n      \"rgb(150,150,150)\",\n      \"rgb(99,99,99)\",\n      \"rgb(37,37,37)\"\n    ],\n    7: [\n      \"rgb(247,247,247)\",\n      \"rgb(217,217,217)\",\n      \"rgb(189,189,189)\",\n      \"rgb(150,150,150)\",\n      \"rgb(115,115,115)\",\n      \"rgb(82,82,82)\",\n      \"rgb(37,37,37)\"\n    ],\n    8: [\n      \"rgb(255,255,255)\",\n      \"rgb(240,240,240)\",\n      \"rgb(217,217,217)\",\n      \"rgb(189,189,189)\",\n      \"rgb(150,150,150)\",\n      \"rgb(115,115,115)\",\n      \"rgb(82,82,82)\",\n      \"rgb(37,37,37)\"\n    ],\n    9: [\n      \"rgb(255,255,255)\",\n      \"rgb(240,240,240)\",\n      \"rgb(217,217,217)\",\n      \"rgb(189,189,189)\",\n      \"rgb(150,150,150)\",\n      \"rgb(115,115,115)\",\n      \"rgb(82,82,82)\",\n      \"rgb(37,37,37)\",\n      \"rgb(0,0,0)\"\n    ],\n    type: \"seq\"\n  },\n  OrRd: {\n    3: [\n      \"rgb(254,232,200)\",\n      \"rgb(253,187,132)\",\n      \"rgb(227,74,51)\"\n    ],\n    4: [\n      \"rgb(254,240,217)\",\n      \"rgb(253,204,138)\",\n      \"rgb(252,141,89)\",\n      \"rgb(215,48,31)\"\n    ],\n    5: [\n      \"rgb(254,240,217)\",\n      \"rgb(253,204,138)\",\n      \"rgb(252,141,89)\",\n      \"rgb(227,74,51)\",\n      \"rgb(179,0,0)\"\n    ],\n    6: [\n      \"rgb(254,240,217)\",\n      \"rgb(253,212,158)\",\n      \"rgb(253,187,132)\",\n      \"rgb(252,141,89)\",\n      \"rgb(227,74,51)\",\n      \"rgb(179,0,0)\"\n    ],\n    7: [\n      \"rgb(254,240,217)\",\n      \"rgb(253,212,158)\",\n      \"rgb(253,187,132)\",\n      \"rgb(252,141,89)\",\n      \"rgb(239,101,72)\",\n      \"rgb(215,48,31)\",\n      \"rgb(153,0,0)\"\n    ],\n    8: [\n      \"rgb(255,247,236)\",\n      \"rgb(254,232,200)\",\n      \"rgb(253,212,158)\",\n      \"rgb(253,187,132)\",\n      \"rgb(252,141,89)\",\n      \"rgb(239,101,72)\",\n      \"rgb(215,48,31)\",\n      \"rgb(153,0,0)\"\n    ],\n    9: [\n      \"rgb(255,247,236)\",\n      \"rgb(254,232,200)\",\n      \"rgb(253,212,158)\",\n      \"rgb(253,187,132)\",\n      \"rgb(252,141,89)\",\n      \"rgb(239,101,72)\",\n      \"rgb(215,48,31)\",\n      \"rgb(179,0,0)\",\n      \"rgb(127,0,0)\"\n    ],\n    type: \"seq\"\n  },\n  Oranges: {\n    3: [\n      \"rgb(254,230,206)\",\n      \"rgb(253,174,107)\",\n      \"rgb(230,85,13)\"\n    ],\n    4: [\n      \"rgb(254,237,222)\",\n      \"rgb(253,190,133)\",\n      \"rgb(253,141,60)\",\n      \"rgb(217,71,1)\"\n    ],\n    5: [\n      \"rgb(254,237,222)\",\n      \"rgb(253,190,133)\",\n      \"rgb(253,141,60)\",\n      \"rgb(230,85,13)\",\n      \"rgb(166,54,3)\"\n    ],\n    6: [\n      \"rgb(254,237,222)\",\n      \"rgb(253,208,162)\",\n      \"rgb(253,174,107)\",\n      \"rgb(253,141,60)\",\n      \"rgb(230,85,13)\",\n      \"rgb(166,54,3)\"\n    ],\n    7: [\n      \"rgb(254,237,222)\",\n      \"rgb(253,208,162)\",\n      \"rgb(253,174,107)\",\n      \"rgb(253,141,60)\",\n      \"rgb(241,105,19)\",\n      \"rgb(217,72,1)\",\n      \"rgb(140,45,4)\"\n    ],\n    8: [\n      \"rgb(255,245,235)\",\n      \"rgb(254,230,206)\",\n      \"rgb(253,208,162)\",\n      \"rgb(253,174,107)\",\n      \"rgb(253,141,60)\",\n      \"rgb(241,105,19)\",\n      \"rgb(217,72,1)\",\n      \"rgb(140,45,4)\"\n    ],\n    9: [\n      \"rgb(255,245,235)\",\n      \"rgb(254,230,206)\",\n      \"rgb(253,208,162)\",\n      \"rgb(253,174,107)\",\n      \"rgb(253,141,60)\",\n      \"rgb(241,105,19)\",\n      \"rgb(217,72,1)\",\n      \"rgb(166,54,3)\",\n      \"rgb(127,39,4)\"\n    ],\n    type: \"seq\"\n  },\n  PRGn: {\n    10: [\n      \"rgb(64,0,75)\",\n      \"rgb(118,42,131)\",\n      \"rgb(153,112,171)\",\n      \"rgb(194,165,207)\",\n      \"rgb(231,212,232)\",\n      \"rgb(217,240,211)\",\n      \"rgb(166,219,160)\",\n      \"rgb(90,174,97)\",\n      \"rgb(27,120,55)\",\n      \"rgb(0,68,27)\"\n    ],\n    11: [\n      \"rgb(64,0,75)\",\n      \"rgb(118,42,131)\",\n      \"rgb(153,112,171)\",\n      \"rgb(194,165,207)\",\n      \"rgb(231,212,232)\",\n      \"rgb(247,247,247)\",\n      \"rgb(217,240,211)\",\n      \"rgb(166,219,160)\",\n      \"rgb(90,174,97)\",\n      \"rgb(27,120,55)\",\n      \"rgb(0,68,27)\"\n    ],\n    3: [\n      \"rgb(175,141,195)\",\n      \"rgb(247,247,247)\",\n      \"rgb(127,191,123)\"\n    ],\n    4: [\n      \"rgb(123,50,148)\",\n      \"rgb(194,165,207)\",\n      \"rgb(166,219,160)\",\n      \"rgb(0,136,55)\"\n    ],\n    5: [\n      \"rgb(123,50,148)\",\n      \"rgb(194,165,207)\",\n      \"rgb(247,247,247)\",\n      \"rgb(166,219,160)\",\n      \"rgb(0,136,55)\"\n    ],\n    6: [\n      \"rgb(118,42,131)\",\n      \"rgb(175,141,195)\",\n      \"rgb(231,212,232)\",\n      \"rgb(217,240,211)\",\n      \"rgb(127,191,123)\",\n      \"rgb(27,120,55)\"\n    ],\n    7: [\n      \"rgb(118,42,131)\",\n      \"rgb(175,141,195)\",\n      \"rgb(231,212,232)\",\n      \"rgb(247,247,247)\",\n      \"rgb(217,240,211)\",\n      \"rgb(127,191,123)\",\n      \"rgb(27,120,55)\"\n    ],\n    8: [\n      \"rgb(118,42,131)\",\n      \"rgb(153,112,171)\",\n      \"rgb(194,165,207)\",\n      \"rgb(231,212,232)\",\n      \"rgb(217,240,211)\",\n      \"rgb(166,219,160)\",\n      \"rgb(90,174,97)\",\n      \"rgb(27,120,55)\"\n    ],\n    9: [\n      \"rgb(118,42,131)\",\n      \"rgb(153,112,171)\",\n      \"rgb(194,165,207)\",\n      \"rgb(231,212,232)\",\n      \"rgb(247,247,247)\",\n      \"rgb(217,240,211)\",\n      \"rgb(166,219,160)\",\n      \"rgb(90,174,97)\",\n      \"rgb(27,120,55)\"\n    ],\n    type: \"div\"\n  },\n  Paired: {\n    10: [\n      \"rgb(166,206,227)\",\n      \"rgb(31,120,180)\",\n      \"rgb(178,223,138)\",\n      \"rgb(51,160,44)\",\n      \"rgb(251,154,153)\",\n      \"rgb(227,26,28)\",\n      \"rgb(253,191,111)\",\n      \"rgb(255,127,0)\",\n      \"rgb(202,178,214)\",\n      \"rgb(106,61,154)\"\n    ],\n    11: [\n      \"rgb(166,206,227)\",\n      \"rgb(31,120,180)\",\n      \"rgb(178,223,138)\",\n      \"rgb(51,160,44)\",\n      \"rgb(251,154,153)\",\n      \"rgb(227,26,28)\",\n      \"rgb(253,191,111)\",\n      \"rgb(255,127,0)\",\n      \"rgb(202,178,214)\",\n      \"rgb(106,61,154)\",\n      \"rgb(255,255,153)\"\n    ],\n    12: [\n      \"rgb(166,206,227)\",\n      \"rgb(31,120,180)\",\n      \"rgb(178,223,138)\",\n      \"rgb(51,160,44)\",\n      \"rgb(251,154,153)\",\n      \"rgb(227,26,28)\",\n      \"rgb(253,191,111)\",\n      \"rgb(255,127,0)\",\n      \"rgb(202,178,214)\",\n      \"rgb(106,61,154)\",\n      \"rgb(255,255,153)\",\n      \"rgb(177,89,40)\"\n    ],\n    3: [\n      \"rgb(166,206,227)\",\n      \"rgb(31,120,180)\",\n      \"rgb(178,223,138)\"\n    ],\n    4: [\n      \"rgb(166,206,227)\",\n      \"rgb(31,120,180)\",\n      \"rgb(178,223,138)\",\n      \"rgb(51,160,44)\"\n    ],\n    5: [\n      \"rgb(166,206,227)\",\n      \"rgb(31,120,180)\",\n      \"rgb(178,223,138)\",\n      \"rgb(51,160,44)\",\n      \"rgb(251,154,153)\"\n    ],\n    6: [\n      \"rgb(166,206,227)\",\n      \"rgb(31,120,180)\",\n      \"rgb(178,223,138)\",\n      \"rgb(51,160,44)\",\n      \"rgb(251,154,153)\",\n      \"rgb(227,26,28)\"\n    ],\n    7: [\n      \"rgb(166,206,227)\",\n      \"rgb(31,120,180)\",\n      \"rgb(178,223,138)\",\n      \"rgb(51,160,44)\",\n      \"rgb(251,154,153)\",\n      \"rgb(227,26,28)\",\n      \"rgb(253,191,111)\"\n    ],\n    8: [\n      \"rgb(166,206,227)\",\n      \"rgb(31,120,180)\",\n      \"rgb(178,223,138)\",\n      \"rgb(51,160,44)\",\n      \"rgb(251,154,153)\",\n      \"rgb(227,26,28)\",\n      \"rgb(253,191,111)\",\n      \"rgb(255,127,0)\"\n    ],\n    9: [\n      \"rgb(166,206,227)\",\n      \"rgb(31,120,180)\",\n      \"rgb(178,223,138)\",\n      \"rgb(51,160,44)\",\n      \"rgb(251,154,153)\",\n      \"rgb(227,26,28)\",\n      \"rgb(253,191,111)\",\n      \"rgb(255,127,0)\",\n      \"rgb(202,178,214)\"\n    ],\n    type: \"qual\"\n  },\n  Pastel1: {\n    3: [\n      \"rgb(251,180,174)\",\n      \"rgb(179,205,227)\",\n      \"rgb(204,235,197)\"\n    ],\n    4: [\n      \"rgb(251,180,174)\",\n      \"rgb(179,205,227)\",\n      \"rgb(204,235,197)\",\n      \"rgb(222,203,228)\"\n    ],\n    5: [\n      \"rgb(251,180,174)\",\n      \"rgb(179,205,227)\",\n      \"rgb(204,235,197)\",\n      \"rgb(222,203,228)\",\n      \"rgb(254,217,166)\"\n    ],\n    6: [\n      \"rgb(251,180,174)\",\n      \"rgb(179,205,227)\",\n      \"rgb(204,235,197)\",\n      \"rgb(222,203,228)\",\n      \"rgb(254,217,166)\",\n      \"rgb(255,255,204)\"\n    ],\n    7: [\n      \"rgb(251,180,174)\",\n      \"rgb(179,205,227)\",\n      \"rgb(204,235,197)\",\n      \"rgb(222,203,228)\",\n      \"rgb(254,217,166)\",\n      \"rgb(255,255,204)\",\n      \"rgb(229,216,189)\"\n    ],\n    8: [\n      \"rgb(251,180,174)\",\n      \"rgb(179,205,227)\",\n      \"rgb(204,235,197)\",\n      \"rgb(222,203,228)\",\n      \"rgb(254,217,166)\",\n      \"rgb(255,255,204)\",\n      \"rgb(229,216,189)\",\n      \"rgb(253,218,236)\"\n    ],\n    9: [\n      \"rgb(251,180,174)\",\n      \"rgb(179,205,227)\",\n      \"rgb(204,235,197)\",\n      \"rgb(222,203,228)\",\n      \"rgb(254,217,166)\",\n      \"rgb(255,255,204)\",\n      \"rgb(229,216,189)\",\n      \"rgb(253,218,236)\",\n      \"rgb(242,242,242)\"\n    ],\n    type: \"qual\"\n  },\n  Pastel2: {\n    3: [\n      \"rgb(179,226,205)\",\n      \"rgb(253,205,172)\",\n      \"rgb(203,213,232)\"\n    ],\n    4: [\n      \"rgb(179,226,205)\",\n      \"rgb(253,205,172)\",\n      \"rgb(203,213,232)\",\n      \"rgb(244,202,228)\"\n    ],\n    5: [\n      \"rgb(179,226,205)\",\n      \"rgb(253,205,172)\",\n      \"rgb(203,213,232)\",\n      \"rgb(244,202,228)\",\n      \"rgb(230,245,201)\"\n    ],\n    6: [\n      \"rgb(179,226,205)\",\n      \"rgb(253,205,172)\",\n      \"rgb(203,213,232)\",\n      \"rgb(244,202,228)\",\n      \"rgb(230,245,201)\",\n      \"rgb(255,242,174)\"\n    ],\n    7: [\n      \"rgb(179,226,205)\",\n      \"rgb(253,205,172)\",\n      \"rgb(203,213,232)\",\n      \"rgb(244,202,228)\",\n      \"rgb(230,245,201)\",\n      \"rgb(255,242,174)\",\n      \"rgb(241,226,204)\"\n    ],\n    8: [\n      \"rgb(179,226,205)\",\n      \"rgb(253,205,172)\",\n      \"rgb(203,213,232)\",\n      \"rgb(244,202,228)\",\n      \"rgb(230,245,201)\",\n      \"rgb(255,242,174)\",\n      \"rgb(241,226,204)\",\n      \"rgb(204,204,204)\"\n    ],\n    type: \"qual\"\n  },\n  PiYG: {\n    10: [\n      \"rgb(142,1,82)\",\n      \"rgb(197,27,125)\",\n      \"rgb(222,119,174)\",\n      \"rgb(241,182,218)\",\n      \"rgb(253,224,239)\",\n      \"rgb(230,245,208)\",\n      \"rgb(184,225,134)\",\n      \"rgb(127,188,65)\",\n      \"rgb(77,146,33)\",\n      \"rgb(39,100,25)\"\n    ],\n    11: [\n      \"rgb(142,1,82)\",\n      \"rgb(197,27,125)\",\n      \"rgb(222,119,174)\",\n      \"rgb(241,182,218)\",\n      \"rgb(253,224,239)\",\n      \"rgb(247,247,247)\",\n      \"rgb(230,245,208)\",\n      \"rgb(184,225,134)\",\n      \"rgb(127,188,65)\",\n      \"rgb(77,146,33)\",\n      \"rgb(39,100,25)\"\n    ],\n    3: [\n      \"rgb(233,163,201)\",\n      \"rgb(247,247,247)\",\n      \"rgb(161,215,106)\"\n    ],\n    4: [\n      \"rgb(208,28,139)\",\n      \"rgb(241,182,218)\",\n      \"rgb(184,225,134)\",\n      \"rgb(77,172,38)\"\n    ],\n    5: [\n      \"rgb(208,28,139)\",\n      \"rgb(241,182,218)\",\n      \"rgb(247,247,247)\",\n      \"rgb(184,225,134)\",\n      \"rgb(77,172,38)\"\n    ],\n    6: [\n      \"rgb(197,27,125)\",\n      \"rgb(233,163,201)\",\n      \"rgb(253,224,239)\",\n      \"rgb(230,245,208)\",\n      \"rgb(161,215,106)\",\n      \"rgb(77,146,33)\"\n    ],\n    7: [\n      \"rgb(197,27,125)\",\n      \"rgb(233,163,201)\",\n      \"rgb(253,224,239)\",\n      \"rgb(247,247,247)\",\n      \"rgb(230,245,208)\",\n      \"rgb(161,215,106)\",\n      \"rgb(77,146,33)\"\n    ],\n    8: [\n      \"rgb(197,27,125)\",\n      \"rgb(222,119,174)\",\n      \"rgb(241,182,218)\",\n      \"rgb(253,224,239)\",\n      \"rgb(230,245,208)\",\n      \"rgb(184,225,134)\",\n      \"rgb(127,188,65)\",\n      \"rgb(77,146,33)\"\n    ],\n    9: [\n      \"rgb(197,27,125)\",\n      \"rgb(222,119,174)\",\n      \"rgb(241,182,218)\",\n      \"rgb(253,224,239)\",\n      \"rgb(247,247,247)\",\n      \"rgb(230,245,208)\",\n      \"rgb(184,225,134)\",\n      \"rgb(127,188,65)\",\n      \"rgb(77,146,33)\"\n    ],\n    type: \"div\"\n  },\n  PuBu: {\n    3: [\n      \"rgb(236,231,242)\",\n      \"rgb(166,189,219)\",\n      \"rgb(43,140,190)\"\n    ],\n    4: [\n      \"rgb(241,238,246)\",\n      \"rgb(189,201,225)\",\n      \"rgb(116,169,207)\",\n      \"rgb(5,112,176)\"\n    ],\n    5: [\n      \"rgb(241,238,246)\",\n      \"rgb(189,201,225)\",\n      \"rgb(116,169,207)\",\n      \"rgb(43,140,190)\",\n      \"rgb(4,90,141)\"\n    ],\n    6: [\n      \"rgb(241,238,246)\",\n      \"rgb(208,209,230)\",\n      \"rgb(166,189,219)\",\n      \"rgb(116,169,207)\",\n      \"rgb(43,140,190)\",\n      \"rgb(4,90,141)\"\n    ],\n    7: [\n      \"rgb(241,238,246)\",\n      \"rgb(208,209,230)\",\n      \"rgb(166,189,219)\",\n      \"rgb(116,169,207)\",\n      \"rgb(54,144,192)\",\n      \"rgb(5,112,176)\",\n      \"rgb(3,78,123)\"\n    ],\n    8: [\n      \"rgb(255,247,251)\",\n      \"rgb(236,231,242)\",\n      \"rgb(208,209,230)\",\n      \"rgb(166,189,219)\",\n      \"rgb(116,169,207)\",\n      \"rgb(54,144,192)\",\n      \"rgb(5,112,176)\",\n      \"rgb(3,78,123)\"\n    ],\n    9: [\n      \"rgb(255,247,251)\",\n      \"rgb(236,231,242)\",\n      \"rgb(208,209,230)\",\n      \"rgb(166,189,219)\",\n      \"rgb(116,169,207)\",\n      \"rgb(54,144,192)\",\n      \"rgb(5,112,176)\",\n      \"rgb(4,90,141)\",\n      \"rgb(2,56,88)\"\n    ],\n    type: \"seq\"\n  },\n  PuBuGn: {\n    3: [\n      \"rgb(236,226,240)\",\n      \"rgb(166,189,219)\",\n      \"rgb(28,144,153)\"\n    ],\n    4: [\n      \"rgb(246,239,247)\",\n      \"rgb(189,201,225)\",\n      \"rgb(103,169,207)\",\n      \"rgb(2,129,138)\"\n    ],\n    5: [\n      \"rgb(246,239,247)\",\n      \"rgb(189,201,225)\",\n      \"rgb(103,169,207)\",\n      \"rgb(28,144,153)\",\n      \"rgb(1,108,89)\"\n    ],\n    6: [\n      \"rgb(246,239,247)\",\n      \"rgb(208,209,230)\",\n      \"rgb(166,189,219)\",\n      \"rgb(103,169,207)\",\n      \"rgb(28,144,153)\",\n      \"rgb(1,108,89)\"\n    ],\n    7: [\n      \"rgb(246,239,247)\",\n      \"rgb(208,209,230)\",\n      \"rgb(166,189,219)\",\n      \"rgb(103,169,207)\",\n      \"rgb(54,144,192)\",\n      \"rgb(2,129,138)\",\n      \"rgb(1,100,80)\"\n    ],\n    8: [\n      \"rgb(255,247,251)\",\n      \"rgb(236,226,240)\",\n      \"rgb(208,209,230)\",\n      \"rgb(166,189,219)\",\n      \"rgb(103,169,207)\",\n      \"rgb(54,144,192)\",\n      \"rgb(2,129,138)\",\n      \"rgb(1,100,80)\"\n    ],\n    9: [\n      \"rgb(255,247,251)\",\n      \"rgb(236,226,240)\",\n      \"rgb(208,209,230)\",\n      \"rgb(166,189,219)\",\n      \"rgb(103,169,207)\",\n      \"rgb(54,144,192)\",\n      \"rgb(2,129,138)\",\n      \"rgb(1,108,89)\",\n      \"rgb(1,70,54)\"\n    ],\n    type: \"seq\"\n  },\n  PuOr: {\n    10: [\n      \"rgb(127,59,8)\",\n      \"rgb(179,88,6)\",\n      \"rgb(224,130,20)\",\n      \"rgb(253,184,99)\",\n      \"rgb(254,224,182)\",\n      \"rgb(216,218,235)\",\n      \"rgb(178,171,210)\",\n      \"rgb(128,115,172)\",\n      \"rgb(84,39,136)\",\n      \"rgb(45,0,75)\"\n    ],\n    11: [\n      \"rgb(127,59,8)\",\n      \"rgb(179,88,6)\",\n      \"rgb(224,130,20)\",\n      \"rgb(253,184,99)\",\n      \"rgb(254,224,182)\",\n      \"rgb(247,247,247)\",\n      \"rgb(216,218,235)\",\n      \"rgb(178,171,210)\",\n      \"rgb(128,115,172)\",\n      \"rgb(84,39,136)\",\n      \"rgb(45,0,75)\"\n    ],\n    3: [\n      \"rgb(241,163,64)\",\n      \"rgb(247,247,247)\",\n      \"rgb(153,142,195)\"\n    ],\n    4: [\n      \"rgb(230,97,1)\",\n      \"rgb(253,184,99)\",\n      \"rgb(178,171,210)\",\n      \"rgb(94,60,153)\"\n    ],\n    5: [\n      \"rgb(230,97,1)\",\n      \"rgb(253,184,99)\",\n      \"rgb(247,247,247)\",\n      \"rgb(178,171,210)\",\n      \"rgb(94,60,153)\"\n    ],\n    6: [\n      \"rgb(179,88,6)\",\n      \"rgb(241,163,64)\",\n      \"rgb(254,224,182)\",\n      \"rgb(216,218,235)\",\n      \"rgb(153,142,195)\",\n      \"rgb(84,39,136)\"\n    ],\n    7: [\n      \"rgb(179,88,6)\",\n      \"rgb(241,163,64)\",\n      \"rgb(254,224,182)\",\n      \"rgb(247,247,247)\",\n      \"rgb(216,218,235)\",\n      \"rgb(153,142,195)\",\n      \"rgb(84,39,136)\"\n    ],\n    8: [\n      \"rgb(179,88,6)\",\n      \"rgb(224,130,20)\",\n      \"rgb(253,184,99)\",\n      \"rgb(254,224,182)\",\n      \"rgb(216,218,235)\",\n      \"rgb(178,171,210)\",\n      \"rgb(128,115,172)\",\n      \"rgb(84,39,136)\"\n    ],\n    9: [\n      \"rgb(179,88,6)\",\n      \"rgb(224,130,20)\",\n      \"rgb(253,184,99)\",\n      \"rgb(254,224,182)\",\n      \"rgb(247,247,247)\",\n      \"rgb(216,218,235)\",\n      \"rgb(178,171,210)\",\n      \"rgb(128,115,172)\",\n      \"rgb(84,39,136)\"\n    ],\n    type: \"div\"\n  },\n  PuRd: {\n    3: [\n      \"rgb(231,225,239)\",\n      \"rgb(201,148,199)\",\n      \"rgb(221,28,119)\"\n    ],\n    4: [\n      \"rgb(241,238,246)\",\n      \"rgb(215,181,216)\",\n      \"rgb(223,101,176)\",\n      \"rgb(206,18,86)\"\n    ],\n    5: [\n      \"rgb(241,238,246)\",\n      \"rgb(215,181,216)\",\n      \"rgb(223,101,176)\",\n      \"rgb(221,28,119)\",\n      \"rgb(152,0,67)\"\n    ],\n    6: [\n      \"rgb(241,238,246)\",\n      \"rgb(212,185,218)\",\n      \"rgb(201,148,199)\",\n      \"rgb(223,101,176)\",\n      \"rgb(221,28,119)\",\n      \"rgb(152,0,67)\"\n    ],\n    7: [\n      \"rgb(241,238,246)\",\n      \"rgb(212,185,218)\",\n      \"rgb(201,148,199)\",\n      \"rgb(223,101,176)\",\n      \"rgb(231,41,138)\",\n      \"rgb(206,18,86)\",\n      \"rgb(145,0,63)\"\n    ],\n    8: [\n      \"rgb(247,244,249)\",\n      \"rgb(231,225,239)\",\n      \"rgb(212,185,218)\",\n      \"rgb(201,148,199)\",\n      \"rgb(223,101,176)\",\n      \"rgb(231,41,138)\",\n      \"rgb(206,18,86)\",\n      \"rgb(145,0,63)\"\n    ],\n    9: [\n      \"rgb(247,244,249)\",\n      \"rgb(231,225,239)\",\n      \"rgb(212,185,218)\",\n      \"rgb(201,148,199)\",\n      \"rgb(223,101,176)\",\n      \"rgb(231,41,138)\",\n      \"rgb(206,18,86)\",\n      \"rgb(152,0,67)\",\n      \"rgb(103,0,31)\"\n    ],\n    type: \"seq\"\n  },\n  Purples: {\n    3: [\n      \"rgb(239,237,245)\",\n      \"rgb(188,189,220)\",\n      \"rgb(117,107,177)\"\n    ],\n    4: [\n      \"rgb(242,240,247)\",\n      \"rgb(203,201,226)\",\n      \"rgb(158,154,200)\",\n      \"rgb(106,81,163)\"\n    ],\n    5: [\n      \"rgb(242,240,247)\",\n      \"rgb(203,201,226)\",\n      \"rgb(158,154,200)\",\n      \"rgb(117,107,177)\",\n      \"rgb(84,39,143)\"\n    ],\n    6: [\n      \"rgb(242,240,247)\",\n      \"rgb(218,218,235)\",\n      \"rgb(188,189,220)\",\n      \"rgb(158,154,200)\",\n      \"rgb(117,107,177)\",\n      \"rgb(84,39,143)\"\n    ],\n    7: [\n      \"rgb(242,240,247)\",\n      \"rgb(218,218,235)\",\n      \"rgb(188,189,220)\",\n      \"rgb(158,154,200)\",\n      \"rgb(128,125,186)\",\n      \"rgb(106,81,163)\",\n      \"rgb(74,20,134)\"\n    ],\n    8: [\n      \"rgb(252,251,253)\",\n      \"rgb(239,237,245)\",\n      \"rgb(218,218,235)\",\n      \"rgb(188,189,220)\",\n      \"rgb(158,154,200)\",\n      \"rgb(128,125,186)\",\n      \"rgb(106,81,163)\",\n      \"rgb(74,20,134)\"\n    ],\n    9: [\n      \"rgb(252,251,253)\",\n      \"rgb(239,237,245)\",\n      \"rgb(218,218,235)\",\n      \"rgb(188,189,220)\",\n      \"rgb(158,154,200)\",\n      \"rgb(128,125,186)\",\n      \"rgb(106,81,163)\",\n      \"rgb(84,39,143)\",\n      \"rgb(63,0,125)\"\n    ],\n    type: \"seq\"\n  },\n  RdBu: {\n    10: [\n      \"rgb(103,0,31)\",\n      \"rgb(178,24,43)\",\n      \"rgb(214,96,77)\",\n      \"rgb(244,165,130)\",\n      \"rgb(253,219,199)\",\n      \"rgb(209,229,240)\",\n      \"rgb(146,197,222)\",\n      \"rgb(67,147,195)\",\n      \"rgb(33,102,172)\",\n      \"rgb(5,48,97)\"\n    ],\n    11: [\n      \"rgb(103,0,31)\",\n      \"rgb(178,24,43)\",\n      \"rgb(214,96,77)\",\n      \"rgb(244,165,130)\",\n      \"rgb(253,219,199)\",\n      \"rgb(247,247,247)\",\n      \"rgb(209,229,240)\",\n      \"rgb(146,197,222)\",\n      \"rgb(67,147,195)\",\n      \"rgb(33,102,172)\",\n      \"rgb(5,48,97)\"\n    ],\n    3: [\n      \"rgb(239,138,98)\",\n      \"rgb(247,247,247)\",\n      \"rgb(103,169,207)\"\n    ],\n    4: [\n      \"rgb(202,0,32)\",\n      \"rgb(244,165,130)\",\n      \"rgb(146,197,222)\",\n      \"rgb(5,113,176)\"\n    ],\n    5: [\n      \"rgb(202,0,32)\",\n      \"rgb(244,165,130)\",\n      \"rgb(247,247,247)\",\n      \"rgb(146,197,222)\",\n      \"rgb(5,113,176)\"\n    ],\n    6: [\n      \"rgb(178,24,43)\",\n      \"rgb(239,138,98)\",\n      \"rgb(253,219,199)\",\n      \"rgb(209,229,240)\",\n      \"rgb(103,169,207)\",\n      \"rgb(33,102,172)\"\n    ],\n    7: [\n      \"rgb(178,24,43)\",\n      \"rgb(239,138,98)\",\n      \"rgb(253,219,199)\",\n      \"rgb(247,247,247)\",\n      \"rgb(209,229,240)\",\n      \"rgb(103,169,207)\",\n      \"rgb(33,102,172)\"\n    ],\n    8: [\n      \"rgb(178,24,43)\",\n      \"rgb(214,96,77)\",\n      \"rgb(244,165,130)\",\n      \"rgb(253,219,199)\",\n      \"rgb(209,229,240)\",\n      \"rgb(146,197,222)\",\n      \"rgb(67,147,195)\",\n      \"rgb(33,102,172)\"\n    ],\n    9: [\n      \"rgb(178,24,43)\",\n      \"rgb(214,96,77)\",\n      \"rgb(244,165,130)\",\n      \"rgb(253,219,199)\",\n      \"rgb(247,247,247)\",\n      \"rgb(209,229,240)\",\n      \"rgb(146,197,222)\",\n      \"rgb(67,147,195)\",\n      \"rgb(33,102,172)\"\n    ],\n    type: \"div\"\n  },\n  RdGy: {\n    10: [\n      \"rgb(103,0,31)\",\n      \"rgb(178,24,43)\",\n      \"rgb(214,96,77)\",\n      \"rgb(244,165,130)\",\n      \"rgb(253,219,199)\",\n      \"rgb(224,224,224)\",\n      \"rgb(186,186,186)\",\n      \"rgb(135,135,135)\",\n      \"rgb(77,77,77)\",\n      \"rgb(26,26,26)\"\n    ],\n    11: [\n      \"rgb(103,0,31)\",\n      \"rgb(178,24,43)\",\n      \"rgb(214,96,77)\",\n      \"rgb(244,165,130)\",\n      \"rgb(253,219,199)\",\n      \"rgb(255,255,255)\",\n      \"rgb(224,224,224)\",\n      \"rgb(186,186,186)\",\n      \"rgb(135,135,135)\",\n      \"rgb(77,77,77)\",\n      \"rgb(26,26,26)\"\n    ],\n    3: [\n      \"rgb(239,138,98)\",\n      \"rgb(255,255,255)\",\n      \"rgb(153,153,153)\"\n    ],\n    4: [\n      \"rgb(202,0,32)\",\n      \"rgb(244,165,130)\",\n      \"rgb(186,186,186)\",\n      \"rgb(64,64,64)\"\n    ],\n    5: [\n      \"rgb(202,0,32)\",\n      \"rgb(244,165,130)\",\n      \"rgb(255,255,255)\",\n      \"rgb(186,186,186)\",\n      \"rgb(64,64,64)\"\n    ],\n    6: [\n      \"rgb(178,24,43)\",\n      \"rgb(239,138,98)\",\n      \"rgb(253,219,199)\",\n      \"rgb(224,224,224)\",\n      \"rgb(153,153,153)\",\n      \"rgb(77,77,77)\"\n    ],\n    7: [\n      \"rgb(178,24,43)\",\n      \"rgb(239,138,98)\",\n      \"rgb(253,219,199)\",\n      \"rgb(255,255,255)\",\n      \"rgb(224,224,224)\",\n      \"rgb(153,153,153)\",\n      \"rgb(77,77,77)\"\n    ],\n    8: [\n      \"rgb(178,24,43)\",\n      \"rgb(214,96,77)\",\n      \"rgb(244,165,130)\",\n      \"rgb(253,219,199)\",\n      \"rgb(224,224,224)\",\n      \"rgb(186,186,186)\",\n      \"rgb(135,135,135)\",\n      \"rgb(77,77,77)\"\n    ],\n    9: [\n      \"rgb(178,24,43)\",\n      \"rgb(214,96,77)\",\n      \"rgb(244,165,130)\",\n      \"rgb(253,219,199)\",\n      \"rgb(255,255,255)\",\n      \"rgb(224,224,224)\",\n      \"rgb(186,186,186)\",\n      \"rgb(135,135,135)\",\n      \"rgb(77,77,77)\"\n    ],\n    type: \"div\"\n  },\n  RdPu: {\n    3: [\n      \"rgb(253,224,221)\",\n      \"rgb(250,159,181)\",\n      \"rgb(197,27,138)\"\n    ],\n    4: [\n      \"rgb(254,235,226)\",\n      \"rgb(251,180,185)\",\n      \"rgb(247,104,161)\",\n      \"rgb(174,1,126)\"\n    ],\n    5: [\n      \"rgb(254,235,226)\",\n      \"rgb(251,180,185)\",\n      \"rgb(247,104,161)\",\n      \"rgb(197,27,138)\",\n      \"rgb(122,1,119)\"\n    ],\n    6: [\n      \"rgb(254,235,226)\",\n      \"rgb(252,197,192)\",\n      \"rgb(250,159,181)\",\n      \"rgb(247,104,161)\",\n      \"rgb(197,27,138)\",\n      \"rgb(122,1,119)\"\n    ],\n    7: [\n      \"rgb(254,235,226)\",\n      \"rgb(252,197,192)\",\n      \"rgb(250,159,181)\",\n      \"rgb(247,104,161)\",\n      \"rgb(221,52,151)\",\n      \"rgb(174,1,126)\",\n      \"rgb(122,1,119)\"\n    ],\n    8: [\n      \"rgb(255,247,243)\",\n      \"rgb(253,224,221)\",\n      \"rgb(252,197,192)\",\n      \"rgb(250,159,181)\",\n      \"rgb(247,104,161)\",\n      \"rgb(221,52,151)\",\n      \"rgb(174,1,126)\",\n      \"rgb(122,1,119)\"\n    ],\n    9: [\n      \"rgb(255,247,243)\",\n      \"rgb(253,224,221)\",\n      \"rgb(252,197,192)\",\n      \"rgb(250,159,181)\",\n      \"rgb(247,104,161)\",\n      \"rgb(221,52,151)\",\n      \"rgb(174,1,126)\",\n      \"rgb(122,1,119)\",\n      \"rgb(73,0,106)\"\n    ],\n    type: \"seq\"\n  },\n  RdYlBu: {\n    10: [\n      \"rgb(165,0,38)\",\n      \"rgb(215,48,39)\",\n      \"rgb(244,109,67)\",\n      \"rgb(253,174,97)\",\n      \"rgb(254,224,144)\",\n      \"rgb(224,243,248)\",\n      \"rgb(171,217,233)\",\n      \"rgb(116,173,209)\",\n      \"rgb(69,117,180)\",\n      \"rgb(49,54,149)\"\n    ],\n    11: [\n      \"rgb(165,0,38)\",\n      \"rgb(215,48,39)\",\n      \"rgb(244,109,67)\",\n      \"rgb(253,174,97)\",\n      \"rgb(254,224,144)\",\n      \"rgb(255,255,191)\",\n      \"rgb(224,243,248)\",\n      \"rgb(171,217,233)\",\n      \"rgb(116,173,209)\",\n      \"rgb(69,117,180)\",\n      \"rgb(49,54,149)\"\n    ],\n    3: [\n      \"rgb(252,141,89)\",\n      \"rgb(255,255,191)\",\n      \"rgb(145,191,219)\"\n    ],\n    4: [\n      \"rgb(215,25,28)\",\n      \"rgb(253,174,97)\",\n      \"rgb(171,217,233)\",\n      \"rgb(44,123,182)\"\n    ],\n    5: [\n      \"rgb(215,25,28)\",\n      \"rgb(253,174,97)\",\n      \"rgb(255,255,191)\",\n      \"rgb(171,217,233)\",\n      \"rgb(44,123,182)\"\n    ],\n    6: [\n      \"rgb(215,48,39)\",\n      \"rgb(252,141,89)\",\n      \"rgb(254,224,144)\",\n      \"rgb(224,243,248)\",\n      \"rgb(145,191,219)\",\n      \"rgb(69,117,180)\"\n    ],\n    7: [\n      \"rgb(215,48,39)\",\n      \"rgb(252,141,89)\",\n      \"rgb(254,224,144)\",\n      \"rgb(255,255,191)\",\n      \"rgb(224,243,248)\",\n      \"rgb(145,191,219)\",\n      \"rgb(69,117,180)\"\n    ],\n    8: [\n      \"rgb(215,48,39)\",\n      \"rgb(244,109,67)\",\n      \"rgb(253,174,97)\",\n      \"rgb(254,224,144)\",\n      \"rgb(224,243,248)\",\n      \"rgb(171,217,233)\",\n      \"rgb(116,173,209)\",\n      \"rgb(69,117,180)\"\n    ],\n    9: [\n      \"rgb(215,48,39)\",\n      \"rgb(244,109,67)\",\n      \"rgb(253,174,97)\",\n      \"rgb(254,224,144)\",\n      \"rgb(255,255,191)\",\n      \"rgb(224,243,248)\",\n      \"rgb(171,217,233)\",\n      \"rgb(116,173,209)\",\n      \"rgb(69,117,180)\"\n    ],\n    type: \"div\"\n  },\n  RdYlGn: {\n    10: [\n      \"rgb(165,0,38)\",\n      \"rgb(215,48,39)\",\n      \"rgb(244,109,67)\",\n      \"rgb(253,174,97)\",\n      \"rgb(254,224,139)\",\n      \"rgb(217,239,139)\",\n      \"rgb(166,217,106)\",\n      \"rgb(102,189,99)\",\n      \"rgb(26,152,80)\",\n      \"rgb(0,104,55)\"\n    ],\n    11: [\n      \"rgb(165,0,38)\",\n      \"rgb(215,48,39)\",\n      \"rgb(244,109,67)\",\n      \"rgb(253,174,97)\",\n      \"rgb(254,224,139)\",\n      \"rgb(255,255,191)\",\n      \"rgb(217,239,139)\",\n      \"rgb(166,217,106)\",\n      \"rgb(102,189,99)\",\n      \"rgb(26,152,80)\",\n      \"rgb(0,104,55)\"\n    ],\n    3: [\n      \"rgb(252,141,89)\",\n      \"rgb(255,255,191)\",\n      \"rgb(145,207,96)\"\n    ],\n    4: [\n      \"rgb(215,25,28)\",\n      \"rgb(253,174,97)\",\n      \"rgb(166,217,106)\",\n      \"rgb(26,150,65)\"\n    ],\n    5: [\n      \"rgb(215,25,28)\",\n      \"rgb(253,174,97)\",\n      \"rgb(255,255,191)\",\n      \"rgb(166,217,106)\",\n      \"rgb(26,150,65)\"\n    ],\n    6: [\n      \"rgb(215,48,39)\",\n      \"rgb(252,141,89)\",\n      \"rgb(254,224,139)\",\n      \"rgb(217,239,139)\",\n      \"rgb(145,207,96)\",\n      \"rgb(26,152,80)\"\n    ],\n    7: [\n      \"rgb(215,48,39)\",\n      \"rgb(252,141,89)\",\n      \"rgb(254,224,139)\",\n      \"rgb(255,255,191)\",\n      \"rgb(217,239,139)\",\n      \"rgb(145,207,96)\",\n      \"rgb(26,152,80)\"\n    ],\n    8: [\n      \"rgb(215,48,39)\",\n      \"rgb(244,109,67)\",\n      \"rgb(253,174,97)\",\n      \"rgb(254,224,139)\",\n      \"rgb(217,239,139)\",\n      \"rgb(166,217,106)\",\n      \"rgb(102,189,99)\",\n      \"rgb(26,152,80)\"\n    ],\n    9: [\n      \"rgb(215,48,39)\",\n      \"rgb(244,109,67)\",\n      \"rgb(253,174,97)\",\n      \"rgb(254,224,139)\",\n      \"rgb(255,255,191)\",\n      \"rgb(217,239,139)\",\n      \"rgb(166,217,106)\",\n      \"rgb(102,189,99)\",\n      \"rgb(26,152,80)\"\n    ],\n    type: \"div\"\n  },\n  Reds: {\n    3: [\n      \"rgb(254,224,210)\",\n      \"rgb(252,146,114)\",\n      \"rgb(222,45,38)\"\n    ],\n    4: [\n      \"rgb(254,229,217)\",\n      \"rgb(252,174,145)\",\n      \"rgb(251,106,74)\",\n      \"rgb(203,24,29)\"\n    ],\n    5: [\n      \"rgb(254,229,217)\",\n      \"rgb(252,174,145)\",\n      \"rgb(251,106,74)\",\n      \"rgb(222,45,38)\",\n      \"rgb(165,15,21)\"\n    ],\n    6: [\n      \"rgb(254,229,217)\",\n      \"rgb(252,187,161)\",\n      \"rgb(252,146,114)\",\n      \"rgb(251,106,74)\",\n      \"rgb(222,45,38)\",\n      \"rgb(165,15,21)\"\n    ],\n    7: [\n      \"rgb(254,229,217)\",\n      \"rgb(252,187,161)\",\n      \"rgb(252,146,114)\",\n      \"rgb(251,106,74)\",\n      \"rgb(239,59,44)\",\n      \"rgb(203,24,29)\",\n      \"rgb(153,0,13)\"\n    ],\n    8: [\n      \"rgb(255,245,240)\",\n      \"rgb(254,224,210)\",\n      \"rgb(252,187,161)\",\n      \"rgb(252,146,114)\",\n      \"rgb(251,106,74)\",\n      \"rgb(239,59,44)\",\n      \"rgb(203,24,29)\",\n      \"rgb(153,0,13)\"\n    ],\n    9: [\n      \"rgb(255,245,240)\",\n      \"rgb(254,224,210)\",\n      \"rgb(252,187,161)\",\n      \"rgb(252,146,114)\",\n      \"rgb(251,106,74)\",\n      \"rgb(239,59,44)\",\n      \"rgb(203,24,29)\",\n      \"rgb(165,15,21)\",\n      \"rgb(103,0,13)\"\n    ],\n    type: \"seq\"\n  },\n  Set1: {\n    3: [\n      \"rgb(228,26,28)\",\n      \"rgb(55,126,184)\",\n      \"rgb(77,175,74)\"\n    ],\n    4: [\n      \"rgb(228,26,28)\",\n      \"rgb(55,126,184)\",\n      \"rgb(77,175,74)\",\n      \"rgb(152,78,163)\"\n    ],\n    5: [\n      \"rgb(228,26,28)\",\n      \"rgb(55,126,184)\",\n      \"rgb(77,175,74)\",\n      \"rgb(152,78,163)\",\n      \"rgb(255,127,0)\"\n    ],\n    6: [\n      \"rgb(228,26,28)\",\n      \"rgb(55,126,184)\",\n      \"rgb(77,175,74)\",\n      \"rgb(152,78,163)\",\n      \"rgb(255,127,0)\",\n      \"rgb(255,255,51)\"\n    ],\n    7: [\n      \"rgb(228,26,28)\",\n      \"rgb(55,126,184)\",\n      \"rgb(77,175,74)\",\n      \"rgb(152,78,163)\",\n      \"rgb(255,127,0)\",\n      \"rgb(255,255,51)\",\n      \"rgb(166,86,40)\"\n    ],\n    8: [\n      \"rgb(228,26,28)\",\n      \"rgb(55,126,184)\",\n      \"rgb(77,175,74)\",\n      \"rgb(152,78,163)\",\n      \"rgb(255,127,0)\",\n      \"rgb(255,255,51)\",\n      \"rgb(166,86,40)\",\n      \"rgb(247,129,191)\"\n    ],\n    9: [\n      \"rgb(228,26,28)\",\n      \"rgb(55,126,184)\",\n      \"rgb(77,175,74)\",\n      \"rgb(152,78,163)\",\n      \"rgb(255,127,0)\",\n      \"rgb(255,255,51)\",\n      \"rgb(166,86,40)\",\n      \"rgb(247,129,191)\",\n      \"rgb(153,153,153)\"\n    ],\n    type: \"qual\"\n  },\n  Set2: {\n    3: [\n      \"rgb(102,194,165)\",\n      \"rgb(252,141,98)\",\n      \"rgb(141,160,203)\"\n    ],\n    4: [\n      \"rgb(102,194,165)\",\n      \"rgb(252,141,98)\",\n      \"rgb(141,160,203)\",\n      \"rgb(231,138,195)\"\n    ],\n    5: [\n      \"rgb(102,194,165)\",\n      \"rgb(252,141,98)\",\n      \"rgb(141,160,203)\",\n      \"rgb(231,138,195)\",\n      \"rgb(166,216,84)\"\n    ],\n    6: [\n      \"rgb(102,194,165)\",\n      \"rgb(252,141,98)\",\n      \"rgb(141,160,203)\",\n      \"rgb(231,138,195)\",\n      \"rgb(166,216,84)\",\n      \"rgb(255,217,47)\"\n    ],\n    7: [\n      \"rgb(102,194,165)\",\n      \"rgb(252,141,98)\",\n      \"rgb(141,160,203)\",\n      \"rgb(231,138,195)\",\n      \"rgb(166,216,84)\",\n      \"rgb(255,217,47)\",\n      \"rgb(229,196,148)\"\n    ],\n    8: [\n      \"rgb(102,194,165)\",\n      \"rgb(252,141,98)\",\n      \"rgb(141,160,203)\",\n      \"rgb(231,138,195)\",\n      \"rgb(166,216,84)\",\n      \"rgb(255,217,47)\",\n      \"rgb(229,196,148)\",\n      \"rgb(179,179,179)\"\n    ],\n    type: \"qual\"\n  },\n  Set3: {\n    10: [\n      \"rgb(141,211,199)\",\n      \"rgb(255,255,179)\",\n      \"rgb(190,186,218)\",\n      \"rgb(251,128,114)\",\n      \"rgb(128,177,211)\",\n      \"rgb(253,180,98)\",\n      \"rgb(179,222,105)\",\n      \"rgb(252,205,229)\",\n      \"rgb(217,217,217)\",\n      \"rgb(188,128,189)\"\n    ],\n    11: [\n      \"rgb(141,211,199)\",\n      \"rgb(255,255,179)\",\n      \"rgb(190,186,218)\",\n      \"rgb(251,128,114)\",\n      \"rgb(128,177,211)\",\n      \"rgb(253,180,98)\",\n      \"rgb(179,222,105)\",\n      \"rgb(252,205,229)\",\n      \"rgb(217,217,217)\",\n      \"rgb(188,128,189)\",\n      \"rgb(204,235,197)\"\n    ],\n    12: [\n      \"rgb(141,211,199)\",\n      \"rgb(255,255,179)\",\n      \"rgb(190,186,218)\",\n      \"rgb(251,128,114)\",\n      \"rgb(128,177,211)\",\n      \"rgb(253,180,98)\",\n      \"rgb(179,222,105)\",\n      \"rgb(252,205,229)\",\n      \"rgb(217,217,217)\",\n      \"rgb(188,128,189)\",\n      \"rgb(204,235,197)\",\n      \"rgb(255,237,111)\"\n    ],\n    3: [\n      \"rgb(141,211,199)\",\n      \"rgb(255,255,179)\",\n      \"rgb(190,186,218)\"\n    ],\n    4: [\n      \"rgb(141,211,199)\",\n      \"rgb(255,255,179)\",\n      \"rgb(190,186,218)\",\n      \"rgb(251,128,114)\"\n    ],\n    5: [\n      \"rgb(141,211,199)\",\n      \"rgb(255,255,179)\",\n      \"rgb(190,186,218)\",\n      \"rgb(251,128,114)\",\n      \"rgb(128,177,211)\"\n    ],\n    6: [\n      \"rgb(141,211,199)\",\n      \"rgb(255,255,179)\",\n      \"rgb(190,186,218)\",\n      \"rgb(251,128,114)\",\n      \"rgb(128,177,211)\",\n      \"rgb(253,180,98)\"\n    ],\n    7: [\n      \"rgb(141,211,199)\",\n      \"rgb(255,255,179)\",\n      \"rgb(190,186,218)\",\n      \"rgb(251,128,114)\",\n      \"rgb(128,177,211)\",\n      \"rgb(253,180,98)\",\n      \"rgb(179,222,105)\"\n    ],\n    8: [\n      \"rgb(141,211,199)\",\n      \"rgb(255,255,179)\",\n      \"rgb(190,186,218)\",\n      \"rgb(251,128,114)\",\n      \"rgb(128,177,211)\",\n      \"rgb(253,180,98)\",\n      \"rgb(179,222,105)\",\n      \"rgb(252,205,229)\"\n    ],\n    9: [\n      \"rgb(141,211,199)\",\n      \"rgb(255,255,179)\",\n      \"rgb(190,186,218)\",\n      \"rgb(251,128,114)\",\n      \"rgb(128,177,211)\",\n      \"rgb(253,180,98)\",\n      \"rgb(179,222,105)\",\n      \"rgb(252,205,229)\",\n      \"rgb(217,217,217)\"\n    ],\n    type: \"qual\"\n  },\n  Spectral: {\n    10: [\n      \"rgb(158,1,66)\",\n      \"rgb(213,62,79)\",\n      \"rgb(244,109,67)\",\n      \"rgb(253,174,97)\",\n      \"rgb(254,224,139)\",\n      \"rgb(230,245,152)\",\n      \"rgb(171,221,164)\",\n      \"rgb(102,194,165)\",\n      \"rgb(50,136,189)\",\n      \"rgb(94,79,162)\"\n    ],\n    11: [\n      \"rgb(158,1,66)\",\n      \"rgb(213,62,79)\",\n      \"rgb(244,109,67)\",\n      \"rgb(253,174,97)\",\n      \"rgb(254,224,139)\",\n      \"rgb(255,255,191)\",\n      \"rgb(230,245,152)\",\n      \"rgb(171,221,164)\",\n      \"rgb(102,194,165)\",\n      \"rgb(50,136,189)\",\n      \"rgb(94,79,162)\"\n    ],\n    3: [\n      \"rgb(252,141,89)\",\n      \"rgb(255,255,191)\",\n      \"rgb(153,213,148)\"\n    ],\n    4: [\n      \"rgb(215,25,28)\",\n      \"rgb(253,174,97)\",\n      \"rgb(171,221,164)\",\n      \"rgb(43,131,186)\"\n    ],\n    5: [\n      \"rgb(215,25,28)\",\n      \"rgb(253,174,97)\",\n      \"rgb(255,255,191)\",\n      \"rgb(171,221,164)\",\n      \"rgb(43,131,186)\"\n    ],\n    6: [\n      \"rgb(213,62,79)\",\n      \"rgb(252,141,89)\",\n      \"rgb(254,224,139)\",\n      \"rgb(230,245,152)\",\n      \"rgb(153,213,148)\",\n      \"rgb(50,136,189)\"\n    ],\n    7: [\n      \"rgb(213,62,79)\",\n      \"rgb(252,141,89)\",\n      \"rgb(254,224,139)\",\n      \"rgb(255,255,191)\",\n      \"rgb(230,245,152)\",\n      \"rgb(153,213,148)\",\n      \"rgb(50,136,189)\"\n    ],\n    8: [\n      \"rgb(213,62,79)\",\n      \"rgb(244,109,67)\",\n      \"rgb(253,174,97)\",\n      \"rgb(254,224,139)\",\n      \"rgb(230,245,152)\",\n      \"rgb(171,221,164)\",\n      \"rgb(102,194,165)\",\n      \"rgb(50,136,189)\"\n    ],\n    9: [\n      \"rgb(213,62,79)\",\n      \"rgb(244,109,67)\",\n      \"rgb(253,174,97)\",\n      \"rgb(254,224,139)\",\n      \"rgb(255,255,191)\",\n      \"rgb(230,245,152)\",\n      \"rgb(171,221,164)\",\n      \"rgb(102,194,165)\",\n      \"rgb(50,136,189)\"\n    ],\n    type: \"div\"\n  },\n  YlGn: {\n    3: [\n      \"rgb(247,252,185)\",\n      \"rgb(173,221,142)\",\n      \"rgb(49,163,84)\"\n    ],\n    4: [\n      \"rgb(255,255,204)\",\n      \"rgb(194,230,153)\",\n      \"rgb(120,198,121)\",\n      \"rgb(35,132,67)\"\n    ],\n    5: [\n      \"rgb(255,255,204)\",\n      \"rgb(194,230,153)\",\n      \"rgb(120,198,121)\",\n      \"rgb(49,163,84)\",\n      \"rgb(0,104,55)\"\n    ],\n    6: [\n      \"rgb(255,255,204)\",\n      \"rgb(217,240,163)\",\n      \"rgb(173,221,142)\",\n      \"rgb(120,198,121)\",\n      \"rgb(49,163,84)\",\n      \"rgb(0,104,55)\"\n    ],\n    7: [\n      \"rgb(255,255,204)\",\n      \"rgb(217,240,163)\",\n      \"rgb(173,221,142)\",\n      \"rgb(120,198,121)\",\n      \"rgb(65,171,93)\",\n      \"rgb(35,132,67)\",\n      \"rgb(0,90,50)\"\n    ],\n    8: [\n      \"rgb(255,255,229)\",\n      \"rgb(247,252,185)\",\n      \"rgb(217,240,163)\",\n      \"rgb(173,221,142)\",\n      \"rgb(120,198,121)\",\n      \"rgb(65,171,93)\",\n      \"rgb(35,132,67)\",\n      \"rgb(0,90,50)\"\n    ],\n    9: [\n      \"rgb(255,255,229)\",\n      \"rgb(247,252,185)\",\n      \"rgb(217,240,163)\",\n      \"rgb(173,221,142)\",\n      \"rgb(120,198,121)\",\n      \"rgb(65,171,93)\",\n      \"rgb(35,132,67)\",\n      \"rgb(0,104,55)\",\n      \"rgb(0,69,41)\"\n    ],\n    type: \"seq\"\n  },\n  YlGnBu: {\n    3: [\n      \"rgb(237,248,177)\",\n      \"rgb(127,205,187)\",\n      \"rgb(44,127,184)\"\n    ],\n    4: [\n      \"rgb(255,255,204)\",\n      \"rgb(161,218,180)\",\n      \"rgb(65,182,196)\",\n      \"rgb(34,94,168)\"\n    ],\n    5: [\n      \"rgb(255,255,204)\",\n      \"rgb(161,218,180)\",\n      \"rgb(65,182,196)\",\n      \"rgb(44,127,184)\",\n      \"rgb(37,52,148)\"\n    ],\n    6: [\n      \"rgb(255,255,204)\",\n      \"rgb(199,233,180)\",\n      \"rgb(127,205,187)\",\n      \"rgb(65,182,196)\",\n      \"rgb(44,127,184)\",\n      \"rgb(37,52,148)\"\n    ],\n    7: [\n      \"rgb(255,255,204)\",\n      \"rgb(199,233,180)\",\n      \"rgb(127,205,187)\",\n      \"rgb(65,182,196)\",\n      \"rgb(29,145,192)\",\n      \"rgb(34,94,168)\",\n      \"rgb(12,44,132)\"\n    ],\n    8: [\n      \"rgb(255,255,217)\",\n      \"rgb(237,248,177)\",\n      \"rgb(199,233,180)\",\n      \"rgb(127,205,187)\",\n      \"rgb(65,182,196)\",\n      \"rgb(29,145,192)\",\n      \"rgb(34,94,168)\",\n      \"rgb(12,44,132)\"\n    ],\n    9: [\n      \"rgb(255,255,217)\",\n      \"rgb(237,248,177)\",\n      \"rgb(199,233,180)\",\n      \"rgb(127,205,187)\",\n      \"rgb(65,182,196)\",\n      \"rgb(29,145,192)\",\n      \"rgb(34,94,168)\",\n      \"rgb(37,52,148)\",\n      \"rgb(8,29,88)\"\n    ],\n    type: \"seq\"\n  },\n  YlOrBr: {\n    3: [\n      \"rgb(255,247,188)\",\n      \"rgb(254,196,79)\",\n      \"rgb(217,95,14)\"\n    ],\n    4: [\n      \"rgb(255,255,212)\",\n      \"rgb(254,217,142)\",\n      \"rgb(254,153,41)\",\n      \"rgb(204,76,2)\"\n    ],\n    5: [\n      \"rgb(255,255,212)\",\n      \"rgb(254,217,142)\",\n      \"rgb(254,153,41)\",\n      \"rgb(217,95,14)\",\n      \"rgb(153,52,4)\"\n    ],\n    6: [\n      \"rgb(255,255,212)\",\n      \"rgb(254,227,145)\",\n      \"rgb(254,196,79)\",\n      \"rgb(254,153,41)\",\n      \"rgb(217,95,14)\",\n      \"rgb(153,52,4)\"\n    ],\n    7: [\n      \"rgb(255,255,212)\",\n      \"rgb(254,227,145)\",\n      \"rgb(254,196,79)\",\n      \"rgb(254,153,41)\",\n      \"rgb(236,112,20)\",\n      \"rgb(204,76,2)\",\n      \"rgb(140,45,4)\"\n    ],\n    8: [\n      \"rgb(255,255,229)\",\n      \"rgb(255,247,188)\",\n      \"rgb(254,227,145)\",\n      \"rgb(254,196,79)\",\n      \"rgb(254,153,41)\",\n      \"rgb(236,112,20)\",\n      \"rgb(204,76,2)\",\n      \"rgb(140,45,4)\"\n    ],\n    9: [\n      \"rgb(255,255,229)\",\n      \"rgb(255,247,188)\",\n      \"rgb(254,227,145)\",\n      \"rgb(254,196,79)\",\n      \"rgb(254,153,41)\",\n      \"rgb(236,112,20)\",\n      \"rgb(204,76,2)\",\n      \"rgb(153,52,4)\",\n      \"rgb(102,37,6)\"\n    ],\n    type: \"seq\"\n  },\n  YlOrRd: {\n    3: [\n      \"rgb(255,237,160)\",\n      \"rgb(254,178,76)\",\n      \"rgb(240,59,32)\"\n    ],\n    4: [\n      \"rgb(255,255,178)\",\n      \"rgb(254,204,92)\",\n      \"rgb(253,141,60)\",\n      \"rgb(227,26,28)\"\n    ],\n    5: [\n      \"rgb(255,255,178)\",\n      \"rgb(254,204,92)\",\n      \"rgb(253,141,60)\",\n      \"rgb(240,59,32)\",\n      \"rgb(189,0,38)\"\n    ],\n    6: [\n      \"rgb(255,255,178)\",\n      \"rgb(254,217,118)\",\n      \"rgb(254,178,76)\",\n      \"rgb(253,141,60)\",\n      \"rgb(240,59,32)\",\n      \"rgb(189,0,38)\"\n    ],\n    7: [\n      \"rgb(255,255,178)\",\n      \"rgb(254,217,118)\",\n      \"rgb(254,178,76)\",\n      \"rgb(253,141,60)\",\n      \"rgb(252,78,42)\",\n      \"rgb(227,26,28)\",\n      \"rgb(177,0,38)\"\n    ],\n    8: [\n      \"rgb(255,255,204)\",\n      \"rgb(255,237,160)\",\n      \"rgb(254,217,118)\",\n      \"rgb(254,178,76)\",\n      \"rgb(253,141,60)\",\n      \"rgb(252,78,42)\",\n      \"rgb(227,26,28)\",\n      \"rgb(177,0,38)\"\n    ],\n    type: \"seq\"\n  }\n};\n","import { Injectable } from '@angular/core';\nimport {palettes} from './colorbrewer';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport type ColourSpecification = string;\nexport type ColourPalette = Array<ColourSpecification>;\n\n\nconst DEFAULT_NUM_COLOURS=3;\n\n@Injectable()\nexport class PaletteService {\n  namedPalettes:{[key:string]:ColourPalette} = {};\n\n  constructor(private _http:HttpClient) {\n\n  }\n\n  private _source:string='';\n  set source(val:string){\n    this._source=val;\n  }\n\n  getPalette(name:string,reverse?:boolean,numColours?:number):Observable<ColourPalette>{\n    var palette:(ColourPalette|null)=null;\n    if(this.namedPalettes[name]){\n      palette = this.namedPalettes[name];\n    } else if(palettes[name]){\n      palette = palettes[name][numColours||DEFAULT_NUM_COLOURS];\n    }\n\n    if(palette){\n      if(reverse){\n        return of(palette.slice().reverse());\n      }\n      return of(palette.slice());\n    }\n\n    return this._http.get(this._source+'/'+name+'.pal',{ responseType: 'text' }).pipe(\n      map((text:string)=>this.parseNCWMSPalette(text)));\n  }\n\n  parseNCWMSPalette(txt:string):ColourPalette{\n    return txt.split('\\n')\n      .map(ln=>ln.replace(/\\#.*/g,'').trim().replace(/ +/g,' '))\n      .filter(ln => ln.length)\n      .map(e=> `rgb(${e.split(' ').join(',')})`);\n  }\n\n  colourIndex(val:number,min:number,max:number,count:number):number{\n    let point = (val-min)/(max-min);\n    let pos = Math.round(point*(count-1));\n    return pos;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NgbDateStruct } from \"@ng-bootstrap/ng-bootstrap\";\n\nexport interface UTCDate {\n  getTime(): number;\n  getUTCFullYear(): number;\n  getUTCMonth():number;\n  getUTCDate():number;\n\n  setUTCFullYear(n: number):void;\n  setUTCMonth(n:number):void;\n  setUTCDate(n:number):void;\n}\n\nexport function utcDate(y:number,m?:number,d?:number):UTCDate{\n  return new Date(Date.UTC(y,m,d));\n}\n\nexport function utcDateCopy(d:UTCDate){\n  return utcDate(d.getUTCFullYear(),d.getUTCMonth(),d.getUTCDate());\n}\n\n@Injectable()\nexport class TimeUtilsService {\n\n  constructor() {\n\n  }\n\n  specialDates: {[key:string]:(() => Date)} = {\n    yesterday: () => {\n      var d = new Date();\n      d.setDate(d.getDate() - 1);\n      return d;\n    }\n  }\n\n  convertDate(d:(UTCDate|string)):NgbDateStruct{\n    if(!d){\n      d = new Date();\n    }\n\n    var date:UTCDate;\n    if(typeof(d) === 'string'){\n      var dateText:string = d;\n      if(this.specialDates[dateText]){\n        date = this.specialDates[dateText]();\n      } else {\n        var [year,month,day,other] = d.split('-').map(c => +c);\n        date = utcDate(year,month,day);\n      }\n    } else {\n      date = d;\n    }\n\n    return {\n      day: date.getUTCDate(),\n      month: date.getUTCMonth() + 1,\n      year: date.getUTCFullYear()\n    };\n  }\n\n  datesEqual(lhs:NgbDateStruct,rhs:NgbDateStruct):boolean{\n    if(!lhs || !rhs){\n      return false;\n    }\n\n    return (lhs.year === rhs.year) &&\n           (lhs.month === rhs.month) &&\n           (lhs.day === rhs.day);\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CatalogHost } from './data/catalog';\nimport { Observable } from 'rxjs';\nimport { publishReplay, refCount } from 'rxjs/operators';\n\n@Injectable()\nexport class StaticDataService {\n  cache:{[key:string]:Observable<any>}={};\n\n  constructor(private http:HttpClient) {\n\n  }\n\n  get(host:CatalogHost,path:string):Observable<any>{\n    var url = `${host.url}${path}`;\n    if(!this.cache[url]){\n      let uniqueUrl = url;\n      if(uniqueUrl.indexOf('?')<0){\n        uniqueUrl += '?';\n      } else {\n        uniqueUrl += '&'\n      }\n      uniqueUrl += `time=${new Date().getTime()}`;\n\n      this.cache[url] = this.http.get(uniqueUrl).pipe(\n        publishReplay(),refCount());\n    }\n\n    return this.cache[url];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { parseData, parseDAS,parseDDX,\n  simplify, DapData, DapDAS, DapDDX, DapVariableDataArray } from 'dap-query-js/dist/dap-query';\nimport { CatalogHost } from './data/catalog';\nimport { map, switchMap } from 'rxjs/operators';\nimport { Observable,forkJoin } from 'rxjs';\n\n@Injectable()\nexport class OpendapService {\n\n  constructor(private http:HttpClient) {\n\n  }\n\n  makeURL(host:CatalogHost,filepath:string):string{\n    return host.url + '/dodsC/' + filepath;\n  }\n\n  get(url:string):Observable<string>{\n    return this.http.get(url,{ responseType: 'text' })\n  }\n\n  getData(queryUrl:string,das:DapDAS):Observable<DapData>{\n    return this.get(queryUrl).pipe(\n      map((txt:string)=>simplify(parseData(txt,das))));\n  }\n\n  getDAS(url:string):Observable<DapDAS>{\n    return this.get(url+'.das').pipe(\n      map(parseDAS));\n  }\n\n  getDDX(url:string):Observable<DapDDX>{\n    return this.get(url+'.ddx').pipe(\n      map(parseDDX));\n  }\n\n  getExtent(url:string):Observable<number[]>{\n    console.log(url);\n    return forkJoin([\n      this.getDAS(url),\n      this.getDDX(url)\n    ]).pipe(switchMap(([theDAS,theDDX])=>{\n      var das:DapDAS = <DapDAS>theDAS;\n      return forkJoin([\n        this.getData(url+'.ascii?latitude',das),\n        this.getData(url+'.ascii?longitude',das)\n      ])}),\n      map((ll:DapData[])=>{\n        var lats = <DapVariableDataArray>ll[0].latitude;\n        var lons = <DapVariableDataArray>ll[1].longitude;\n        return [<number>lats[0],<number>lats[lats.length-1],\n                <number>lons[0],<number>lons[lons.length-1]];\n      }));\n  }\n\n  dapRangeQuery(from:number,to?:number,step?:number):string{\n    step = step || 1;\n    if(to===undefined){\n      to = from;\n    }\n    return '['+from+':'+step+':'+to+']';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MappedLayer } from './data/mapped-layer';\nimport { DapDDX, DapDAS, DapData } from 'dap-query-js/dist/dap-query';\nimport { OpendapService } from './opendap.service';\nimport { Bounds } from './data/bounds';\n\nimport { CatalogHost } from './data/catalog';\nimport { forkJoin, Observable, of } from 'rxjs';\nimport { switchMap, publishReplay, refCount, map, switchAll, tap, shareReplay } from 'rxjs/operators';\n\nexport const LAT_NAMES=['latitude','lat'];\nexport const LNG_NAMES=['longitude','lng','lon'];\nexport const TIME_NAMES=['time','t'];\n\n@Injectable()\nexport class MetadataService {\n  ddxCache:{[key:string]:Observable<DapDDX>}={}\n  dasCache:{[key:string]:Observable<DapDAS>}={}\n\n  constructor(private dap:OpendapService) {\n\n  }\n\n  identifyCoordinate(ddx:DapDDX,...possibleNames:Array<string>):string{\n    for(let n of possibleNames){\n      if(ddx.variables[n]){\n        return n;\n      }\n    }\n    return undefined;\n  }\n\n  getDDX(host:CatalogHost,file:string):Observable<DapDDX>{\n    var url = this.dap.makeURL(host,file);\n\n    return this.ddxForUrl(url);\n  }\n\n  ddxForUrl(url:string):Observable<DapDDX>{\n    if(!this.ddxCache[url]){\n      this.ddxCache[url] =\n        this.dap.getDDX(url).pipe(publishReplay(),refCount());\n    }\n\n    return this.ddxCache[url];\n}\n\n  getDDXForLayer(ml:MappedLayer):Observable<DapDDX>{\n    return this.getDDX(ml.flattenedSettings.host,ml.interpolatedFile);\n  }\n\n  getDAS(host:CatalogHost,file:string):Observable<DapDAS>{\n    var url = this.dap.makeURL(host,file);\n    return this.dasForUrl(url);\n  }\n\n  dasForUrl(url:string):Observable<DapDAS>{\n    if(!this.dasCache[url]){\n      this.dasCache[url] =\n        this.dap.getDAS(url).pipe(publishReplay(),refCount());\n    }\n\n    return this.dasCache[url];\n  }\n\n  getDASForLayer(ml:MappedLayer):Observable<DapDAS>{\n    return this.getDAS(ml.flattenedSettings.host,ml.interpolatedFile);\n  }\n\n  getMetadata(ml:MappedLayer):Observable<any>{\n    if(ml.flattenedSettings.host.software !=='tds'){\n      return of({});\n    }\n\n    return forkJoin([this.getDASForLayer(ml),this.getDDXForLayer(ml)]).pipe(\n      map(meta=>{\n        return {\n          das: <DapDAS>meta[0],\n          ddx: <DapDDX>meta[1]\n        };\n      }),\n      map(meta=>{\n        return Object.assign({},\n                             meta.das.attr||{},\n                             meta.ddx.variables[ml.flattenedSettings.layer||ml.flattenedSettings.variable]||{});\n      }));\n  }\n\n  populateMetadata(ml:MappedLayer){\n    this.getMetadata(ml).subscribe(entry=>{\n      setTimeout(()=>{\n        ml.retrievedMetadata = entry;\n      })\n    });\n  }\n\n  getGrid(host:CatalogHost,file:string):Observable<number[][]>{\n    const url = this.dap.makeURL(host,file);\n    return this.getGridForURL(url);\n  }\n\n  getGridForURL(url:string):Observable<number[][]>{\n    const ddx$ = this.ddxForUrl(url);\n    const das$ = this.dasForUrl(url);\n    const res$ = <Observable<number[][]>>forkJoin([ddx$,das$]).pipe(\n      map((metadata:any[])=>{\n        const ddx:DapDDX = metadata[0];\n        const das:DapDAS = metadata[1];\n\n        const latCoord = this.identifyCoordinate(ddx,...LAT_NAMES);\n        const lngCoord = this.identifyCoordinate(ddx,...LNG_NAMES);\n\n        const lat$ =\n          this.dap.getData(`${url}.ascii?${latCoord}`,das).pipe(\n            map((dd:DapData)=><number[]>dd[latCoord]));\n        const lng$ =\n          this.dap.getData(`${url}.ascii?${lngCoord}`,das).pipe(\n            map((dd:DapData)=><number[]>dd[lngCoord]));\n\n        return forkJoin<number[]>(lat$,lng$);\n      }),switchAll(),publishReplay(),refCount());\n      return res$;\n  }\n\n  getGridForLayer(ml:MappedLayer):Observable<Array<Array<number>>>{\n    return this.getGrid(ml.flattenedSettings.host,ml.interpolatedFile);\n  }\n\n  getSpatialExtent(ml:MappedLayer):Observable<Bounds>{\n    return this.getGridForLayer(ml).pipe(map(([lats,lngs])=>{\n      var result:Bounds = {\n        east: Math.max(...lngs),\n        west: Math.min(...lngs),\n        north: Math.max(...lats),\n        south: Math.min(...lats)\n      };\n      return result;\n    })).pipe(publishReplay(), refCount());\n  }\n\n  getTimeDimension(host:CatalogHost,file:string):Observable<Date[]>{\n    const url = this.dap.makeURL(host,file);\n    return this.getTimeDimensionForURL(url);\n  }\n\n  timeCache:{[key:string]:Observable<Date[]>}={};\n\n  getTimeDimensionForURL(url:string):Observable<Date[]>{\n    if(!this.timeCache[url]){\n      const ddx$ = this.ddxForUrl(url);\n      const das$ = this.dasForUrl(url);\n      const res$ = <Observable<Date[]>>forkJoin([ddx$,das$]).pipe(\n        map((metadata:any[])=>{\n          const ddx:DapDDX = metadata[0];\n          const das:DapDAS = metadata[1];\n\n          const timeCoord = this.identifyCoordinate(ddx,...TIME_NAMES);\n\n          const time$ =\n            this.dap.getData(`${url}.ascii?${timeCoord}`,das).pipe(\n              map((dd:DapData)=><Date[]>dd[timeCoord]));\n\n          return time$;\n        }),switchAll(),shareReplay());\n      this.timeCache[url] = res$;\n    }\n    return this.timeCache[url];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MappedLayer } from './data/mapped-layer';\nimport { LatLng } from '@agm/core';\nimport { OpendapService } from './opendap.service';\nimport { MetadataService, LAT_NAMES, LNG_NAMES, TIME_NAMES } from './metadata.service';\nimport { DapDDX, DapDAS, DapData } from 'dap-query-js/dist/dap-query';\nimport { CatalogHost, Layer } from './data/catalog';\nimport { forkJoin, Observable } from 'rxjs';\nimport { switchMap, map } from 'rxjs/operators';\n\nexport interface TimeSeries{\n  dates:Array<Date>;\n  values:Array<number>;\n  label?:string;\n  tags?:{\n    [key:string]:any\n  };\n  style?:string;\n  units?:string;\n  [key:string]:any;\n}\n\nexport interface SimpleLatLng{\n  lat:number,\n  lng:number\n};\n\n@Injectable()\nexport class TimeseriesService {\n\n  constructor(private metadata:MetadataService,private dap:OpendapService) {\n\n  }\n\n  getTimeseries(host:CatalogHost,file:string,variable:string,\n                pt:(LatLng|SimpleLatLng),additionalIndices:any,\n                fillValue?:number):Observable<TimeSeries>{\n    additionalIndices = additionalIndices || {};\n    var url = this.dap.makeURL(host,file);\n    var ddx$ = this.metadata.ddxForUrl(url);\n    var das$ = this.metadata.dasForUrl(url);\n    var variable = variable;\n    return forkJoin(ddx$,das$,this.metadata.getGrid(host,file)).pipe(switchMap(\n      ([ddx,das,latsAndLngs])=>{\n        const lats:number[] = (<number[][]>latsAndLngs)[0];\n        const lngs:number[] = (<number[][]>latsAndLngs)[1];\n      var latIndex = this.indexInDimension((<any>pt).lat,lats);\n      var lngIndex = this.indexInDimension((<any>pt).lng,lngs);\n      if(fillValue===undefined){\n        fillValue = +(<DapDDX>ddx).variables[variable]._FillValue;\n      }\n      var query = this.makeTimeQuery(<DapDDX>ddx,variable,latIndex,lngIndex,additionalIndices);\n      return this.dap.getData(`${url}.ascii?${variable}${query}`,<DapDAS>das)\n    }),map((data:DapData)=>{\n      let vals = (<number[]> data[variable]);\n      if(!vals.length){\n        vals = [<number>data[variable]];\n      }\n      return {\n        dates:<Array<Date>> (data.time||data.t),\n        values:vals.map(v=>(v===fillValue)?NaN:v)\n      };\n    }));\n  }\n\n  getTimeseriesForLayer(ml:MappedLayer,pt:LatLng):Observable<TimeSeries>{\n    return this.getTimeseries(ml.flattenedSettings.host,\n                              ml.interpolatedFile,\n                              ml.flattenedSettings.layer||ml.flattenedSettings.variable,\n                              pt,\n                              null,\n                              ml.flattenedSettings.fillValue);\n  }\n\n\n  makeTimeQuery(ddx:DapDDX,variable:string,latIndex:number,lngIndex:number,additionalIndices:any):string{\n    var metadata = ddx.variables[variable];\n    var query='';\n\n    metadata.dimensions.forEach((dim:any)=>{\n      var dName:string = dim.name.toLowerCase();\n      if(TIME_NAMES.indexOf(dName)>=0){\n        query += this.dapRangeQuery(0,+(dim.size)-1);\n      } else if(LAT_NAMES.indexOf(dName)>=0){\n          query += this.dapRangeQuery(latIndex);\n      } else if(LNG_NAMES.indexOf(dName)>=0){\n        query += this.dapRangeQuery(lngIndex);\n      } else { \n        query += this.dapRangeQuery(additionalIndices[dName]||0);\n      }\n    });\n    return query;\n  }\n\n  dapRangeQuery(from:number,to?:number,step?:number):string{\n    step = step || 1;\n    if(to===undefined){\n      to = from;\n    }\n    return '['+from+':'+step+':'+to+']';\n  }\n\n  indexInDimension(c:number,dim:Array<number>,trim?:number):number{\n    var minIndex = 0;\n    var maxIndex = dim.length-1;\n\n    if(trim){\n      maxIndex-=trim;\n    }\n\n    const rev = dim[0] > dim[dim.length-1];\n    if(rev){\n      minIndex = maxIndex;\n      maxIndex = 0;\n    }\n    var currentIndex;\n\n    while((minIndex<=maxIndex)||(rev&&(maxIndex<=minIndex))){\n      if(c<=dim[minIndex]){\n        return minIndex;\n      }\n\n      if(c>=dim[maxIndex]){\n        return maxIndex;\n      }\n\n      currentIndex = Math.floor((minIndex + maxIndex) / 2);\n\n      var d1 = Math.abs(dim[currentIndex]-c);\n      var d2 = Math.abs(dim[currentIndex+1]-c);\n\n      if(rev){\n        if (d2 <= d1) {\n            maxIndex = currentIndex + 1;\n        } else {\n            minIndex = currentIndex;\n        }\n      } else {\n        if (d2 <= d1) {\n            minIndex = currentIndex + 1;\n        } else {\n            maxIndex = currentIndex;\n        }\n      }\n    }\n    return currentIndex;\n  };\n\n}\n","\n// @dynamic\nexport class InterpolationService{\n  static templateMatcher: RegExp = /{{\\s?([^{}\\s]*)\\s?}}/g;\n  private static isDefined(val:any){\n    return val!==undefined && val!==null;\n  }\n\n  public static interpolate(expr: string, params?: any): string {\n    if(typeof expr !== 'string' || !params) {\n      return expr;\n    }\n\n    return expr.replace(InterpolationService.templateMatcher, (substring: string, b: string) => {\n      let r = InterpolationService.getValue(params, b);\n      return InterpolationService.isDefined(r) ? r : substring;\n    });\n  }\n\n  static getValue(target: any, key: string): string {\n    let keys = key.split('.');\n    key = '';\n    do {\n      key += keys.shift();\n      if(InterpolationService.isDefined(target) && InterpolationService.isDefined(target[key]) && (typeof target[key] === 'object' || !keys.length)) {\n        target = target[key];\n        key = '';\n      } else if(!keys.length) {\n        target = undefined;\n      } else {\n        key += '.';\n      }\n    } while(keys.length);\n\n    return target;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject, of } from 'rxjs';\nimport { PointData, Catalog, LayerTagValue } from './data/catalog';\nimport { Feature, GeometryObject } from 'geojson';\nimport { InterpolationService } from './interpolation.service';\nimport { MetadataService } from './metadata.service';\nimport { map } from 'rxjs/operators';\n\nexport interface PointSelection {\n  catalog: PointData,\n  variable:string,\n  feature:Feature<GeometryObject>,\n  tags: {[key:string]:string}\n}\n\n@Injectable()\nexport class PointSelectionService {\n  private latestPointSelectionSource = new BehaviorSubject<PointSelection>(null);\n  latestPointSelection:Observable<PointSelection> = this.latestPointSelectionSource.asObservable();\n\n  constructor(private meta: MetadataService) {\n\n  }\n  private unchanged(current:PointSelection,updated:PointSelection){\n    if(!current && !updated){\n      return true;\n    }\n\n    if(!current || !updated){\n      return false;\n    }\n\n    if(current.variable !== updated.variable){\n      return false;\n    }\n\n    if(!Object.keys(current.tags).every(t=>current.tags[t]===updated.tags[t])){\n      return false;\n    }\n\n    if(current.catalog.url!==updated.catalog.url){\n      return false;\n    }\n\n    if(current.feature!==updated.feature){\n      return false;\n    }\n\n    return true;\n    // return false; // TODO\n  }\n\n  pointSelection(sel: PointSelection) {\n    let current = this.latestPointSelectionSource.getValue();\n    if(this.unchanged(current,sel)){\n      return;\n    }\n\n    let url = this.fullUrl(sel);\n    if(!this.validUrl(url)){\n      return; // Not a complete selection\n    }\n\n    if(!sel.variable){\n      return; // Not a complete selection\n    }\n\n    this.latestPointSelectionSource.next(sel);\n  }\n\n  fullUrl(sel:PointSelection) {\n    let params = Object.assign({},\n                               sel.feature?sel.feature.properties:{},\n                               sel.tags);\n    return InterpolationService.interpolate(sel.catalog.url,params);\n  }\n\n  validUrl(url:string):boolean{\n    return url.indexOf('{{')<0;\n  }\n\n  timeseriesVariables(sel:PointSelection):Observable<LayerTagValue[]>{\n    let coords = sel.catalog.coordinates || {};\n    let url = this.fullUrl(sel);\n    if(!this.validUrl(url)){\n      return of([]);\n    }\n\n    return this.meta.ddxForUrl(url).pipe(\n      map(ddx=>{\n        let variables = ddx.variables;\n        let variableNames = Object.keys(variables).filter(v=>{\n          let dims:any[] = ddx.variables[v].dimensions;\n          return Object.keys(coords).every(coord=>{\n            return dims.find(dim=>dim.name===coord);\n          });\n        });\n\n        return variableNames.map(v=>{\n          if(sel.catalog&&sel.catalog.displayFormat){\n            let fmt = Object.assign({variable:v},ddx.variables[v]);\n            return {\n              value:v,\n              label:InterpolationService.interpolate(sel.catalog.displayFormat,fmt)\n            }\n          }\n          if(ddx.variables[v].long_name){\n            return {\n              value:v,\n              label:ddx.variables[v].long_name\n            };\n          }\n          return {\n            value:v,\n            label:v\n          };\n        });\n      }));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, forkJoin } from 'rxjs';\nimport { UTCDate } from './time-utils.service';\nimport { MappedLayer } from './data/mapped-layer';\nimport { map } from 'rxjs/operators';\nimport { InterpolationService } from './interpolation.service';\nimport { MetadataService } from './metadata.service';\nimport { Layer } from './data/catalog';\n\n@Injectable()\nexport class AvailableDatesService {\n\n  constructor(private metadata:MetadataService) {\n\n  }\n\n  private fnForYear(mapped:MappedLayer,year:number){\n    const publication = mapped.layer.publications[mapped.options.publication];\n    return InterpolationService.interpolate(publication.options.filepath, {\n      year: year\n    });\n  }\n\n  availableDates(mapped:MappedLayer,year?:number):Observable<Date[]>{\n    let layer = mapped.layer;\n    let fn = this.fnForYear(mapped,year);\n\n    let res$ = this.metadata.getTimeDimension(layer.options.host,fn);\n\n    if(!layer.timeshift){\n      return res$;\n    }\n\n    if(layer.timePeriod.containsYear(year-1)){\n      fn = this.fnForYear(mapped,year-1);\n\n      let prev$ = this.metadata.getTimeDimension(layer.host,fn);\n\n      res$ = forkJoin(...[prev$,res$]).pipe(\n        map((years:Date[][])=> years[0].concat(years[1])));\n    }\n\n    return res$.pipe(\n        map(dates=>{\n          return dates.map(d=>{\n            let res = new Date(d.getTime());\n            res.setUTCDate(d.getUTCDate()-layer.timeshift*layer.timestep);\n            return res;\n          });\n        }),\n        map(dates=>dates.filter((d,i)=>(i>=Math.abs(layer.timeshift))&&(d.getUTCFullYear()===year)))\n    );\n  }\n}\n","\nimport { Bounds } from './bounds';\nimport { Observable } from 'rxjs';\n\nconst NAMED_OPTIONS:{[key:string]:string}={\n  host:'namedHosts',\n  interval:'namedIntervals'\n}\n\nfunction clone(v:any):any{\n  return JSON.parse(JSON.stringify(v));\n}\n\nfunction matchFirstDefinedKey(keys:Array<string>,lhs:any,rhs:any):boolean{\n  for(let k of keys){\n    if(lhs[k]&&rhs[k]){\n      return lhs[k]===rhs[k];\n    }\n  }\n  return false;\n}\n\nfunction mergeArraysByKeys(keys:Array<string>,...sources:Array<Array<Publication>>):Array<any>{\n  if(!sources.length){\n    return [];\n  }\n\n  var result = (<Array<any>>clone(sources[0])).map(p=>new Publication(p));\n\n  for(var i=1;i<sources.length;i++){\n    var source = sources[i];\n    for(var j=0;j<source.length;j++){\n      var publication:Publication = source[j];\n      var match = result.findIndex((pub:any)=>matchFirstDefinedKey(keys,pub,publication));\n      if(match>=0){\n        var options = Object.assign({},publication.options||{},result[match].options||{})\n        result[match] = Object.assign(new Publication(),publication,result[match]);\n        result[match].options = options;\n      } else {\n        result.push(new Publication(clone(publication)));\n      }\n    }\n  }\n  result = result.filter(p=>!p.skip);\n  return result;\n}\n\nfunction propagate(target:any,source:any,skipPublications?:boolean){\n  target.options = Object.assign({},source.options||{},target.options||{});\n\n  if(!skipPublications){\n    target.publications = mergeArraysByKeys(['timestep','label'],target.publications||[],source.publications||[]);\n//    console.log(target.publications);\n  }\n}\n\nfunction instantiateNamedOptions(dest:any,source:any){\n  for(var key in NAMED_OPTIONS){\n    const configKey:string = NAMED_OPTIONS[key];\n    if(!source[configKey]){\n      continue;\n    }\n\n    if(!dest[key]||(typeof(dest[key])!=='string')){\n      continue;\n    }\n\n    const lookup = dest[key];\n    dest[key] = source[configKey][lookup];\n  }\n}\n\nexport interface CatalogHost{\n  url?:string;\n  software?:string;\n  downloadLink?:string;\n}\n\nexport class CatalogOptions{\n  host?:CatalogHost;\n  downloadPath?:string;\n  filepath?:string;\n  palette?:string;\n  colorscalerange?:Array<number>;\n  legend?:string;\n  mapOptions?:any;\n  timeFormat?:string;\n  publisher?:string;\n  publisherURL?:string;\n  units?:string;\n  smallExtent?:boolean;\n  vectors?:\"point\"|\"line\"|\"polygon\";\n  styles?:any;\n  publicationLabel?:string;\n  variable?:string;\n  start?:string;\n  end?:string;\n}\n\nexport class Catalog{\n  name:string;\n  themes:Array<Theme> = [];\n  options:CatalogOptions;\n  publications:Array<Publication>;\n\n  constructor(config?:any){\n    if(!config){\n      return;\n    }\n    Object.assign(this,config);\n    this.themes = config.themes.map((t:any)=>new Theme(t));\n    this.propagateOptions();\n    this.instantiateNamedOptions();\n  }\n\n  propagateOptions(){\n    this.themes.forEach(t=>{\n      propagate(t,this);\n      t.propagateOptions();\n    });\n  }\n\n  instantiateNamedOptions(){\n    if(this.publications){\n      this.publications.forEach(p=>p.instantiateNamedOptions(this));\n    }\n    this.themes.forEach(t=>t.instantiateNamedOptions(this));\n  }\n\n  allLayers():Array<Layer>{\n    return this.themes.map(t=>t.layers).reduce((prev,curr)=>prev.concat(curr), []);\n  }\n}\n\nexport class Theme{\n  name:string;\n  dataCreator?:string;\n  skip:boolean;\n  layers:Array<Layer> = [];\n  path:string;\n  options:CatalogOptions;\n  publications:Array<Publication>;\n\n  constructor(config?:any){\n    if(!config){\n      return;\n    }\n    Object.assign(this,config);\n\n    if(config.layers){\n      this.layers = config.layers.map((l:any)=>new Layer(l));\n    } else {\n      this.layers = [];\n    }\n  }\n\n  propagateOptions(){\n    this.layers.forEach(l=>{\n      propagate(l,this);\n      l.propagateOptions();\n      l.dataCreator = l.dataCreator || this.dataCreator;\n    });\n  }\n\n  instantiateNamedOptions(source:any){\n    instantiateNamedOptions(this.options,source);\n    this.publications.forEach(p=>p.instantiateNamedOptions(source));\n    this.layers.forEach(l=>l.instantiateNamedOptions(source));\n  }\n\n}\n\nexport class Layer{\n  publications:Array<Publication> = [];\n  skip:boolean;\n  options:CatalogOptions = new CatalogOptions();\n  placeholder:boolean;\n  name:string;\n  dataCreator?:string;\n  path:string;\n  [key:string]:any;\n  spatialExtent: Observable<Bounds>;\n\n  constructor(config?:any){\n    if(!config){\n      return;\n    }\n    Object.assign(this,config);\n    if(config.publications){\n      this.publications = config.publications.map((p:any)=>new Publication(p));\n    } else {\n      this.publications = [];\n    }\n  }\n\n  propagateOptions(){\n    this.publications.forEach(p=>{\n      propagate(p,this,true);\n    })\n  }\n\n  instantiateNamedOptions(source:any){\n    instantiateNamedOptions(this.options,source);\n    this.publications.forEach(p=>p.instantiateNamedOptions(source));\n  }\n}\n\nexport class Publication{\n  timestep:string;\n  timestepMultiplier:number;\n  timestepReference:string;\n  label:string;\n  skip:boolean;\n  options:CatalogOptions = new CatalogOptions();\n  pointdata?:PointData;\n\n  constructor(config?:any){\n    if(!config){\n      return;\n    }\n    Object.assign(this,config);\n  }\n\n  instantiateNamedOptions(source:any){\n    instantiateNamedOptions(this.options,source);\n  }\n}\n\nexport interface PointData{\n  protocol:string;\n  url:string;\n  coordinates:{[key:string]:number};\n  tags:{[key:string]:Array<string|LayerTagValue>};\n  labels?:string[];\n  defaultVariable:string;\n  displayFormat?:string;\n  chart?:string;\n  exclude?:string[];\n}\n\nexport interface LayerPropertyStyle{\n  hyperlink?:boolean;\n  placeholder?:string;\n}\n\nexport interface LayerTagValue{\n  value:string;\n  label:string;\n}\n\nexport interface LayerTagMap{\n  [key:string]:LayerTagValue[]\n}\n","import { Layer } from './catalog';\nimport { InterpolationService } from '../interpolation.service';\n\nexport type MappedLayerTypes = 'wms' | 'vector' | 'circle';\n\nexport interface MappedLayerOptions {\n  legend?: boolean;\n  publication?: number;\n  date?: Date,\n\n  [key: string]: any;\n}\n\nconst PUBLICATION_PRIORITY_ORDER = [\n  'annual',\n  'monthly',\n  'daily'\n];\n\nconst MAKE_DOWNLOAD_URL:{[key:string]:(a:string,s:string,ml:MappedLayer)=>string} = {\n  tds:(host:string,fn:string)=>{\n    let components = fn.split('/');\n    components.pop();\n    return `${host}/catalog/${components.join('/')}/catalog.html`;\n  },\n  static:(host:string,fn:string,ml:MappedLayer)=>{\n    return ml.layer.options.downloadPath || `${host}${fn}`;\n  }\n}\n\nexport const WMS_PARAMETER_NAMES:{[key:string]:Array<string>} = {\n  tds: [\n    'layers',\n    'styles',\n    'colorscalerange',\n    'abovemaxcolor',\n    'belowmincolor',\n    'time',\n    'transparent',\n    'logscale'\n  ],\n  geoserver: [\n    'transparent',\n    'layers'\n  ],\n  esri: [\n    'layers',\n    'styles',\n    'transparent'\n  ]\n};\n\nexport const WMS_URL_FORMAT:{[key:string]:string} = {\n  tds:'/wms/',\n  geoserver:'/wms/',\n  esri:'/'\n};\n\nexport const INTERPOLATED_PARAMETERS = [\n  'styles',\n  'layers'\n];\n\nexport class MappedLayer {\n  constructor(data?:any){\n    Object.assign(this,data||{});\n    if(this.layerType===undefined){\n      this.layerType = this.wmsParameters?'wms':undefined;\n    }\n  }\n\n  title:string;\n\n  layer: Layer;\n  options: MappedLayerOptions = {\n    date: new Date(2016, 0, 1) // Set to most recent available date\n  };\n\n  legendURL:string;\n  layerType: MappedLayerTypes;\n  retrievedMetadata: {[key:string]:any} = {};\n\n  interpolatedFile:string;\n  interpolatedDownloadURL:string;\n  url: string;\n  wmsParameters: any = {};\n  flattenedSettings: any = {};\n  staticData:any;\n  opacity = 1.0;\n\n  _styleFunc: (f:any)=>void;\n\n  description():string{\n    return this.layer.description ||\n      (this.retrievedMetadata &&\n       this.retrievedMetadata[this.layer.descriptionField||'long_name']);\n  }\n\n  leading0(n: number): string {\n    if (n < 10) {\n      return '0' + n;\n    }\n    return '' + n;\n  }\n\n  defaultPublication():number{\n    const priorityPublication = PUBLICATION_PRIORITY_ORDER.find(\n      pp=>this.layer.publications.findIndex(lp=>(lp.timestep===pp)||(lp.label===pp))>=0);\n    if(priorityPublication){\n      return this.layer.publications.findIndex(p=>(p.label===priorityPublication)||(p.timestep===priorityPublication));\n    }\n    return this.layer.publications.findIndex(p => !p.skip);\n  }\n\n  update() {\n    this.options.publication = (this.options.publication === undefined) ?\n      this.defaultPublication() :\n      this.options.publication;\n\n    const publication = this.layer.publications[this.options.publication];\n\n    const host = publication.options.host || {};\n    const baseURL = host.url;\n\n    const software = host.software || 'tds';\n\n    this.interpolatedFile = (publication.options.filepath || '')\n    const mapParams = Object.assign({},\n      this.layer,\n      publication.options,\n      publication.options.mapOptions || {},\n      this.options.date ? {\n        decade: decadeText(this.options.date),\n        year: this.options.date.getFullYear(),\n        month: this.leading0(this.options.date.getMonth() + 1),\n        day: this.leading0(this.options.date.getDate()),\n      } : {},\n      this.options,\n      this.options.tags || {});\n\n    if (mapParams.timeFormat) {\n      mapParams['time'] = InterpolationService.interpolate(mapParams.timeFormat, mapParams);\n    }\n    mapParams.layers = mapParams.layers || mapParams.layer || mapParams.variable;\n    INTERPOLATED_PARAMETERS.forEach(p=>{\n      if(mapParams[p]){\n        mapParams[p] = InterpolationService.interpolate(mapParams[p],mapParams);\n      }\n    });\n    this.interpolatedFile = InterpolationService.interpolate(this.interpolatedFile, mapParams);\n    this.url = baseURL + WMS_URL_FORMAT[software] + this.interpolatedFile;\n    if(MAKE_DOWNLOAD_URL[software]){\n      this.interpolatedDownloadURL=MAKE_DOWNLOAD_URL[software](host.downloadLink||baseURL,this.interpolatedFile,this);\n    } else {\n      this.interpolatedDownloadURL=host.downloadLink||null;\n    }\n\n    if(this.layer.options.legend==='wms'){\n      this.legendURL = this.url + '?service=WMS&request=GetLegendGraphic&format=image/png';\n      this.legendURL += `&layer=${InterpolationService.interpolate(mapParams.layers,mapParams)}`;\n      this.legendURL += '&version=1.1.1';\n      this.options.legend=true;\n    } else {\n      this.legendURL=null;\n    }\n\n    if (mapParams.vectors) {\n      this.wmsParameters = null;\n      this.layerType = 'vector';\n      let styles = mapParams.styles || {};\n      this._styleFunc = (f:any)=>{\n        return styles;\n      }\n\n      if(mapParams.vectors==='point' && mapParams.styles){\n        this.layerType = 'circle';\n      }\n    } else {\n      this.layerType = 'wms';\n      this.wmsParameters = {};\n      WMS_PARAMETER_NAMES[software].forEach(param => {\n        if (mapParams[param]) {\n          this.wmsParameters[param] = mapParams[param];\n        }\n      });\n    }\n    this.flattenedSettings = mapParams;\n\n    if(mapParams.titleFormat){\n      this.title = InterpolationService.interpolate(mapParams.titleFormat,mapParams)\n    } else {\n      this.title = this.layer.name;\n    }\n  }\n}\n\nfunction decadeText(d: Date): string {\n  let decade = d.getFullYear().toString().slice(0, 3);\n  return `${decade}0-${decade}9`;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Catalog, Layer } from './data/catalog';\nimport { Observable } from 'rxjs';\nimport { tap, map } from 'rxjs/operators';\nimport { Bounds } from './data/bounds';\nimport { MappedLayer } from './data/mapped-layer';\nimport { MetadataService } from './metadata.service';\n\n@Injectable()\nexport class CatalogService {\n  current:Catalog;\n\n  constructor(private _http:HttpClient, private metadata:MetadataService){\n  }\n\n  load(catalogJSON:any){\n    this.current = new Catalog(catalogJSON);\n\n    this.current.allLayers().filter(l=>l.options.smallExtent).forEach(l=>{\n      l.spatialExtent = this.findExtentOfLayer(l)\n    });\n  }\n\n  loadFrom(path:string):Observable<Catalog>{\n    return this._http.get(path).pipe(\n      tap(json=>this.load(json)),\n      map(_=>this.current));\n\n    //   var result = new Promise<Catalog>((res,rej)=>{\n    //     this._http.get(path).subscribe(json=>{\n    //       this.load(json);\n    //       res(this.current);\n    //     });\n    //   });\n\n    // return from(result);\n  }\n\n  findExtentOfLayer(l: Layer):Observable<Bounds>{\n    const tmp = new MappedLayer();\n    tmp.layer = l;\n    tmp.update();\n    return this.metadata.getSpatialExtent(tmp);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Location} from '@angular/common';\n\n@Injectable()\nexport class MapViewParameterService {\n  constructor(private _location?: Location) {\n\n  }\n\n  static parameterNames:Array<string> = [];\n\n  current():any{\n    if(!this._location){\n      return {};\n    }\n\n    let path = this._location.path().split('/');\n    if(path.length>MapViewParameterService.parameterNames.length){\n      path.shift();\n    }\n    let result:any = {};\n    MapViewParameterService.parameterNames.forEach((p,i)=>result[p]=path[i]||'_');\n    return result;\n  }\n\n  update(changes:any){\n    if(!this._location){\n      return;\n    }\n\n    let updated = this.current();\n    Object.assign(updated,changes);\n    this._location.go(this.constructRoute(updated));\n  }\n\n  retrieveFromRoute(route:any){\n    let result:any = {};\n    for(let name of MapViewParameterService.parameterNames){\n        result[name] = route.snapshot.params[name];\n    }\n    return result;\n  };\n\n  constructRoute(parameters:any){\n    return MapViewParameterService.parameterNames.map(n=>parameters[n]||'_').join('/');\n  }\n\n  routerPaths(/*component:any*/):Array<any>{\n    let result:Array<any> = [];\n    let path = '';\n    result.push(path);\n//    result.push({path:path,component:component});\n    for(let name of MapViewParameterService.parameterNames){\n      path += `:${name}`;\n//      result.unshift({path:path,component:component});\n      result.unshift(path);\n      path += '/';\n    }\n    return result;\n  }\n}\n","import { Injectable } from '@angular/core';\n//const proj4 = require('proj4');\n//const Proj = proj4.Proj;\n//const defs = proj4.defs;\n//proj4.InterfaceProjection;\n//const InterfaceCoordinates = proj4.InterfaceCoordinates;\n//const TemplateCoordinates = proj4.TemplateCoordinates;\n\n//const proj4 = require('proj4').default;\nimport * as proj4 from 'proj4';\nconst D2R = Math.PI/180;\n\n@Injectable()\nexport class WMSService {\n\n  static TILE_SIZE=256;\n  static TILE_WIDTH=WMSService.TILE_SIZE;\n  static TILE_HEIGHT=WMSService.TILE_SIZE;\n\n  constructor() {\n    this.webMercator = ((<any>proj4).default || proj4).Proj('EPSG:3857');\n    //this.webMercator = proj4.Proj(proj4.defs('EPSG:3857'));\n  }\n\n  public webMercator: any;\n\n  public pointToWebMercator(pt:any):{x:number,y:number}{\n    var ptRadians = {x:pt.lng()*D2R,y:pt.lat()*D2R};\n    var ptWM = this.webMercator.forward({x:ptRadians.x,y:ptRadians.y});\n    return ptWM;\n  };\n\n  public computeTileBounds(map:any,coord:any,zoom:number):string{\n    var proj = map.getProjection();\n    var zfactor = Math.pow(2, zoom);\n    var xScale = WMSService.TILE_WIDTH/zfactor;\n    var yScale = WMSService.TILE_HEIGHT/zfactor;\n\n    var topLeftLatLng = proj.fromPointToLatLng({x:coord.x * xScale, y:coord.y * yScale});\n    var bottomRightLatLng = proj.fromPointToLatLng({x:(coord.x + 1) * xScale, y:(coord.y + 1) * yScale});\n\n    var topLeftWebMercator = this.pointToWebMercator(topLeftLatLng);\n    var bottomRightWebMercator = this.pointToWebMercator(bottomRightLatLng);\n\n    if(topLeftWebMercator.x > bottomRightWebMercator.x){\n      if(topLeftLatLng.lng()===180.0){\n        topLeftWebMercator.x = -topLeftWebMercator.x;\n      } else {\n        bottomRightWebMercator.x = -bottomRightWebMercator.x;\n      }\n    }\n    var bbox = [topLeftWebMercator.x,bottomRightWebMercator.y,bottomRightWebMercator.x,topLeftWebMercator.y];\n    var bboxTxt = bbox.map((n)=>n.toFixed(20).replace(/\\.?0+$/,\"\")); // Avoid e notation on small numbers\n    return bboxTxt.join(',');\n  };\n\n  public buildImageMap(getMap:()=>any,\n                       getURL:(zoom:number)=>string,\n                       getOptions?:(zoom:number)=>any,\n                       getOpacity?:()=>number):any{\n    var me = this;\n    return new (<any>window).google.maps.ImageMapType({\n      getTileUrl: function(coord:any,zoom:number):string{\n        var theMap = getMap();\n        if(!theMap){\n          return '';\n        }\n\n\n        var bbox = me.computeTileBounds(theMap,coord,zoom);\n\n        var url = getURL(zoom) + '&service=WMS&version=1.1.1&request=GetMap';\n        url += \"&BBOX=\" + bbox;      // set bounding box\n        url += \"&FORMAT=image/png\" ; //WMS format\n\n        var layerParams = getOptions?getOptions(zoom):{};\n        layerParams.width = WMSService.TILE_WIDTH;\n        layerParams.height = WMSService.TILE_HEIGHT;\n        for(var key in layerParams){\n          url += '&'+key+'='+layerParams[key];\n        }\n        url += \"&SRS=EPSG:3857\";     //set Web Mercator\n        return url;\n      },\n      tileSize:new (<any>window).google.maps.Size(WMSService.TILE_SIZE,WMSService.TILE_SIZE),\n      isPng:true,\n      opacity:getOpacity?getOpacity():1.0\n    });\n  };\n\n}\n","import { Injectable } from '@angular/core';\n//import * as proj4 from 'proj4';\nimport * as proj4 from 'proj4';\n//const proj4 = require('proj4').default;\n\n@Injectable()\nexport class ProjectionService {\n\n  constructor() {\n\n  }\n\n  proj4(){\n    return proj4;\n  }\n}\n","\nexport interface TableRow{\n  [key:string]:any;\n}\n\nexport function parseCSV(txt:string):TableRow[]{\n  let lines = txt.split('\\n');\n  let header = lines[0];\n  lines = lines.slice(1);\n  let columns = header.split(',');\n\n  return lines.filter(ln=>ln.length).map(ln=>{\n    let data = ln.split(',');\n\n    let result:TableRow = {};\n    data.forEach((val,i)=>{\n      result[columns[i]] = parseVal(val);\n    });\n    return result;\n  });\n}\n\nfunction parseVal(val:string):any{\n\n  // Try date...\n  let components = val.split('-');\n  if(components.length===3){\n    let dateComponents = components.map(c=>+c);\n    if(!dateComponents.some(isNaN)){\n      return new Date(Date.UTC(dateComponents[0],dateComponents[1]-1,dateComponents[2]));\n    }\n  }\n\n  if(val===''){\n    return val;\n  }\n\n  // Try numeric\n  let numeric:number = +val;\n  if(!isNaN(numeric)){\n    return numeric;\n  }\n\n  return val;\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { TreeFilterService } from './tree-filter.service';\nimport { PaletteService } from './palette.service';\nimport { TimeUtilsService } from './time-utils.service';\nimport { StaticDataService } from './static-data.service';\nimport { MetadataService } from './metadata.service';\nimport { OpendapService } from './opendap.service';\nimport { TimeseriesService } from './timeseries.service';\nimport { PointSelectionService } from './point-selection.service';\nimport { AvailableDatesService } from './available-dates.service';\nimport { CatalogService } from './catalog.service';\nimport { MapViewParameterService } from './map-view.service';\nimport { WMSService } from './wms.service';\nimport { ProjectionService } from './projection.service';\n\nexport * from './data/catalog';\nexport * from './data/mapped-layer';\nexport * from './data/tree';\nexport * from './data/bounds';\nexport * from './data/actions';\n\nexport * from './wms.service';\nexport * from './projection.service';\nexport * from './map-view.service';\nexport * from './interpolation.service';\nexport * from './available-dates.service';\nexport * from './point-selection.service';\nexport * from './metadata.service';\nexport * from './catalog.service';\nexport * from './palette.service';\nexport * from './static-data.service';\nexport * from './opendap.service';\nexport * from './timeseries.service';\nexport * from './time-utils.service';\nexport * from './tree-filter.service';\n\nexport * from './parsing/csv';\n\nconst services = [\n  //$serviceList\n  AvailableDatesService,\n  PointSelectionService,\n  TimeseriesService,\n  StaticDataService,\n  MetadataService,\n  OpendapService,\n  PaletteService,\n  TimeUtilsService,\n  WMSService,\n  MapViewParameterService,\n  ProjectionService,\n  CatalogService,\n  TreeFilterService\n];\n\n//import { CSVService } from './src/csv.service';\n\n//$importList\n\n//$exportList\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  declarations: [],\n  exports: [],\n  providers: services\n})\nexport class MapWaldCoreModule {\n  static forRoot(moduleInitialisation: any): ModuleWithProviders {\n    return {\n      ngModule: MapWaldCoreModule,\n      providers: services\n    };\n  }\n}\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}