import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
export function utcDate(y, m, d) {
    return new Date(Date.UTC(y, m, d));
}
export function utcDateCopy(d) {
    return utcDate(d.getUTCFullYear(), d.getUTCMonth(), d.getUTCDate());
}
var TimeUtilsService = /** @class */ (function () {
    function TimeUtilsService() {
        this.specialDates = {
            yesterday: function () {
                var d = new Date();
                d.setDate(d.getDate() - 1);
                return d;
            }
        };
    }
    TimeUtilsService.prototype.convertDate = function (d) {
        if (!d) {
            d = new Date();
        }
        var date;
        if (typeof (d) === 'string') {
            var dateText = d;
            if (this.specialDates[dateText]) {
                date = this.specialDates[dateText]();
            }
            else {
                var _a = tslib_1.__read(d.split('-').map(function (c) { return +c; }), 4), year = _a[0], month = _a[1], day = _a[2], other = _a[3];
                date = utcDate(year, month, day);
            }
        }
        else {
            date = d;
        }
        return {
            day: date.getUTCDate(),
            month: date.getUTCMonth() + 1,
            year: date.getUTCFullYear()
        };
    };
    TimeUtilsService.prototype.datesEqual = function (lhs, rhs) {
        if (!lhs || !rhs) {
            return false;
        }
        return (lhs.year === rhs.year) &&
            (lhs.month === rhs.month) &&
            (lhs.day === rhs.day);
    };
    TimeUtilsService = tslib_1.__decorate([
        Injectable(),
        tslib_1.__metadata("design:paramtypes", [])
    ], TimeUtilsService);
    return TimeUtilsService;
}());
export { TimeUtilsService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZS11dGlscy5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbWFwLXdhbGQvIiwic291cmNlcyI6WyJ0aW1lLXV0aWxzLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFjM0MsTUFBTSxVQUFVLE9BQU8sQ0FBQyxDQUFRLEVBQUMsQ0FBUyxFQUFDLENBQVM7SUFDbEQsT0FBTyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNuQyxDQUFDO0FBRUQsTUFBTSxVQUFVLFdBQVcsQ0FBQyxDQUFTO0lBQ25DLE9BQU8sT0FBTyxDQUFDLENBQUMsQ0FBQyxjQUFjLEVBQUUsRUFBQyxDQUFDLENBQUMsV0FBVyxFQUFFLEVBQUMsQ0FBQyxDQUFDLFVBQVUsRUFBRSxDQUFDLENBQUM7QUFDcEUsQ0FBQztBQUdEO0lBRUU7UUFJQSxpQkFBWSxHQUFnQztZQUMxQyxTQUFTLEVBQUU7Z0JBQ1QsSUFBSSxDQUFDLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQztnQkFDbkIsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7Z0JBQzNCLE9BQU8sQ0FBQyxDQUFDO1lBQ1gsQ0FBQztTQUNGLENBQUE7SUFSRCxDQUFDO0lBVUQsc0NBQVcsR0FBWCxVQUFZLENBQWtCO1FBQzVCLElBQUcsQ0FBQyxDQUFDLEVBQUM7WUFDSixDQUFDLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQztTQUNoQjtRQUVELElBQUksSUFBWSxDQUFDO1FBQ2pCLElBQUcsT0FBTSxDQUFDLENBQUMsQ0FBQyxLQUFLLFFBQVEsRUFBQztZQUN4QixJQUFJLFFBQVEsR0FBVSxDQUFDLENBQUM7WUFDeEIsSUFBRyxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxFQUFDO2dCQUM3QixJQUFJLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDO2FBQ3RDO2lCQUFNO2dCQUNELElBQUEscUVBQWtELEVBQWpELFlBQUksRUFBQyxhQUFLLEVBQUMsV0FBRyxFQUFDLGFBQWtDLENBQUM7Z0JBQ3ZELElBQUksR0FBRyxPQUFPLENBQUMsSUFBSSxFQUFDLEtBQUssRUFBQyxHQUFHLENBQUMsQ0FBQzthQUNoQztTQUNGO2FBQU07WUFDTCxJQUFJLEdBQUcsQ0FBQyxDQUFDO1NBQ1Y7UUFFRCxPQUFPO1lBQ0wsR0FBRyxFQUFFLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDdEIsS0FBSyxFQUFFLElBQUksQ0FBQyxXQUFXLEVBQUUsR0FBRyxDQUFDO1lBQzdCLElBQUksRUFBRSxJQUFJLENBQUMsY0FBYyxFQUFFO1NBQzVCLENBQUM7SUFDSixDQUFDO0lBRUQscUNBQVUsR0FBVixVQUFXLEdBQWlCLEVBQUMsR0FBaUI7UUFDNUMsSUFBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBQztZQUNkLE9BQU8sS0FBSyxDQUFDO1NBQ2Q7UUFFRCxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksS0FBSyxHQUFHLENBQUMsSUFBSSxDQUFDO1lBQ3ZCLENBQUMsR0FBRyxDQUFDLEtBQUssS0FBSyxHQUFHLENBQUMsS0FBSyxDQUFDO1lBQ3pCLENBQUMsR0FBRyxDQUFDLEdBQUcsS0FBSyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7SUFFL0IsQ0FBQztJQWhEVSxnQkFBZ0I7UUFENUIsVUFBVSxFQUFFOztPQUNBLGdCQUFnQixDQWlENUI7SUFBRCx1QkFBQztDQUFBLEFBakRELElBaURDO1NBakRZLGdCQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5nYkRhdGVTdHJ1Y3QgfSBmcm9tIFwiQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXBcIjtcblxuZXhwb3J0IGludGVyZmFjZSBVVENEYXRlIHtcbiAgZ2V0VGltZSgpOiBudW1iZXI7XG4gIGdldFVUQ0Z1bGxZZWFyKCk6IG51bWJlcjtcbiAgZ2V0VVRDTW9udGgoKTpudW1iZXI7XG4gIGdldFVUQ0RhdGUoKTpudW1iZXI7XG5cbiAgc2V0VVRDRnVsbFllYXIobjogbnVtYmVyKTp2b2lkO1xuICBzZXRVVENNb250aChuOm51bWJlcik6dm9pZDtcbiAgc2V0VVRDRGF0ZShuOm51bWJlcik6dm9pZDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHV0Y0RhdGUoeTpudW1iZXIsbT86bnVtYmVyLGQ/Om51bWJlcik6VVRDRGF0ZXtcbiAgcmV0dXJuIG5ldyBEYXRlKERhdGUuVVRDKHksbSxkKSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1dGNEYXRlQ29weShkOlVUQ0RhdGUpe1xuICByZXR1cm4gdXRjRGF0ZShkLmdldFVUQ0Z1bGxZZWFyKCksZC5nZXRVVENNb250aCgpLGQuZ2V0VVRDRGF0ZSgpKTtcbn1cblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFRpbWVVdGlsc1NlcnZpY2Uge1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuXG4gIH1cblxuICBzcGVjaWFsRGF0ZXM6IHtba2V5OnN0cmluZ106KCgpID0+IERhdGUpfSA9IHtcbiAgICB5ZXN0ZXJkYXk6ICgpID0+IHtcbiAgICAgIHZhciBkID0gbmV3IERhdGUoKTtcbiAgICAgIGQuc2V0RGF0ZShkLmdldERhdGUoKSAtIDEpO1xuICAgICAgcmV0dXJuIGQ7XG4gICAgfVxuICB9XG5cbiAgY29udmVydERhdGUoZDooVVRDRGF0ZXxzdHJpbmcpKTpOZ2JEYXRlU3RydWN0e1xuICAgIGlmKCFkKXtcbiAgICAgIGQgPSBuZXcgRGF0ZSgpO1xuICAgIH1cblxuICAgIHZhciBkYXRlOlVUQ0RhdGU7XG4gICAgaWYodHlwZW9mKGQpID09PSAnc3RyaW5nJyl7XG4gICAgICB2YXIgZGF0ZVRleHQ6c3RyaW5nID0gZDtcbiAgICAgIGlmKHRoaXMuc3BlY2lhbERhdGVzW2RhdGVUZXh0XSl7XG4gICAgICAgIGRhdGUgPSB0aGlzLnNwZWNpYWxEYXRlc1tkYXRlVGV4dF0oKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciBbeWVhcixtb250aCxkYXksb3RoZXJdID0gZC5zcGxpdCgnLScpLm1hcChjID0+ICtjKTtcbiAgICAgICAgZGF0ZSA9IHV0Y0RhdGUoeWVhcixtb250aCxkYXkpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBkYXRlID0gZDtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgZGF5OiBkYXRlLmdldFVUQ0RhdGUoKSxcbiAgICAgIG1vbnRoOiBkYXRlLmdldFVUQ01vbnRoKCkgKyAxLFxuICAgICAgeWVhcjogZGF0ZS5nZXRVVENGdWxsWWVhcigpXG4gICAgfTtcbiAgfVxuXG4gIGRhdGVzRXF1YWwobGhzOk5nYkRhdGVTdHJ1Y3QscmhzOk5nYkRhdGVTdHJ1Y3QpOmJvb2xlYW57XG4gICAgaWYoIWxocyB8fCAhcmhzKXtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICByZXR1cm4gKGxocy55ZWFyID09PSByaHMueWVhcikgJiZcbiAgICAgICAgICAgKGxocy5tb250aCA9PT0gcmhzLm1vbnRoKSAmJlxuICAgICAgICAgICAobGhzLmRheSA9PT0gcmhzLmRheSk7XG5cbiAgfVxufVxuIl19