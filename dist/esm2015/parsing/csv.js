export function parseCSV(txt, options) {
    let columns = options && options.columns;
    let lines = txt.split('\n');
    if (!columns) {
        let header = lines[0];
        lines = lines.slice(1);
        columns = header.split(',');
    }
    return lines.filter(ln => ln.length).map(ln => {
        let data = ln.split(',');
        let result = {};
        data.forEach((val, i) => {
            result[columns[i]] = parseVal(val);
        });
        return result;
    });
}
function parseVal(val) {
    // Try date...
    let components = val.split('-');
    if (components.length === 3) {
        let dateComponents = components.map(c => +c);
        if (!dateComponents.some(isNaN)) {
            return new Date(Date.UTC(dateComponents[0], dateComponents[1] - 1, dateComponents[2]));
        }
    }
    if (val === '') {
        return val;
    }
    // Try numeric
    let numeric = +val;
    if (!isNaN(numeric)) {
        return numeric;
    }
    return val;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3N2LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbWFwLXdhbGQvIiwic291cmNlcyI6WyJwYXJzaW5nL2Nzdi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFTQSxNQUFNLFVBQVUsUUFBUSxDQUFDLEdBQVUsRUFBQyxPQUF5QjtJQUMzRCxJQUFJLE9BQU8sR0FBRyxPQUFPLElBQUUsT0FBTyxDQUFDLE9BQU8sQ0FBQztJQUN2QyxJQUFJLEtBQUssR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzVCLElBQUcsQ0FBQyxPQUFPLEVBQUM7UUFDVixJQUFJLE1BQU0sR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDdEIsS0FBSyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDdkIsT0FBTyxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7S0FDN0I7SUFFRCxPQUFPLEtBQUssQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFBLEVBQUUsQ0FBQSxFQUFFLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQSxFQUFFO1FBQ3pDLElBQUksSUFBSSxHQUFHLEVBQUUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7UUFFekIsSUFBSSxNQUFNLEdBQVksRUFBRSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLEVBQUMsQ0FBQyxFQUFDLEVBQUU7WUFDcEIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNyQyxDQUFDLENBQUMsQ0FBQztRQUNILE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQztBQUVELFNBQVMsUUFBUSxDQUFDLEdBQVU7SUFFMUIsY0FBYztJQUNkLElBQUksVUFBVSxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDaEMsSUFBRyxVQUFVLENBQUMsTUFBTSxLQUFHLENBQUMsRUFBQztRQUN2QixJQUFJLGNBQWMsR0FBRyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQSxFQUFFLENBQUEsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMzQyxJQUFHLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBQztZQUM3QixPQUFPLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxFQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsR0FBQyxDQUFDLEVBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNwRjtLQUNGO0lBRUQsSUFBRyxHQUFHLEtBQUcsRUFBRSxFQUFDO1FBQ1YsT0FBTyxHQUFHLENBQUM7S0FDWjtJQUVELGNBQWM7SUFDZCxJQUFJLE9BQU8sR0FBVSxDQUFDLEdBQUcsQ0FBQztJQUMxQixJQUFHLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxFQUFDO1FBQ2pCLE9BQU8sT0FBTyxDQUFDO0tBQ2hCO0lBRUQsT0FBTyxHQUFHLENBQUM7QUFDYixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXG5leHBvcnQgaW50ZXJmYWNlIFRhYmxlUm93e1xuICBba2V5OnN0cmluZ106YW55O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIENzdlBhcnNlck9wdGlvbnMge1xuICBjb2x1bW5zPzogc3RyaW5nW107XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUNTVih0eHQ6c3RyaW5nLG9wdGlvbnM/OkNzdlBhcnNlck9wdGlvbnMpOlRhYmxlUm93W117XG4gIGxldCBjb2x1bW5zID0gb3B0aW9ucyYmb3B0aW9ucy5jb2x1bW5zO1xuICBsZXQgbGluZXMgPSB0eHQuc3BsaXQoJ1xcbicpO1xuICBpZighY29sdW1ucyl7XG4gICAgbGV0IGhlYWRlciA9IGxpbmVzWzBdO1xuICAgIGxpbmVzID0gbGluZXMuc2xpY2UoMSk7XG4gICAgY29sdW1ucyA9IGhlYWRlci5zcGxpdCgnLCcpO1xuICB9XG5cbiAgcmV0dXJuIGxpbmVzLmZpbHRlcihsbj0+bG4ubGVuZ3RoKS5tYXAobG49PntcbiAgICBsZXQgZGF0YSA9IGxuLnNwbGl0KCcsJyk7XG5cbiAgICBsZXQgcmVzdWx0OlRhYmxlUm93ID0ge307XG4gICAgZGF0YS5mb3JFYWNoKCh2YWwsaSk9PntcbiAgICAgIHJlc3VsdFtjb2x1bW5zW2ldXSA9IHBhcnNlVmFsKHZhbCk7XG4gICAgfSk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIHBhcnNlVmFsKHZhbDpzdHJpbmcpOmFueXtcblxuICAvLyBUcnkgZGF0ZS4uLlxuICBsZXQgY29tcG9uZW50cyA9IHZhbC5zcGxpdCgnLScpO1xuICBpZihjb21wb25lbnRzLmxlbmd0aD09PTMpe1xuICAgIGxldCBkYXRlQ29tcG9uZW50cyA9IGNvbXBvbmVudHMubWFwKGM9PitjKTtcbiAgICBpZighZGF0ZUNvbXBvbmVudHMuc29tZShpc05hTikpe1xuICAgICAgcmV0dXJuIG5ldyBEYXRlKERhdGUuVVRDKGRhdGVDb21wb25lbnRzWzBdLGRhdGVDb21wb25lbnRzWzFdLTEsZGF0ZUNvbXBvbmVudHNbMl0pKTtcbiAgICB9XG4gIH1cblxuICBpZih2YWw9PT0nJyl7XG4gICAgcmV0dXJuIHZhbDtcbiAgfVxuXG4gIC8vIFRyeSBudW1lcmljXG4gIGxldCBudW1lcmljOm51bWJlciA9ICt2YWw7XG4gIGlmKCFpc05hTihudW1lcmljKSl7XG4gICAgcmV0dXJuIG51bWVyaWM7XG4gIH1cblxuICByZXR1cm4gdmFsO1xufVxuIl19